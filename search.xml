<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>技术栈</title>
    <url>/%E3%80%90%E6%8A%80%E6%9C%AF%E6%A0%88%E3%80%91/</url>
    <content><![CDATA[<ul>
<li><p>所需技能</p>
<ul>
<li><p><a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/">spring framework</a></p>
</li>
<li><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/">spring boot</a></p>
</li>
<li><p><a href="https://projects.spring.io/spring-cloud/">spring cloud</a></p>
</li>
<li><p><a href="http://www.mybatis.org/mybatis-3/zh/index.html">mybatis</a></p>
</li>
<li><p><a href="http://www.redis.cn/update.html">redis</a></p>
</li>
<li><p><a href="http://www.ituring.com.cn/article/56870">git</a></p>
</li>
<li><p><a href="http://www.yiibai.com/maven/">maven</a></p>
</li>
</ul>
</li>
<li><p>其他技能</p>
<ul>
<li><p><a href="https://zookeeper.apache.org/">zookeeper</a></p>
</li>
<li><p><a href="https://ifeve.com/tcc/">TCC</a></p>
</li>
<li><p><a href="http://dubbo.io/User+Guide-zh.htm">dubbo</a></p>
</li>
<li><p><a href="http://www.axonframework.org/">axon framework</a></p>
</li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>todolist</title>
    <url>/todolist/</url>
    <content><![CDATA[<ul>
<li><p>BASE理论，CAP，AICD</p>
<p><a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=BASE%E6%A8%A1%E5%9E%8B">https://www.baidu.com/s?ie=UTF-8&amp;wd=BASE%E6%A8%A1%E5%9E%8B</a></p>
</li>
<li><p>网关</p>
</li>
<li><p>注册中心</p>
</li>
<li><p>服务发现组件</p>
</li>
<li><p>服务调用</p>
<ul>
<li><p>负责服务间调用</p>
</li>
<li><p>客户端负载均衡</p>
</li>
</ul>
</li>
<li><p>服务容错</p>
<ul>
<li><p>客户端容错</p>
</li>
<li><p>服务端容错</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>todolist</tag>
      </tags>
  </entry>
  <entry>
    <title>【cas】02 服务管理</title>
    <url>/cas/cas-02-service-management/</url>
    <content><![CDATA[<h1 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h1><blockquote>
<p>原文：<a href="https://apereo.github.io/cas/5.3.x/installation/Service-Management.html">Service-Management</a></p>
</blockquote>
<p>CAS服务管理工具允许CAS服务管理员去声明和配置哪些服务（client）可以使用CAS，<br>以及使用方式，比如认证方式是OAuth还是OIDC、认证结果必需包含哪些属性等等；<br>其核心组件是服务注册，包含了驱动CAS行为的元数据：</p>
<ul>
<li>授权服务 - 指哪些服务可以参与到cas单点登录</li>
<li>强制认证 - 提供强制认证的管理工具</li>
<li>代理控制 - 通过授予/拒绝代理认证功能进一步限制授权服务</li>
<li>主题控制 - 定义主题（即界面）</li>
</ul>
<h2 id="服务管理web应用"><a href="#服务管理web应用" class="headerlink" title="服务管理web应用"></a>服务管理web应用</h2><p>CAS提供了一个web应用，用来管理和注册服务，它是一个独立的项目，see：<br><a href="https://github.com/apereo/cas-management">cas-management</a></p>
<h2 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h2><p>服务注册设计到以下元数据：</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>服务ID（数字）</td>
</tr>
<tr>
<td>name</td>
<td>服务名称</td>
</tr>
<tr>
<td>*description</td>
<td>描述（255字符以内）</td>
</tr>
<tr>
<td>*informationUrl</td>
<td>服务信息指南的URL</td>
</tr>
<tr>
<td>*privacyUrl</td>
<td>服务隐私协议的URL</td>
</tr>
<tr>
<td>*logo</td>
<td>服务LOGO URL</td>
</tr>
<tr>
<td>serviceId</td>
<td>用正则表达式表示描述的一个逻辑服务，逻辑服务定义了一个或多个服务的URL</td>
</tr>
<tr>
<td>*theme</td>
<td>主题，用来自定义CAS UI， See <a href="https://apereo.github.io/cas/5.3.x/installation/User-Interface-Customization.html">here</a></td>
</tr>
<tr>
<td>*proxyPolicy</td>
<td>定义服务是否能够代理认证，关于代理认证，See <a href="/cas/cas-configuring-proxy-authentication/" title="here">here</a></td>
</tr>
<tr>
<td>*evaluationOrder</td>
<td>确定注册服务的判断顺序.</td>
</tr>
<tr>
<td>*requiredHandlers</td>
<td>认证处理器集合，关于服务认证，see <a href="/cas/cas-01-authn-flow/" title="here">here</a></td>
</tr>
<tr>
<td>*attributeReleasePolicy</td>
<td>属性发布协议</td>
</tr>
<tr>
<td>logoutType</td>
<td>登出类型，LogoutType.BACK_CHANNEL, LogoutType.FRONT_CHANNEL or LogoutType.NONE. See <a href="https://apereo.github.io/cas/5.3.x/installation/Logout-Single-Signout.html">here</a></td>
</tr>
<tr>
<td>responseType</td>
<td>CAS应该如何响应请求. See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Response-Type.html">here</a>.</td>
</tr>
<tr>
<td>usernameAttributeProvider</td>
<td>该provider指定那个值应该作为username，返回给客户端</td>
</tr>
<tr>
<td>accessStrategy</td>
<td>访问策略, <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Access-Strategy.html">here</a></td>
</tr>
<tr>
<td>publicKey</td>
<td>通过加密一些元素或属性，校验请求，比如PGT、credential</td>
</tr>
<tr>
<td>logoutUrl</td>
<td>登出URL，用于单点登出</td>
</tr>
<tr>
<td>properties</td>
<td>以k/v的形式抽取元数据，自定义额外属性</td>
</tr>
<tr>
<td>multifactorPolicy</td>
<td>多因子认证协议</td>
</tr>
<tr>
<td>contacts</td>
<td>联系方式</td>
</tr>
</tbody></table>
<h2 id="服务访问策略"><a href="#服务访问策略" class="headerlink" title="服务访问策略"></a>服务访问策略</h2><p>See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Access-Strategy.html">here</a>.</p>
<h2 id="代理认证协议"><a href="#代理认证协议" class="headerlink" title="代理认证协议"></a>代理认证协议</h2><p>See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Proxy-Policy.html">here</a>.</p>
<h2 id="配置必需的认证"><a href="#配置必需的认证" class="headerlink" title="配置必需的认证"></a>配置必需的认证</h2><p>See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Required-AuthN.html">here</a>.</p>
<h2 id="标签-amp-属性"><a href="#标签-amp-属性" class="headerlink" title="标签 &amp; 属性"></a>标签 &amp; 属性</h2><p>See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Custom-Properties.html">here</a>.</p>
<h2 id="联系方式-amp-owner"><a href="#联系方式-amp-owner" class="headerlink" title="联系方式 &amp; owner"></a>联系方式 &amp; owner</h2><p>See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Contacts.html">here</a>.</p>
<h2 id="超时协议"><a href="#超时协议" class="headerlink" title="超时协议"></a>超时协议</h2><p>服务注册的超时配置。<br>See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Expiration-Policy.html">here</a>.</p>
<h2 id="存储方式"><a href="#存储方式" class="headerlink" title="存储方式"></a>存储方式</h2><p>用来定义服务的存储方式.<br>See <a href="https://apereo.github.io/cas/5.3.x/installation/Service-Management.html#storage">here</a>.</p>
<h2 id="服务复制"><a href="#服务复制" class="headerlink" title="服务复制"></a>服务复制</h2><p>当部署两台服务时，如何同步进行服务的注册与删除。<br>See <a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Service-Replication.html">here</a>.</p>
]]></content>
      <tags>
        <tag>CAS</tag>
        <tag>统一认证</tag>
      </tags>
  </entry>
  <entry>
    <title>【cas】01 认证流</title>
    <url>/cas/cas-01-authn-flow/</url>
    <content><![CDATA[<h2 id="1-认证模块"><a href="#1-认证模块" class="headerlink" title="1.认证模块"></a>1.认证模块</h2><p>CAS认证处理器主要由一个<strong>认证管理器</strong>控制，该管理器负责协调<strong>认证处理器</strong>的工作。</p>
<p>要了解该模块，必须知道下面几个核心名词（组件）：</p>
<ul>
<li><p>credentials</p>
<p>凭证，证明用户身份的object，比如我们用用户名密码登录的时候，对应一个<code>UsernamePasswordCredential</code>，<br>使用CAS的委托登录时，对应<code>ClientCredential</code>。</p>
</li>
<li><p>principal</p>
<p>主体，及经过认证后，用来保存用户信息的object，见：<code>org.apereo.cas.authentication.principal.Principal</code></p>
</li>
<li><p>AuthenticationManager</p>
<p>认证管理器，认证的核心</p>
</li>
<li><p>AuthenticationHandler</p>
<p>认证处理器，主要功能就是上面提到的<strong>凭证认证</strong>，还有<strong>属性解析</strong></p>
</li>
<li><p>PrincipalResolver</p>
<p>主体解析器，用于获取principal。</p>
<p>有的人会有疑问，上面认证结果已经返回了一个<code>principal</code>，为啥这里又出现一个解析器呢，<br>上面的认证处理只是得到一个简单的 <code>principal</code>，我们可能希望从其他地方获取我们想要的属性，比如从别的数据库或服务拿数据，<br>具体我们下面说</p>
</li>
</ul>
<h3 id="1-1-认证管理器"><a href="#1-1-认证管理器" class="headerlink" title="1.1 认证管理器"></a>1.1 认证管理器</h3><p><strong>认证管理器</strong>维护了一堆<strong>认证处理器</strong>，这些处理器是真正实现了认证的核心，<br>比如使用用户名、密码登录，会有一个处理器来做数据库操作，然后返回一个principal。</p>
<p>它主要包括 <strong>凭证认证</strong>、<strong>主体解析</strong>、<strong>认证协议检查</strong> 三步操作。</p>
<ul>
<li><p>凭证认证 - 验证凭证，返回一个 principal，你可以配置了多种认证方式，每个认证都会返回一个 principal</p>
</li>
<li><p>主体解析 - 见 <code>PrincipalResolver</code></p>
</li>
<li><p>认证协议检查 - 一般不用配置该项，如果你配置了协议检查，管理器会检查你上面的所有认证结果：</p>
<ul>
<li>all - 这里并不是说，你配置了多少认证方式，就必须全部认证通过，而是，你有几个credentials，就需要认证成功几次，<br>即credentials.size == successes.size，比如配置多个认证方式（比如：账号、邮箱、手机号登录），通过邮箱认证成功，<br>就满足了当前认证；</li>
<li>any - 有任意一个认证成功；该协议有个tryAll参数，目前没搞懂什么作用，暂时设置为false</li>
<li>uniquePrincipal - 只允许一个principalId存在，意思就是如果当前账号已经在某个地方登陆过了，就不允许再次登陆，<br>他的做法是，遍历所有的TGT，检查其中的<code>principal.id</code>，是否与当前的<code>principal.id</code>系统。</li>
<li>*notPrevented - 认证过程不出现<code>PreventedException</code>，且满足<code>any</code>认证协议</li>
<li>*req（required）- 指定的认证处理器如果认证成功，则满足检查</li>
<li>*groovy - 执行groovy脚本，允许指定多个，see <a href="https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#groovy-1">Configuration-Properties.html#groovy-1</a></li>
<li>*rest - 通过调用接口进行检查，see <a href="https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#rest-1">Configuration-Properties.html#rest-1</a></li>
</ul>
<p>认证协议相关配置：<a href="https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#authentication-policy">authentication-policy</a></p>
<blockquote>
<p>根据源码[org/apereo/cas/config/CasCoreAuthenticationPolicyConfiguration#authenticationPolicyExecutionPlanConfigurer]，<br>认证协议只能配置一种（所以文档中说的遍历policy纯属胡扯），如果你配置了多种，也是按代码中的优先级，进行配置，优先级：</p>
<p>req &gt; all &gt; notPrevented &gt; uniquePrincipal &gt; groovy &gt; rest &gt; any</p>
</blockquote>
</li>
</ul>
<h3 id="1-2-认证处理器"><a href="#1-2-认证处理器" class="headerlink" title="1.2 认证处理器"></a>1.2 认证处理器</h3><p>上面提到了认证的核心是<strong>认证处理器</strong>，那么什么是认证处理器？<br>顾名思义，就是认证的地方，用来处理凭证、解析principal（也可以认为获取用户属性），它的入口需要一个credentials，<br>最常见的就是 <code>UsernamePasswordCredential</code>，即用户名密码登录的入参，<br>出口是一个 <code>principal</code>，它包含 用户名 和 需要返回的属性(principal_attribute_list)</p>
<p>这个给一个 credentials 与认证处理器的对照表：</p>
<table>
<thead>
<tr>
<th>credentials</th>
<th>authn handler</th>
<th>场景</th>
</tr>
</thead>
<tbody><tr>
<td>UsernamePasswordCredential</td>
<td>AbstractJdbcUsernamePasswordAuthenticationHandler</td>
<td>账号密码认证</td>
</tr>
<tr>
<td>ClientCredential</td>
<td>ClientAuthenticationHandler</td>
<td>三方认证，如github认证</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="1-3-主体（principal）解析器"><a href="#1-3-主体（principal）解析器" class="headerlink" title="1.3 主体（principal）解析器"></a>1.3 主体（principal）解析器</h3><p>principal解析器是用来解析用户信息主体的，</p>
<p>每一个 <code>PrincipalResolver</code> 都会解析出一个principal，最后合并attributes，<br>常用的PrincipalResolver有：</p>
<ul>
<li><p>ChainingPrincipalResolver</p>
<p>链式解析，遍历每一个解析器，得到principal列表，最后合并principals：</p>
<ul>
<li>principalId - 存在多个 principal 的话，id 取最后一个 principal 的id</li>
<li>attributes - 合并map，也会涉及到属性重命名</li>
</ul>
<p>一般只会包含 <code>EchoingPrincipalResolver</code>, <code>PersonDirectoryPrincipalResolver</code> 两个</p>
</li>
<li><p>EchoingPrincipalResolver</p>
<p>如果参数Principal不为空，直接返回，得到的这个principal，也可以看做认证时，就已经拿到的principal</p>
<blockquote>
<p>比如你使用用户名密码登录的方式，会配置获取密码的SQL，比如：</p>
<blockquote>
<p><code>select username,password from user where user=?</code></p>
</blockquote>
<p>认证成功后，<code>username</code>, <code>password</code>就会被当做属性，进行collect，然后set到principal</p>
</blockquote>
</li>
<li><p>PersonDirectoryPrincipalResolver</p>
<p>根据<code>cas.authn.attributeRepository</code>配置，从数据库中获取属性</p>
</li>
<li><p>ProxyingPrincipalResolver</p>
<p>代理解析器，不常用，我们可以通过设置<code>principalFactory</code>来自定义解析方法</p>
</li>
</ul>
<blockquote>
<p>配置：CasCoreAuthenticationPrincipalConfiguration#personDirectoryPrincipalResolver</p>
</blockquote>
<h2 id="2-总结"><a href="#2-总结" class="headerlink" title="2. 总结"></a>2. 总结</h2><p>结合源码来总结一下认证的流程就是，对于任何给出的凭证，认证管理器都将会做如下操作:</p>
<ul>
<li>遍历所有的<strong>认证处理器</strong>，进行下面所有步骤：<ul>
<li>如果处理器支持该凭证（credentials），则尝试认证</li>
<li>如果认证成功，尝试解析principal</li>
<li>检查认证处理器是否配置了principal解析器</li>
<li>如果处理器配置了解析器，尝试用解析器认证credentials</li>
<li>如果没有配置解析器，直接返回认证处理器解析的principal</li>
<li>检查是否满足安全协议</li>
<li>如果满足安全协议，则立即返回</li>
<li>如果不满足安全协议，则继续执行</li>
<li>如果所有的凭证都不满足安全协议，抛出 AuthenticationException</li>
</ul>
</li>
</ul>
<p>最后来个流程图，更清晰的了解这个过程(plantuml画流程图好low)：</p>
<p><img src= "/img/loading.gif" data-src="/assets/cas/authn_flow.png"></p>
]]></content>
      <tags>
        <tag>CAS</tag>
        <tag>统一认证</tag>
      </tags>
  </entry>
  <entry>
    <title>【cas】03 属性处理</title>
    <url>/cas/cas-03-attribute-resolution/</url>
    <content><![CDATA[<h1 id="属性模块"><a href="#属性模块" class="headerlink" title="属性模块"></a>属性模块</h1><p>cas在身份认证之后，会检索用户属性，这个时候就用到了属性模块，该模块包含两个概念：</p>
<ul>
<li>属性解析</li>
<li>属性发布</li>
</ul>
<h2 id="属性解析"><a href="#属性解析" class="headerlink" title="属性解析"></a><a href="https://apereo.github.io/cas/5.3.x/integration/Attribute-Resolution.html">属性解析</a></h2><p>就是从已配置的数据源检索数据，然后进行缓存、rename、合并、聚合等一系列操作。</p>
<p>属性解析由cas中的 person-directory 项目管理，它能够进行主体（principal）解析，主体（principal）就是用来承载我们想要的用户属性的集合，配置见：<br><a href="https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties-Common.html#person-directory-principal-resolution">https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties-Common.html#person-directory-principal-resolution</a></p>
<p>person-directory 同时还维护着属性的缓存和合并的功能：</p>
<ul>
<li>属性缓存：主要就是缓存的时长、缓存的个数等等</li>
<li>属性合并：就是将属性名进行重命名（将不同的属性名规范为统一字段），然后进行合并，合并的操作可以是：替换、添加、合并</li>
</ul>
<blockquote>
<p><strong>默认缓存协议</strong></p>
<p>默认，属性会缓存到SSO session中。<br>也就是说，尽管 PersonDirectory 提供不同的缓存模型，<br>默认情况下，（从CAS角度）属性都将不会在后续请求中刷新和再次检索。</p>
</blockquote>
<p>更多配置参见源项目：<a href="https://github.com/apereo/person-directory">https://github.com/apereo/person-directory</a></p>
<p>下面说一下属性解析的几个主要组件：</p>
<ul>
<li>属性检索 核心接口：IPersonAttributeDao，不同Dao对应不同的解析器，比如ldap的解析器包含一个ldap的dao</li>
<li>属性缓存 CAS默认将属性缓存到SSO session中，即内存里，生命周期也跟随session</li>
<li>属性解析 核心接口：PersonDirectoryPrincipalResolver</li>
<li>属性合并/聚合 其实这两个操作可以看作为一个概念，配置见：<a href="https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#multimapped-attribute">https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#multimapped-attribute</a></li>
</ul>
<h2 id="属性发布"><a href="#属性发布" class="headerlink" title="属性发布"></a><a href="https://apereo.github.io/cas/5.3.x/integration/Attribute-Release.html">属性发布</a></h2><p>属性发布，就是哪些属性将发布到客户端服务<br>（或者说暴露给客户端，有点像我们写业务代码时的DTO的作用），<br>即客户端服务通过认证后，可以拿到哪些属性，它包含以下几个主要核心：</p>
<h3 id="指定principalId"><a href="#指定principalId" class="headerlink" title="指定principalId"></a>指定principalId</h3><p>一般就是指 userId</p>
<p>### 属性发布协议（attribute release Policy） <br>默认发布的属性列表：<a href="https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#default-bundle%EF%BC%8C%E8%AF%A5%E9%85%8D%E7%BD%AE%E6%94%AF%E6%8C%81%E9%87%8D%E5%91%BD%E5%90%8D%EF%BC%8C%E5%86%99%E6%B3%95%E5%A6%82%EF%BC%9Auser_id:uid%EF%BC%8C%E5%8D%B3%E5%B0%86">https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#default-bundle，该配置支持重命名，写法如：user_id:uid，即将</a> user_id 重命名为 uid  支持的几种发布协议：<br>    - return all<br>    - deny all<br>    - return allowed<br>    - Rest：通过接口进行发布<br>    - Return mapped：通过配置别名，来发布属性，而且只会发布这些配置别名的属性</p>
<p>具体配置：<a href="https://apereo.github.io/cas/5.3.x/integration/Attribute-Release-Policies.html">https://apereo.github.io/cas/5.3.x/integration/Attribute-Release-Policies.html</a></p>
<h3 id="属性承诺"><a href="#属性承诺" class="headerlink" title="属性承诺"></a>属性承诺</h3><h3 id="缓存属性"><a href="#缓存属性" class="headerlink" title="缓存属性"></a>缓存属性</h3><h3 id="属性加密"><a href="#属性加密" class="headerlink" title="属性加密"></a>属性加密</h3><p>     </p>
]]></content>
      <tags>
        <tag>CAS</tag>
        <tag>统一认证</tag>
      </tags>
  </entry>
  <entry>
    <title>【cas】04 ticket管理</title>
    <url>/cas/cas-04-ticketing/</url>
    <content><![CDATA[<h1 id="Ticketing"><a href="#Ticketing" class="headerlink" title="Ticketing"></a>Ticketing</h1><p>Ticketing组件 包含两个核心配置：</p>
<ul>
<li>TicketRegistry - ticket存储</li>
<li>ExpirationPolicy - ticket过期策略框架</li>
</ul>
<h2 id="Ticket-Registry"><a href="#Ticket-Registry" class="headerlink" title="Ticket Registry"></a>Ticket Registry</h2><p>一般我们会采用redis来缓存ticket，建议以HA的方式部署</p>
<p>CAS 提供的配置项有：缓存清理策略，注册（存储）方式，缓存过期策略等</p>
<h2 id="ticket过期策略"><a href="#ticket过期策略" class="headerlink" title="ticket过期策略"></a>ticket过期策略</h2><p>先说一下本章节设计到的几种ticket：</p>
<ul>
<li>TGT - Ticket Granting Ticket</li>
<li>PGT - Proxy Granting Ticket</li>
<li>ST - Service Ticket</li>
<li>PT - Proxy Ticket</li>
</ul>
<p>除了以上ticket，针对每种协议或功能，可能还会设计其他类型的ticket，<br>比如委托登录时会用到 Transient Granted Ticket；</p>
]]></content>
      <tags>
        <tag>CAS</tag>
        <tag>统一认证</tag>
      </tags>
  </entry>
  <entry>
    <title>ahrefs-一款强大的SEO分析工具</title>
    <url>/architecture/ahrefs-for-a-powerful-seo-analysis-tool/</url>
    <content><![CDATA[<h1 id="ahrefs-一款强大的SEO分析工具"><a href="#ahrefs-一款强大的SEO分析工具" class="headerlink" title="ahrefs-一款强大的SEO分析工具"></a>ahrefs-一款强大的SEO分析工具</h1><p>ahrefs 提供了帮助你实现SEO的很多有用的功能</p>
<h2 id="site-audit-网站分析"><a href="#site-audit-网站分析" class="headerlink" title="site-audit - 网站分析"></a>site-audit - 网站分析</h2><p>在刚开始使用 ahrefs 时，site-audit 是最实用的入口功能，它会启动爬虫程序按照爬虫规则来爬取你网站上的资源，然后提供整体SEO评分，<br>让你大致明白你的网站对搜索引擎是不是更加容易被收录和排名。<br>如果你的网站有任何不利于SEO的问题，它会尽可能的标记出来，并提供有关如何解决它们的建议。</p>
<blockquote>
<p>在进行网站分析之前，需要做一个小小的验证，来证明域名所有权。<br>不光是ahrefs，在使用百度资源收录、谷歌搜索控制台时，都要验证你的网站所属权。</p>
</blockquote>
<p>然后简单介绍一下包含的主要功能。</p>
<h3 id="概况（Overview）"><a href="#概况（Overview）" class="headerlink" title="概况（Overview）"></a>概况（Overview）</h3><p>概况页面包含几个图表和一个表格。</p>
<p>图表展示了某次抓取的大致情况，</p>
<p><img src= "/img/loading.gif" data-src="/assets/architecture/ahrefs-overview-charts.png" alt="概况-图表"></p>
<p>表格则详细指出了抓取过程中遇到的问题，通过跟踪每一类问题，找到涉及当前问题的链接，方便我们有针对性的进行改进。</p>
<p><img src= "/img/loading.gif" data-src="/assets/architecture/ahrefs-overview-issue-table.png" alt="概况-问题表格"></p>
<p>常见的问题有：title字数太少，页面中没有包含 h1 标签，缺少 TDK（title、description、keywords）等等</p>
<h3 id="抓取日志（Crawl-log）"><a href="#抓取日志（Crawl-log）" class="headerlink" title="*抓取日志（Crawl log）"></a>*抓取日志（Crawl log）</h3><p>查看某一次网站的抓取日志，可以大致看出在抓取过程中，正常抓取的页面和异常抓取的状态分布。</p>
<p>并且每次网站爬取完成之后，网站诊断都会按类型对问题进行分组，主要的问题类型包括：</p>
<ul>
<li>性能：慢速网页，CSS 或 HTML 太大</li>
<li>HTML 标签：标题标签、元描述和 H1 标签缺失、重复或非最佳长度</li>
<li>社交标签：Open Graph 标签和 Twitter 卡不完整或缺失</li>
<li>内容质量：单词数少，散乱的重复网页</li>
<li> 本地化：全部采用 Hreflang 发布</li>
<li>导入链接：检测孤独网页、Nofollow 链接的问题</li>
<li>导出链接：检测到重定向、失效网页的链接</li>
<li>资源：图像、JavaScript、CSS 有问题</li>
<li>站外页面</li>
<li>。。。</li>
</ul>
<p><img src= "/img/loading.gif" data-src="/assets/architecture/ahrefs-overview-crawl-log.png" alt="概况-爬取日志"></p>
<p>点击表格中具体问题的<code>[受影响的URLs]</code>按钮，将所有受影响的链接都列出来，我们可以针对每个链接进行排查和解决；</p>
<p><img src= "/img/loading.gif" data-src="/assets/architecture/ahrefs-tools-data-explorer.png" alt="工具-数据浏览"></p>
<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>当我们有过多次的爬取实践和问题解决之后，在主页面（概要）中，可以查看多次爬取的结果对比:</p>
<p><img src= "/img/loading.gif" data-src="/assets/architecture/ahrefs-overview.png"></p>
<p>如上图，三个图表分别反映出了：有问题的页面减少了，健康分数提高了，问题数减少了</p>
<blockquote>
<p>第一个图表中间，抓取的链接突然减少，是因为修复了错误的链接，导致了很多页面做了 301 跳转，比如：</p>
<p><code>https://rushgo.wiki/demo</code></p>
<p>301 -&gt; <code>https://rushgo.wiki/demo/</code></p>
<p>这应该是 hexo 的使用者可能会忽略的问题，如果你不关注SEO问题，可能不会发现</p>
</blockquote>
<h2 id="SEO-Toolbar"><a href="#SEO-Toolbar" class="headerlink" title="SEO Toolbar"></a>SEO Toolbar</h2><p><a href="https://ahrefs.com/zh/seo-toolbar">seo-toolbar</a>，浏览器插件，针对当前浏览的网页，提供一些比较有用的 SEO 数据：</p>
<ul>
<li>SEO报告</li>
<li>断链检查</li>
<li>内链/外链高亮</li>
<li>SERP位置</li>
<li>等等</li>
</ul>
<p>高级版会显示更多内容，等于是一个简化版的SEO监测工具。</p>
<h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><p>我们会持续从下面列出的功能中，找出比较实用的功能，并做详细介绍，<br>如果部分功能只是针对国外搜索引擎，就不再深入了解。</p>
<ul>
<li>site-explorer - 站点总览</li>
<li>keywords-explorer - 关键词总览（收费）</li>
<li>rank-tracker - 排名追踪（收费）</li>
<li>content-explorer - 内容总览（收费）</li>
</ul>
]]></content>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>【cas】代理认证【TODO】</title>
    <url>/cas/cas-configuring-proxy-authentication/</url>
    <content><![CDATA[<p><a href="https://apereo.github.io/cas/5.3.x/installation/Configuring-Proxy-Authentication.html">Configuring-Proxy-Authentication</a></p>
<h1 id="代理认证"><a href="#代理认证" class="headerlink" title="代理认证"></a>代理认证</h1><p>默认支持CAS V1及以上的协议，它完全是一个客户端需要考虑的问题</p>
<p>为了避免线上运行时的安全问题，建议禁用代理认证组件</p>
<h2 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h2><p>一个最常用的代理认证用例是，获取一个后端服务的ticket；场景：</p>
<ul>
<li>用户在使用应用A（受CAS保护）</li>
<li>应用A需要调用应用S来生产数据</li>
<li>应用S也受CAS保护</li>
</ul>
<p>因为A与S是直接在后端联系，S无法判断是否有SSO session存在。<br>这种场景，A需要进行代理来获取S的一个代理ticket。<br>代理ticket传递到S的相关端口，然后S通过CAS对其进行检索和验证。</p>
<p>跟踪整个路由过程，应该是：</p>
<ul>
<li>浏览器导航到 A</li>
<li>A 重定向到 CAS</li>
<li>CAS认证，重定向到 A，同时附带一个ST</li>
<li>A 校验ST，然后请求一个PGT（proxy granted ticket）</li>
<li>CAS 成功校验 ST，并产生一个 PGT</li>
<li>A 向CAS请求一个针对 S 的 PT（proxy ticket），同时A要在请求中提供PGT</li>
<li>CAS提供一个针对 S 的 PT</li>
<li>A 访问 S，并提供 PT</li>
<li>S 通过 CAS 来验证 PT</li>
<li>CAS 验证，返回成功</li>
<li>S 收到验证成功的响应，开始为 A 生产数据</li>
<li>A 接收到数据，并成功响应浏览器</li>
</ul>
<p>流程图如下：</p>
<p><img src= "/img/loading.gif" data-src="./res/proxy_authn.png"></p>
<h2 id="处理启用SSL的代理URL"><a href="#处理启用SSL的代理URL" class="headerlink" title="处理启用SSL的代理URL"></a>处理启用SSL的代理URL</h2><h2 id="验证响应中的PGT"><a href="#验证响应中的PGT" class="headerlink" title="验证响应中的PGT"></a>验证响应中的PGT</h2><h2 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h2><h2 id="解密PGT"><a href="#解密PGT" class="headerlink" title="解密PGT"></a>解密PGT</h2>]]></content>
      <tags>
        <tag>CAS</tag>
        <tag>统一认证</tag>
      </tags>
  </entry>
  <entry>
    <title>在apisix上代理COS</title>
    <url>/architecture/apisix-how-to-proxy-cos/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>目前我们开发完前端代码，都是直接部署在<code>COS</code>下，比如<code>腾讯云COS</code>，然后后端在<code>nginx</code>代理到<code>COS域名</code>，不过最近发现一个比较好玩的国产微服务网关<code>APISIX</code>，我们用他来代替<code>nginx</code>，实现将URL代理到 COS ；</p>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul>
<li>域名 - example.com，项目的域名</li>
<li>APISIX - 开源网关服务</li>
<li>cos-1001.cloud.com - COS域名，COS相关的配置省略</li>
<li>cos-1001.website.cloud.com - COS对应的静态网站域名</li>
</ul>
<p>域名申请、域名映射、服务部署等操作在此省略。。。</p>
<h1 id="COS-配置"><a href="#COS-配置" class="headerlink" title="COS 配置"></a>COS 配置</h1><p>COS的一般操作（创建桶、上传文件等），这里不啰嗦了，需要重点说的一点是：<code>开启静态网站功能</code></p>
<p>目的是为了让我们访问域名的时候，显示默认首页，如：index.html，否则会 403 Forbidden</p>
<blockquote>
<p><code>开启静态网站功能</code> 是腾讯云COS上自带的，其他云平台大概率也有</p>
</blockquote>
<h1 id="APISIX-配置"><a href="#APISIX-配置" class="headerlink" title="APISIX 配置"></a>APISIX 配置</h1><blockquote>
<p>吐槽：APISIX 相对于 nginx，优点是有UI界面操作，缺点是需要一点额外的学习成本</p>
</blockquote>
<h2 id="配置上游-Upstream"><a href="#配置上游-Upstream" class="headerlink" title="配置上游 Upstream"></a>配置上游 Upstream</h2><p>Upstream，上游服务，即我们需要代理的COS服务</p>
<p><img src= "/img/loading.gif" data-src="../../assets/apisix/apisix-create-upstream.png"></p>
<h2 id="配置路由-Route"><a href="#配置路由-Route" class="headerlink" title="配置路由 Route"></a>配置路由 Route</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;uri&quot;: &quot;/*&quot;,</span><br><span class="line">  &quot;name&quot;: &quot;example.com&quot;,</span><br><span class="line">  &quot;methods&quot;: [</span><br><span class="line">    &quot;GET&quot;,</span><br><span class="line">    &quot;POST&quot;,</span><br><span class="line">    &quot;PUT&quot;,</span><br><span class="line">    &quot;DELETE&quot;,</span><br><span class="line">    &quot;PATCH&quot;,</span><br><span class="line">    &quot;HEAD&quot;,</span><br><span class="line">    &quot;OPTIONS&quot;,</span><br><span class="line">    &quot;CONNECT&quot;,</span><br><span class="line">    &quot;TRACE&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;host&quot;: &quot;example.com&quot;,</span><br><span class="line">  &quot;plugins&quot;: &#123;</span><br><span class="line">    &quot;proxy-rewrite&quot;: &#123;</span><br><span class="line">      &quot;host&quot;: &quot;cos-1001.website.cloud.com&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;upstream_id&quot;: &quot;99999999&quot;,   # 上面配置的 Upstream 的 ID</span><br><span class="line">  &quot;status&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>apisix</tag>
      </tags>
  </entry>
  <entry>
    <title>apisix配置http重定向到https</title>
    <url>/architecture/apisix-how-http-to-https/</url>
    <content><![CDATA[<p><img src= "/img/loading.gif" data-src="https://img.shields.io/badge/APISIX-2.10.0-brightgreen" alt="https://apisix.apache.org/docs/apisix/FAQ"></p>
<blockquote>
<p>更新</p>
<p>2021-12-20 下午收到 apisix 社区人员反馈，看到这篇博客，已经提了 bug issue.<br>后续官方解决后，仍然按官方给出的解决方案来配置。</p>
<p><a href="https://github.com/apache/apisix/issues/5858">bug: Using proxy-rewrite to overwrite the request header x-forwarded-proto failed</a></p>
</blockquote>
<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>一般网站在使用https协议之后，都会在访问 http 站点的时候，自动 301 重定向到 https，而且百度<code>搜索资源收录</code>也要求你在启用https的时候，保证http能够正确的301到https，那么使用 APISIX 该怎么实现呢</p>
<h1 id="开整"><a href="#开整" class="headerlink" title="开整"></a>开整</h1><p>一般我们遇到问题，都会去百度/谷歌或官网搜一下，那么官网给出了三种方案：</p>
<ul>
<li>1 直接使用 <code>redirect</code> 插件（试用后没生效）</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl http://127.0.0.1:9080/apisix/admin/routes/1  -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;uri&quot;: &quot;/hello&quot;,</span><br><span class="line">    &quot;host&quot;: &quot;foo.com&quot;,</span><br><span class="line">    &quot;plugins&quot;: &#123;</span><br><span class="line">        &quot;redirect&quot;: &#123;</span><br><span class="line">            &quot;http_to_https&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>尝试这种方法后，浏览器就一直在https重定向： <code>ERR_TOO_MANY_REDIRECTS</code>，应该是插件自身的问题</p>
<ul>
<li>2 使用 路由规则 <code>vars</code> + <code>redirect</code> 插件（试用仍无效）</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -i http://127.0.0.1:9080/apisix/admin/routes/1  -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;uri&quot;: &quot;/hello&quot;,</span><br><span class="line">    &quot;host&quot;: &quot;foo.com&quot;,</span><br><span class="line">    &quot;vars&quot;: [</span><br><span class="line">        [</span><br><span class="line">            &quot;scheme&quot;,</span><br><span class="line">            &quot;==&quot;,</span><br><span class="line">            &quot;http&quot;</span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">    &quot;plugins&quot;: &#123;</span><br><span class="line">        &quot;redirect&quot;: &#123;</span><br><span class="line">            &quot;uri&quot;: &quot;https://$host$request_uri&quot;,</span><br><span class="line">            &quot;ret_code&quot;: 301</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>尝试这个方式后，遇到两个错误：</p>
<ul>
<li><p>404 Route Not Found</p>
<p>scheme == https 时，发现了404的问题（具体是哪个忘记了）</p>
<p>经不断尝试，大概得出 404 的原因是 route 规则 <code>vars</code> 没有生效，按官方的说法是按 <code>nginx</code> 变量来配置，用 <code>scheme</code> 来判断请求协议理论上是没毛病的，真正原因暂时不管</p>
</li>
<li><p>ERR_TOO_MANY_REDIRECTS</p>
<p>和第一种方法的错误一样，从 json 上对比，其实只比第一种方法多了一个 <code>vars</code></p>
</li>
<li><p>3 <code>serverless</code> 插件（没有试过，先忽略）</p>
</li>
</ul>
<details>
  <summary>点击查看详细内容</summary>
  
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -i http://127.0.0.1:9080/apisix/admin/routes/1  -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;uri&quot;: &quot;/hello&quot;,</span><br><span class="line">    &quot;plugins&quot;: &#123;</span><br><span class="line">        &quot;serverless-pre-function&quot;: &#123;</span><br><span class="line">            &quot;phase&quot;: &quot;rewrite&quot;,</span><br><span class="line">            &quot;functions&quot;: [&quot;return function() if ngx.var.scheme == \&quot;http\&quot; and ngx.var.host == \&quot;foo.com\&quot; then ngx.header[\&quot;Location\&quot;] = \&quot;https://foo.com\&quot; .. ngx.var.request_uri; ngx.exit(ngx.HTTP_MOVED_PERMANENTLY); end; end&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>
</details>

<ul>
<li>最终方案</li>
</ul>
<p>既然我们相信 <code>Apache 出品，必属精品</code>，那就从官方的方案中改进一下方案，最终想起 <code>nginx</code> 中有一个属性可以拿到请求协议：<code>http_x_forwarded_proto</code>，在第二种方案基础上修改之后，果然成功！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -i http://127.0.0.1:9080/apisix/admin/routes/1  -H &#x27;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&#x27; -X PUT -d &#x27;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;uri&quot;: &quot;/hello&quot;,</span><br><span class="line">    &quot;host&quot;: &quot;foo.com&quot;,</span><br><span class="line">    &quot;vars&quot;: [</span><br><span class="line">        [</span><br><span class="line">            &quot;http_x_forwarded_proto&quot;,</span><br><span class="line">            &quot;==&quot;,</span><br><span class="line">            &quot;http&quot;</span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">    &quot;plugins&quot;: &#123;</span><br><span class="line">        &quot;redirect&quot;: &#123;</span><br><span class="line">            &quot;uri&quot;: &quot;https://$host$request_uri&quot;,</span><br><span class="line">            &quot;ret_code&quot;: 301</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>关于 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Forwarded-Proto">X-Forwarded-Proto</a> 的含义：用来确定客户端与代理服务器或者负载均衡服务器之间的连接所采用的传输协议（HTTP 或 HTTPS）。</p>
</blockquote>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>果然技术是需要长时间的积累，然后在关键时刻才能起大作用。</p>
<h1 id="refer"><a href="#refer" class="headerlink" title="refer"></a>refer</h1><ul>
<li><p><a href="http://nginx.org/en/docs/varindex.html">nginx variables list</a></p>
<p>这个文档里面是有 <code>scheme</code> 的，但没有 <code>http-x-forwarded-proto</code></p>
</li>
<li><p>扩展阅读 <a href="https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/">Using the Forwarded header</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>apisix</tag>
      </tags>
  </entry>
  <entry>
    <title>【cas】99-webflow</title>
    <url>/cas/cas-99-webflow/</url>
    <content><![CDATA[<p>修改webflow.xml的时候，需要注意，删除cas-overlay的xml，否则可能会有覆盖或冲突的问题。</p>
]]></content>
      <tags>
        <tag>CAS</tag>
        <tag>统一认证</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo小功能记录</title>
    <url>/architecture/hexo-little-features/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="声明文章是转载的"><a href="#声明文章是转载的" class="headerlink" title="声明文章是转载的"></a>声明文章是转载的</h2><p>theme基于: ButterflyOut</p>
<ul>
<li>修改作者和文章链接</li>
</ul>
<p>在文章页头部指定参数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copyright_author: aaa</span><br><span class="line">copyright_author_href: xxx</span><br></pre></td></tr></table></figure>

<ul>
<li>修改模板</li>
</ul>
<p>模板路径：<code>themes/ButterflyOut/layout/includes/post/post-copyright.pug</code></p>
<p>我们可以在最下面添加转载的模板代码，下面是一个很简单的例子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//  转载文章的声明</span><br><span class="line">if page.copyright === false</span><br><span class="line">  - let author = page.copyright_author ? page.copyright_author : config.author</span><br><span class="line">  - let authorHref = page.copyright_author_href ? page.copyright_author_href : `mailto:$&#123;config.email&#125;`</span><br><span class="line">  - let url = page.copyright_url ? page.copyright_url : page.permalink</span><br><span class="line">  - let info = page.copyright_info ? page.copyright_info : _p(&#x27;post.copyright.copyright_content&#x27;, theme.post_copyright.license_url, theme.post_copyright.license, config.url, config.title)</span><br><span class="line">  .post-copyright</span><br><span class="line">    .post-copyright__author</span><br><span class="line">      span.post-copyright-meta= &quot;原文作者: &quot;</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        a(href=authorHref)=author</span><br><span class="line">    .post-copyright__type</span><br><span class="line">      span.post-copyright-meta= &quot;原文链接: &quot;</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        a(href=url_for(url))= theme.post_copyright.decode ? decodeURI(url) : url</span><br></pre></td></tr></table></figure>

<p>效果：<br><img src= "/img/loading.gif" data-src="../../assets/architecture/hexo-reprint-statement.png" alt="转载效果"></p>
<p>另外，如果还想在标题前面自动加上【转载】，还需要修改下面几个模板：</p>
<ul>
<li>html.head.title</li>
</ul>
<p><code>themes/ButterflyOut/layout/includes/head.pug:8</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">before:</span><br><span class="line">- else pageTitle = page.title || config.title || &#x27;&#x27;</span><br><span class="line"></span><br><span class="line">after:</span><br><span class="line">- else pageTitle = (page.title &amp;&amp; page.copyright === false ? (&#x27;【转载】&#x27; + page.title) : page.title) || config.title || &#x27;&#x27;</span><br></pre></td></tr></table></figure>

<p>浏览器标签页上的效果：<br><img src= "/img/loading.gif" data-src="../../assets/architecture/hexo-reprint-statement-on-title-tag.png" alt="title加上【转载】标记"></p>
<ul>
<li>首页/文章列表页 的标题</li>
</ul>
<p><code>themes/ButterflyOut/layout/includes/mixins/post-ui.pug:5</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">before:</span><br><span class="line">- var title = article.title || _p(&#x27;no_title&#x27;)</span><br><span class="line"></span><br><span class="line">after:</span><br><span class="line">- var title = (article.title &amp;&amp; article.copyright === false ? &#x27;【转载】&#x27; + article.title : article.title) || _p(&#x27;no_title&#x27;)</span><br></pre></td></tr></table></figure>

<ul>
<li>文章（post）标题</li>
</ul>
<p><code>themes/ButterflyOut/layout/includes/header/post-info.pug:3</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">before:</span><br><span class="line">.posttitle= (page.title &amp;&amp; page.copyright === false ? &#x27;【转载】&#x27; + page.title : page.title) || _p(&#x27;no_title&#x27;)</span><br><span class="line"></span><br><span class="line">after:</span><br><span class="line">.posttitle= page.title || _p(&#x27;no_title&#x27;)</span><br></pre></td></tr></table></figure>
<p>文章标题的效果：<br><img src= "/img/loading.gif" data-src="../../assets/architecture/hexo-reprint-statement-on-post.png" alt="文章页加上【转载】标记"></p>
<blockquote>
<p>当然还有其他地方会显示文章标题，这里就不再修改了</p>
</blockquote>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-修改永久链接后，如何保留旧链接</title>
    <url>/architecture/hexo-how-to-reserve-old-permalink/</url>
    <content><![CDATA[<p>当你想修改hexo博客的永久链接（<code>permalink</code>），又不想让旧链接失效，可以考虑下这种方法</p>
<span id="more"></span>

<p>up主在 <code>2021-10-01</code> 这天修改了永久链接的规则，为了不影响之前已发布的文章链接，我们通过扩展API给以前的文档生成两个路由，让之前的文章同时支持两种链接：</p>
<ul>
<li>befor: <code>:year-:month-:day-:title</code></li>
<li>after: <code>:year-:month-:day-:title</code> and <code>:title</code></li>
</ul>
<p>官方已经给出了插件的使用防范：<a href="https://hexo.io/zh-cn/api/generator#%E7%94%9F%E6%88%90%E6%89%80%E6%9C%89%E6%96%87%E7%AB%A0%EF%BC%8C">https://hexo.io/zh-cn/api/generator#%E7%94%9F%E6%88%90%E6%89%80%E6%9C%89%E6%96%87%E7%AB%A0，</a></p>
<p>但是，按官方提供的demo修改完之后，发现sidebar不出现了，导致布局乱套了，不但侧边栏（sidebar）没了，上一篇/下一篇的按钮也没了</p>
<p>通过查看正常和不正常的页面的源代码（浏览器右键-&gt;源码-&gt;搜索”sidebar”，对比两个页面），发现：</p>
<p><code>themes/ButterflyOut/layout/includes/head/config_site.pug:16</code> - isSidebar 为 true 时，侧边栏（TOC）才会出现；</p>
<p>查看源码得知：</p>
<p><code>themes/ButterflyOut/layout/includes/head/config_site.pug:8</code> - 由于 is_post 返回false，导致 isSiderBar = false</p>
<p><code>is_post</code> 从 <code>hexo</code> 源码看，</p>
<p><code>node_modules/hexo/lib/plugins/helper/index.js:34</code> - is_post 其实就是 is.post() 方法返回的</p>
<p><code>node_modules/hexo/lib/plugins/helper/is.js:27</code> - is.post() 方法里面就一个属性 page.__post</p>
<p><code>node_modules/hexo/lib/plugins/generator/post.js:23</code> - 最终发现是这里赋值的，并且这里上下文的方法不就是跟我们这个插件所覆盖的功能嘛，我们可以模仿这里的写法来优化的插件</p>
<h2 id="code-show"><a href="#code-show" class="headerlink" title="code show"></a>code show</h2><p>在hexo项目根目录下新建脚本：<code>scripts/redefine_permalink.js</code>（脚本名字随意）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 2021-10-15，up主修改了永久链接的规则，为了不影响之前已发布的文章链接，我们这里修改下生成文章的脚本，让之前的文章同时支持两种链接：</span><br><span class="line">// - befor: `:year-:month-:day-:title`</span><br><span class="line">// - after: `:year-:month-:day-:title` and `:title`</span><br><span class="line">var postDateV1 = new Date(&quot;2021-10-15&quot;);</span><br><span class="line"></span><br><span class="line">hexo.extend.generator.register(&quot;post&quot;, function (locals) &#123;</span><br><span class="line">  const posts = locals.posts.sort(&quot;-date&quot;).toArray();</span><br><span class="line">  let length = locals.posts.length;</span><br><span class="line">  return locals.posts</span><br><span class="line">    .map(function (post, i) &#123;</span><br><span class="line">      const &#123; path, layout &#125; = post;</span><br><span class="line">      // 不需要 layout</span><br><span class="line">      if (!layout || layout === &quot;false&quot;) &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          path,</span><br><span class="line">          data: post.content,</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      // 上一篇 / 下一篇</span><br><span class="line">      if (i) post.prev = posts[i - 1];</span><br><span class="line">      if (i &lt; length - 1) post.next = posts[i + 1];</span><br><span class="line"></span><br><span class="line">      const layouts = [&quot;post&quot;, &quot;page&quot;, &quot;index&quot;];</span><br><span class="line">      if (layout !== &quot;post&quot;) layouts.unshift(layout);</span><br><span class="line">      post.__post = true; // 见源码</span><br><span class="line"></span><br><span class="line">      // 我们最开始的目的：兼容两种 Permalink</span><br><span class="line">      var date = new Date(post.date);</span><br><span class="line">      if (date &lt; postDateV1 &amp;&amp; post.date) &#123;</span><br><span class="line">        const oldLink = post.date.format(&quot;YYYY/MM/DD/&quot;) + post.path;</span><br><span class="line">        console.log(&quot;oldLink&quot;, oldLink);</span><br><span class="line">        return [</span><br><span class="line">          &#123;</span><br><span class="line">            path: oldLink,</span><br><span class="line">            data: post,</span><br><span class="line">            layout: &quot;post&quot;,</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            path: post.path,</span><br><span class="line">            data: post,</span><br><span class="line">            layout: &quot;post&quot;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ];</span><br><span class="line">      &#125;</span><br><span class="line">      return [</span><br><span class="line">        &#123;</span><br><span class="line">          path: post.path,</span><br><span class="line">          data: post,</span><br><span class="line">          layout: &quot;post&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ];</span><br><span class="line">    &#125;)</span><br><span class="line">    .reduce(function (a, b) &#123;</span><br><span class="line">      return a.concat(b);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ul>
<li><p>会不会影响到评论插件</p>
<p>评论插件是根据 title 来生成issue的，所以不会影响评论</p>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://hexo.io/docs/permalinks.html">永久链接</a> - 调整网站的永久链接</li>
<li><a href="https://hexo.io/api/generator">生成器</a> - 根据处理后的原始文件建立路由</li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【SEO】如何做好SEO方案（持续更新）</title>
    <url>/architecture/how-to-do-seo/</url>
    <content><![CDATA[<blockquote>
<p>如何做好SEO方案</p>
</blockquote>
<p>做好SEO的几个阶段</p>
<ul>
<li>*确定网站方向</li>
<li>提交网站资源</li>
<li>优化网站内容</li>
<li>网站内容推广<ul>
<li>借助优质网站做外链<ul>
<li>最简单的是交换友链</li>
<li>可以在排名比较高的网站，发布你的链接，比如在CSDN上同步一份你的文章，在文章开头或结尾，加上你自己博客链接，几个好处：<ul>
<li>增加了你的站点入口，有利于增加你的站点权重</li>
<li>别人也可以根据这个入口，找到你的博客</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="确定网站方向"><a href="#确定网站方向" class="headerlink" title="确定网站方向"></a>确定网站方向</h1><p>确定你做网站的目的：企业官网？博客？电商？</p>
<p>对于我：博客</p>
<h1 id="提交网站资源"><a href="#提交网站资源" class="headerlink" title="提交网站资源"></a>提交网站资源</h1><p>提交网站资源，就是告诉搜索引擎你的网站地址，你希望搜索引擎收录你的网站内容，这样搜索引擎就会派爬虫来爬取你的网站内容</p>
<p>比如你想百度收录你的网站，就需要在百度资源平台提交你的网站，</p>
<h2 id="从html入手"><a href="#从html入手" class="headerlink" title="从html入手"></a>从html入手</h2><p>从html入手，即从html内容上出发，包括：meta标签，内容，外链，内链等等</p>
<h2 id="如果是前后端项目该怎么做SEO"><a href="#如果是前后端项目该怎么做SEO" class="headerlink" title="如果是前后端项目该怎么做SEO"></a>如果是前后端项目该怎么做SEO</h2><h3 id="什么是前后端分离？"><a href="#什么是前后端分离？" class="headerlink" title="什么是前后端分离？"></a>什么是前后端分离？</h3><p>前后端分离是对于网站开发人员来说的；判断一个网站是前后端分离的，只需要看网页上的数据是否是动态加载的，<br>我们在浏览器上右键 - 查看源代码，如果搜不到主要内容，那么这个网页很可能就是前后端分离的。</p>
<p>那么前后端分离对SEO有什么影响呢？</p>
<p>在过去，搜索引擎在抓取页面的时候，只能抓到第一眼看到的内容，如果网页上数据是通过接口异步加载的，<br>搜索引擎会获取不到核心内容，就无法对核心内容进行收录，造成搜索引擎搜不到你的网站，更不要说搜索排名的问题了。</p>
<p>不过，现在的搜索引擎也在发展，已经开始支持动态渲染网站来进行收录了，但是动态渲染的收录效果仍不是很好。<br>至少比非前后端分离的网站要差；</p>
<p>谷歌、百度等都已经支持渲染收录，但前者支持的态度更好，而且提出了比较好的方案来解决该问题。</p>
<h3 id="动态渲染"><a href="#动态渲染" class="headerlink" title="动态渲染"></a>动态渲染</h3><p>目前针对前后端分离网站解决SEO的最佳方案，就是动态渲染，我们区分出请求是来自搜索引擎爬虫，<br>通过把请求路由到渲染服务，把渲染后的html提供给爬虫；</p>
<p>实现动态渲染的方式：</p>
<ul>
<li>通过代码实现，比如：<a href="https://umijs.org/zh-CN/docs/ssr">umi ssr</a></li>
<li>通过中间件实现，比如：<a href="https://prerender.io/">prerender</a></li>
</ul>
<p><img src= "/img/loading.gif" data-src="/assets/architecture/how-dynamic-rendering-works.png" alt="动态渲染工作原理"></p>
<p>需要注意的是，动态渲染并不是伪装，即给爬虫展示的内容必须和用户看到的一致，不能区别对待，否则会被搜索引擎拉黑！</p>
<blockquote>
<p><a href="https://developers.google.com/search/docs/advanced/guidelines/cloaking">伪装真实内容</a><br>指的是分别向用户和搜索引擎呈现不同内容或网址的做法。伪装真实内容会导致用户看到的结果与预期不符。</p>
</blockquote>
<h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><ul>
<li><a href="https://moz.com/learn/seo/on-site-seo">https://moz.com/learn/seo/on-site-seo</a></li>
<li><a href="https://ziyuan.baidu.com/wiki/990">百度Spider新增渲染抓取UA公告</a></li>
<li><a href="https://developers.google.com/search/docs/advanced/javascript/dynamic-rendering">动态渲染</a></li>
</ul>
]]></content>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>prerender-解决JavaScript SEO</title>
    <url>/architecture/prerender-for-solves-javascript-seo/</url>
    <content><![CDATA[<p>Prerender —— 解决 JavaScript SEO 利器</p>
<span id="more"></span>

<blockquote>
<p>本文只提供简单介绍和使用说明</p>
</blockquote>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li>准备环境</li>
</ul>
<p><code>npm install prerender</code></p>
<ul>
<li>运行</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const prerender = require(&#x27;prerender&#x27;);</span><br><span class="line">const server = prerender();</span><br><span class="line">server.start();</span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<p><code>curl http://localhost:3000/render?url=https://www.example.com/</code></p>
<p>如果返回的页面包含动态加载的数据，说明成功！</p>
<h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p>上面安装了<code>prerender</code>只能每次手动渲染我们的页面，如果想一次性代理整站，可以使用中间件代理应用服务，比如在nginx中配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  example.com;</span><br><span class="line"></span><br><span class="line">    charset utf8;</span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri @prerender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location @prerender &#123;</span><br><span class="line">        # 自己部署的 prerender 服务不需要这个参数</span><br><span class="line">        proxy_set_header X-Prerender-Token YOUR_TOKEN;</span><br><span class="line">        </span><br><span class="line">        set $prerender 0;</span><br><span class="line">        if ($http_user_agent ~* &quot;googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp&quot;) &#123;</span><br><span class="line">            set $prerender 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($args ~ &quot;_escaped_fragment_&quot;) &#123;</span><br><span class="line">            set $prerender 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if ($http_user_agent ~ &quot;Prerender&quot;) &#123;</span><br><span class="line">            set $prerender 0;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($uri ~* &quot;\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)&quot;) &#123;</span><br><span class="line">            set $prerender 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # 自定义哪些路径需要渲染，哪些不需要</span><br><span class="line">        if ($uri !~ ^/main/(.*)$) &#123;</span><br><span class="line">            set $prerender 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        # DNS解析，使后面的请求能直接访问源站，不然会一直请求到nginx，导致循环</span><br><span class="line">        resolver 114.114.114.114 8.8.8.8;</span><br><span class="line"></span><br><span class="line">        if ($prerender = 1) &#123;</span><br><span class="line">            </span><br><span class="line">            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing</span><br><span class="line">            set $prerender &quot;127.0.0.1:3300&quot;;</span><br><span class="line">            rewrite .* /$scheme://$host$request_uri? break;</span><br><span class="line">            proxy_pass http://$prerender;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($prerender = 0) &#123;</span><br><span class="line">            proxy_pass $scheme://$host;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同样，<code>prerender</code>支持其他各种中间件，可以在官方文档中找到：<a href="https://docs.prerender.io/article/12-middlewares">https://docs.prerender.io/article/12-middlewares</a></p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="指定渲染的页面"><a href="#指定渲染的页面" class="headerlink" title="指定渲染的页面"></a>指定渲染的页面</h3><ul>
<li>使用返回状态码来让<code>prerender</code>决定页面是否需要被渲染，比如设置<code>&lt;meta name=&quot;prerender-status-code&quot; content=&quot;404&quot;&gt;</code></li>
<li><code>prerender</code>本身不支持过滤请求，但是我们可以从中间件出发，比如我们使用 <code>nginx + prerender</code>，可以在 nginx 上<br>配置 <code>location</code> 来决定那些 path 需要渲染</li>
</ul>
<h3 id="为什么同一个url，每次请求都要渲染"><a href="#为什么同一个url，每次请求都要渲染" class="headerlink" title="为什么同一个url，每次请求都要渲染"></a>为什么同一个url，每次请求都要渲染</h3><p>alias：如何缓存请求</p>
<p>开源<code>prerender</code>不支持缓存功能（设置缓存、设置缓存时长等功能），目前只有平台服务提供这些功能，<br>如果想用，需要使用线上SaaS版本，或自己单独处理或使用缓存插件<a href="https://github.com/prerender/prerender-memory-cache"><code>prerender-memory-cache</code></a></p>
<h2 id="SEO风险"><a href="#SEO风险" class="headerlink" title="SEO风险"></a>SEO风险</h2><ul>
<li>请求是先判断<code>user-agent(UA)</code>是否是爬虫，然后决定毕是否使用SSR预先渲染，<br>但是有些爬虫会使用普通<code>UA</code>判断你是不是针对搜索引擎给出的优化页面，这么一对比，还是有被K的风险；或者爬虫模拟浏览器加载网页，然后再对比的话，应该是没问题的，SSR后的页面基本上是和我们在浏览器端看到的源代码是一致的；<blockquote>
<p>部分搜索引擎公司为了检查站长是不是只针对搜索引擎给出一份特意优化的页面，而不同于用户访问的页面，会采取普通 IP 和 UA 进行爬取页面，进而对比站长是否作弊</p>
</blockquote>
</li>
</ul>
<p>至少，与其他方案而言，使用SSR中间件的方式是最方便、最安全的</p>
<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ul>
<li>nginx 中间件 - 一直在请求同一个接口</li>
</ul>
<p>如果你随意在配置文件中设置：<code>set $prerender 1;</code> 来测试的话，可能会引起这个错误，最好用官方给的方式来测试；</p>
<p>或者 <a href="https://dysaniazzz.github.io/2019/06/06/useragent">自定义浏览器的 <code>user-agent</code></a></p>
<p>相关异常：</p>
<ul>
<li>nginx报错 <code>too many open files</code></li>
<li>prerender server 出现大量 504</li>
<li>使用nginx中间件，总是返回 nginx 首页  注意需要修改官方demo最后面：  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if ($prerender = 0) &#123;</span><br><span class="line">#    rewrite .* /index.html break;</span><br><span class="line">    proxy_pass $scheme://$host;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li>[修改Chrome User-Agent]: <a href="https://dysaniazzz.github.io/2019/06/06/useragent%EF%BC%9B">https://dysaniazzz.github.io/2019/06/06/useragent；</a></li>
<li><a href="https://stackoverflow.com/questions/37319412/prerender-io-not-caching-my-pages"></a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>puppeteer - 通过DevTools协议操作Chrome</title>
    <url>/architecture/puppeteer-friend-of-chrome/</url>
    <content><![CDATA[<p>Puppeteer 是一个 Node 库，它提供了一个高级 API 来通过 DevTools 协议控制 Chrome 或 Chromium。<br>默认情况下是无头的，但是可以配置为运行完整的(非无头的) Chrome 或 Chromium。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>大多数你可以在浏览器中手动完成的事情都可以通过 Puppeteer 来完成:</p>
<ul>
<li>生成页面的截图和 pdf 文件。</li>
<li>抓取一个 SPA (单页应用)并生成预渲染内容(例如“ SSR”(Server-Side Rendering))。</li>
<li>自动化表单提交、 UI 测试、键盘输入等。</li>
<li>创建一个最新的自动化测试环境。使用最新的 JavaScript 和浏览器特性，直接在最新版本的 Chrome 中运行测试。</li>
<li>捕获站点的时间线跟踪，以帮助诊断性能问题。</li>
<li>测试 Chrome 扩展</li>
</ul>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i puppeteer</span><br><span class="line"># or &quot;yarn add puppeteer&quot;</span><br></pre></td></tr></table></figure>
<p>注意: 当你安装 Puppeteer 时，它会自动下载一个最新版本的 Chromium (~ 170mb Mac，~ 282mb Linux，~ 280mb Win) ，<br>这个版本可以保证可以与当前puppeteer完美结合。</p>
<p>若要跳过下载，请下载到另一个路径，或下载不同的浏览器，请参阅 <a href="https://github.com/puppeteer/puppeteer/blob/v10.4.0/docs/api.md#environment-variables">环境变量</a>。</p>
<blockquote>
<p>更多内容请参考官方文档：<a href="https://github.com/puppeteer/puppeteer/">https://github.com/puppeteer/puppeteer/</a></p>
</blockquote>
<h2 id="使用docker部署"><a href="#使用docker部署" class="headerlink" title="使用docker部署"></a>使用docker部署</h2><p>直接使用nodejs的镜像还是不行的，还需要安装<code>chromium</code>，这里给出两个<code>Dockerfile</code>，一个用来构建<code>chromium</code>镜像，<br>另一个基于第一个镜像构建<code>rendertron</code>（rendertron是基于puppeteer的动态渲染工具，仍有参考价值）：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"></span><br><span class="line"><span class="comment"># Installs latest Chromium (92) package.</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apk update &amp;&amp; apk add --no-cache \</span></span><br><span class="line"><span class="bash">      chromium \</span></span><br><span class="line"><span class="bash">      nss \</span></span><br><span class="line"><span class="bash">      freetype \</span></span><br><span class="line"><span class="bash">      harfbuzz \</span></span><br><span class="line"><span class="bash">      ca-certificates \</span></span><br><span class="line"><span class="bash">      ttf-freefont \</span></span><br><span class="line"><span class="bash">      nodejs \</span></span><br><span class="line"><span class="bash">      npm \</span></span><br><span class="line"><span class="bash">      yarn</span></span><br></pre></td></tr></table></figure>

<p>在<code>rendertron</code>源码根目录新建Dockerfile（puppeteer应该是适用的）</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node-chromium:v0.<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> TZ=Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> ln -sf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt;/etc/timezone</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 告诉puppeteer跳过安装Chrome过程，直接使用安装包</span></span><br><span class="line"><span class="keyword">ENV</span> PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \</span><br><span class="line">    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /home/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> ./ /home/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> npm i --registry https://registry.npm.taobao.org &amp;&amp; npm cache clean --force</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> npm i --only=prod</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;node&quot;</span>, <span class="string">&quot;./bin/rendertron&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><h3 id="pyppeteer-errors-NetworkError-Protocol-Error-Runtime-callFunctionOn-Session-closed-Most-likely-the-page-has-been-closed"><a href="#pyppeteer-errors-NetworkError-Protocol-Error-Runtime-callFunctionOn-Session-closed-Most-likely-the-page-has-been-closed" class="headerlink" title="pyppeteer.errors.NetworkError: Protocol Error (Runtime.callFunctionOn): Session closed. Most likely the page has been closed."></a>pyppeteer.errors.NetworkError: Protocol Error (Runtime.callFunctionOn): Session closed. Most likely the page has been closed.</h3><p>几种解决方案：</p>
<ul>
<li><p>如果是部署在docker，增加虚拟机配置，本人是这种情况，增加配置后，运行良好</p>
</li>
<li><p>找到pyppeteer包下的connection.py模块，修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self._ws = websockets.client.connect(</span><br><span class="line">#self._url, max_size=None, loop=self._loop)</span><br><span class="line">self._url, max_size=None, loop=self._loop, ping_interval=None, ping_timeout=None)</span><br></pre></td></tr></table></figure></li>
<li><p><a href="https://github.com/miyakogi/pyppeteer/issues/178">https://github.com/miyakogi/pyppeteer/issues/178</a></p>
</li>
<li><p><a href="https://github.com/miyakogi/pyppeteer/pull/160/files">https://github.com/miyakogi/pyppeteer/pull/160/files</a></p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>【SEO】百度站点收录</title>
    <url>/architecture/seo-baidu-ziyuan/</url>
    <content><![CDATA[<p>百度站长新建一个站点，然后有3种方式验证该站点合法性</p>
<p>站点验证通过后，找到”普通收录“，</p>
<h2 id="对于-hexo"><a href="#对于-hexo" class="headerlink" title="对于 hexo"></a>对于 hexo</h2><ul>
<li>安装 sitemap 插件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<h2 id="资源提交"><a href="#资源提交" class="headerlink" title="资源提交"></a>资源提交</h2><p>通过提交资源，让百度发现你的站点URL</p>
<h3 id="API提交"><a href="#API提交" class="headerlink" title="API提交"></a>API提交</h3><p><code>curl -H &#39;Content-Type:text/plain&#39; --data-binary @urls.txt &quot;http://data.zz.baidu.com/urls?site=&#123;example.com&#125;&amp;token=xxx&quot;</code></p>
<h3 id="上传-sitemap-文件"><a href="#上传-sitemap-文件" class="headerlink" title="上传 sitemap 文件"></a>上传 sitemap 文件</h3><p>打开百度站长控制台，资源提交 -&gt; 普通收录 -&gt; 资源提交，选择sitemap，把 sitemap url </p>
<p>然后等第二天看结果</p>
<h2 id="https站点配置"><a href="#https站点配置" class="headerlink" title="https站点配置"></a>https站点配置</h2><p>注意，如果你的站点是https，一定要确保 http 也能访问，并且正常301到 https 下</p>
<blockquote>
<p>如果你在使用<code>APISIX</code>实现网站的代理 http 跳转到 https 遇到问题，可能这篇文章会帮到你 <a href="/architecture/apisix-how-http-to-https/" title="apisix配置http重定向到https">apisix配置http重定向到https</a></p>
</blockquote>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>第二天看收录情况，显示提取url数量是42，但是通过百度关键词搜索，并不能搜索，甚至加了站点限制，也没有结果，为什么不能立即生效？</p>
<ul>
<li><input disabled="" type="checkbox"> http、https 之间来回跳转；需要确定下 搜索收录平台 上提交的协议 和 博客里配置的协议是否一致</li>
</ul>
<p>影响SEO的几个猜测：</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 没有深度实现SEO，尝试和别的博客交换友链</li>
<li><input disabled="" type="checkbox"> URL层级太多，目前是 /year/month/day/category/title（category是我定义的一个文章大分类），可以优化成 /category/title</li>
<li><input checked="" disabled="" type="checkbox"> 没有备案？百度得到的结论：官方回复没有备案并不会影响SEO；但抽空还是做一下备案（<a href="https://zhuanlan.zhihu.com/p/398547454%EF%BC%89">https://zhuanlan.zhihu.com/p/398547454）</a></li>
<li><input disabled="" type="checkbox"> 由于博客是基于github搭建的，而github是国外服务器，不如使用 gitee？</li>
<li><input disabled="" type="checkbox"> 其他SEO策略：<a href="https://www.cnblogs.com/qianzf/p/6783622.html">https://www.cnblogs.com/qianzf/p/6783622.html</a> </li>
<li><input disabled="" type="checkbox"> 主域名问题，我用的是 .wiki，如果换成 .com, .cn 是不是更好一点？</li>
</ul>
]]></content>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>【技术调研】分布式任务调度框架调研</title>
    <url>/architecture/%E3%80%90%E6%8A%80%E6%9C%AF%E8%B0%83%E7%A0%94%E3%80%91%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E6%A1%86%E6%9E%B6%E8%B0%83%E7%A0%94/</url>
    <content><![CDATA[<h2 id="现有框架对比"><a href="#现有框架对比" class="headerlink" title="现有框架对比"></a>现有框架对比</h2><table>
<thead>
<tr>
<th>Feature</th>
<th>Elastic-Job</th>
<th>Quartz</th>
</tr>
</thead>
<tbody><tr>
<td>负载均衡</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>容错</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>分片/分片一致性/分布式并行调度</td>
<td>√</td>
<td>×</td>
</tr>
<tr>
<td>运营平台</td>
<td>√</td>
<td>×</td>
</tr>
</tbody></table>
<p>分片一致性: 同一个分片在分布式环境下, 只有一个实例运行</p>
]]></content>
      <tags>
        <tag>elastic-job</tag>
      </tags>
  </entry>
  <entry>
    <title>【consul】docker配置</title>
    <url>/consul/%E3%80%90consul%E3%80%91docker%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="server"><a href="#server" class="headerlink" title="server"></a>server</h1><blockquote>
<p>docker run -d –name=consul_service –net=host -e ‘CONSUL_LOCAL_CONFIG={“skip_leave_on_interrupt”: true}’ consul agent -server -bind={server.ip} -join={master.ip} -ui -client 0.0.0.0</p>
</blockquote>
<h1 id="client"><a href="#client" class="headerlink" title="client"></a>client</h1><blockquote>
<p>docker run -d –name=consul_client –net=host -e ‘CONSUL_LOCAL_CONFIG={“skip_leave_on_interrupt”: true}’ consul agent -bind={server.ip} -join={master.ip} -ui -client 0.0.0.0</p>
</blockquote>
]]></content>
      <tags>
        <tag>consul</tag>
      </tags>
  </entry>
  <entry>
    <title>解决前后端分离项目的SEO问题</title>
    <url>/architecture/how-to-resolve-SEO-for-front-back-separation/</url>
    <content><![CDATA[<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><h3 id="手动实现后端渲染"><a href="#手动实现后端渲染" class="headerlink" title="手动实现后端渲染"></a>手动实现后端渲染</h3><p>针对爬虫机器人，把静态页面吐出来，而对于正常用户访问，直接重定向到源网站</p>
<h3 id="使用框架本身SSR方案"><a href="#使用框架本身SSR方案" class="headerlink" title="使用框架本身SSR方案"></a>使用框架本身SSR方案</h3><p>对于使用VUE、React实现的项目，框架本身是支持SSR的，本人使用过 <a href="https://umijs.org/zh-CN/docs/ssr#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93%EF%BC%9F">umi ssr</a><br>实现过一个简单的demo，但对于负责站点，还没有经过验证</p>
<h3 id="使用SSR中间件"><a href="#使用SSR中间件" class="headerlink" title="使用SSR中间件"></a>使用SSR中间件</h3><p>对于其他框架或三方开发的平台，我们想实现SSR，可以借助三方SSR中间件：</p>
<ul>
<li><p><a href="https://prerender.io/">prerender</a></p>
<p>本人使用过，生成的静态页面源代码，和浏览器查看的源代码一致</p>
</li>
<li><p><a href="https://developers.google.com/web/tools/puppeteer/get-started">Puppeteer</a> </p>
<blockquote>
<p><a href="https://pptr.dev/">Puppeteer 官方文档</a></p>
</blockquote>
<p>大部分可以在浏览器端完成的事，你都可以用 <code>puppeteer</code> 来完成，包括：</p>
<ul>
<li>生成页面截图、PDF</li>
<li>对页面SSR</li>
<li>自动化测试</li>
<li>等等</li>
</ul>
<p>它的实现其实就是调用了 <a href="https://developers.google.com/web/updates/2017/04/headless-chrome"><code>headless chrome</code></a>，<br>puppeteer 会自动下载并使用特定版本的 <code>Chromium</code>，当然也可以指定你自己本地的<code>Chrome</code></p>
<blockquote>
<p><code>Chrome</code> 和 <code>Chromium</code> 的关系，有点像是 <code>Oracle Jdk</code> 和 <code>OpenJdk</code> 的关系</p>
</blockquote>
</li>
<li><p><a href="https://github.com/GoogleChrome/rendertron#installing--deploying">Rendertron</a></p>
<blockquote>
<p><a href="https://render-tron.appspot.com/">render-tron</a></p>
</blockquote>
<p>也是一个基于 Headless Chrome 的渲染解决方案，用于动态渲染和连载网页。</p>
<p>功能比上面两个完善，支持缓存和刷新缓存、缓存过期设置，非常好用~</p>
</li>
</ul>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p>对上面两种方式来说，使用SSR中间件是最方便的，使用原则：</p>
<ul>
<li>如果你的项目框架支持ssr功能，建议直接使用它</li>
<li>如果你的项目自身进行ssr扩展很复杂，可以考虑使用上面的中间件，但也要自己扩展很多功能<ul>
<li>对于上面提到的三种渲染中间件：<ul>
<li><code>prerender</code>属于商用软件，但有基础开源版，拥有渲染的核心功能，足够使用；</li>
<li><code>Puppeteer</code>基于<code>Headless Chrome</code>，能实现浏览器上能实现的功能，其实就是调用<code>Chrome API</code></li>
<li>☆<code>Rendertron</code>也是基于<code>Headless Chrome</code>，能实现SSR，同时支持缓存功能，就本文而言，算是比较好的</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li><a href="/architecture/prerender-for-solves-javascript-seo/" title="Prerender —— 解决 JavaScript SEO 利器">Prerender —— 解决 JavaScript SEO 利器</a></li>
<li><a href="/architecture/ahrefs-for-a-powerful-seo-analysis-tool/" title="ahrefs-一款强大的SEO分析工具">ahrefs-一款强大的SEO分析工具</a></li>
<li><a href="https://developers.google.com/web/tools/puppeteer/articles/ssr">puppeteer ssr</a></li>
<li><a href="https://www.botify.com/blog/dynamic-rendering-seo">动态渲染对SEO的影响</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>react-ssr-无法渲染dangerouslySetInnerHTML</title>
    <url>/architecture/react-ssr-cannot-render-a-alone-dev-with-dangerouslySetInnerHTML/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>当需要在后端渲染html富文本时，发现如果 <code>dangerouslySetInnerHTML</code> 存在于一个独立的 <code>&lt;div&gt;</code> 标签里时，会渲染出一个空的 <code>&lt;div&gt;&lt;/div&gt;</code></p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在该<code>&lt;div dangerouslySetInnerHTML&gt;</code>标签外，再套一层 <code>&lt;div&gt;</code></p>
<ul>
<li><p>before:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;产品名称：&#123;title&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;产品描述&lt;/p&gt;</span><br><span class="line">    &lt;div dangerouslySetInnerHTML=&#123;&#123;__html: Description&#125;&#125;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>after:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;产品名称：&#123;title&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;产品描述&lt;/p&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;div dangerouslySetInnerHTML=&#123;&#123;__html: Description&#125;&#125;/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>这里有一个ssr的demo可供参考：<a href="https://github.com/OpenDemo/demo-umi-ssr">https://github.com/OpenDemo/demo-umi-ssr</a></p>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>TODO 需要研究下<code>react/umi</code>对<code>dangerouslySetInnerHTML</code>的渲染原理</p>
]]></content>
  </entry>
  <entry>
    <title>【cola】00 代码结构</title>
    <url>/ddd/cola-00-code-structure/</url>
    <content><![CDATA[<blockquote>
<p>Cola是阿里同学研发的一个通用项目框架，本文基于 Cola4.0</p>
</blockquote>
<h1 id="Cola-框架代码结构解析"><a href="#Cola-框架代码结构解析" class="headerlink" title="Cola 框架代码结构解析"></a>Cola 框架代码结构解析</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- adaptor</span><br><span class="line">    - web</span><br><span class="line">        - controller</span><br><span class="line">- app</span><br><span class="line">    - cmd</span><br><span class="line">        - query</span><br><span class="line">        - CmdExe</span><br><span class="line">    - event</span><br><span class="line">        - handler</span><br><span class="line">    - service</span><br><span class="line">- client</span><br><span class="line">    - api</span><br><span class="line">        - service interface</span><br><span class="line">    - context</span><br><span class="line">    - dto</span><br><span class="line">        - clientobject - 等价于 VO</span><br><span class="line">        - domain event - 领域事件</span><br><span class="line">        - cmd</span><br><span class="line">        - query</span><br><span class="line">- domain</span><br><span class="line">    - gateway</span><br><span class="line">    - domain entity</span><br><span class="line">- infrastructure</span><br><span class="line">    - common</span><br><span class="line">        - event</span><br><span class="line">        - exception</span><br><span class="line">    - config</span><br><span class="line">    - converter</span><br><span class="line">    - gateway impl</span><br><span class="line">        - database</span><br><span class="line">            - PO</span><br><span class="line">            - mapper</span><br><span class="line">        - rpc</span><br><span class="line">        - XXXGatewayImpl</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">adaptor</span><br><span class="line">adaptor.web</span><br><span class="line">adaptor.controller</span><br><span class="line">------------------------------</span><br><span class="line">app.cmd</span><br><span class="line">app.cmd.query</span><br><span class="line">app.cmd.CmdExe</span><br><span class="line">app.event</span><br><span class="line">app.event.handler</span><br><span class="line">app.service</span><br><span class="line">------------------------------</span><br><span class="line">client</span><br><span class="line">client.api</span><br><span class="line">client.api.serviceinterface - 业务服务 interface</span><br><span class="line">client.context</span><br><span class="line">client.dto</span><br><span class="line">client.dto.clientobject - 等价于 VO</span><br><span class="line">client.dto.domain event - 领域事件</span><br><span class="line">client.dto.cmd</span><br><span class="line">client.dto.query</span><br><span class="line">------------------------------</span><br><span class="line">domain</span><br><span class="line">domain.gateway          - gateway 接口层，防腐？</span><br><span class="line">------------------------------</span><br><span class="line">infrastructure.common</span><br><span class="line">infrastructure.common.event</span><br><span class="line">infrastructure.common.event.publisher - 只包含消息总线相关的底层框架</span><br><span class="line">infrastructure.common.exception</span><br><span class="line">infrastructure.config</span><br><span class="line">infrastructure.converter</span><br><span class="line">infrastructure.gatewayimpl</span><br><span class="line">infrastructure.gatewayimpl.database</span><br><span class="line">infrastructure.gatewayimpl.po</span><br><span class="line">infrastructure.gatewayimpl.mapper</span><br><span class="line">infrastructure.gatewayimpl.rpc</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line">分析下，主要模块的调用链，及每种数据对象用在哪一层</span><br><span class="line">------------------------------------------------</span><br><span class="line">adapter     -&gt;  app service  -&gt;  cmd/query exe  -&gt;  gateway        -&gt;  mapper</span><br><span class="line">|               |                |                  |                  |</span><br><span class="line">cmd/query   -&gt;  cmd/query    -&gt;  cmd/query      -&gt;  domain entity  -&gt;  PO</span><br><span class="line"></span><br><span class="line">                                                |                  -&gt;  event publisher</span><br><span class="line">                                                |                      |</span><br><span class="line">                                                |                  -&gt;  event</span><br><span class="line"></span><br><span class="line">                                                -&gt;  mapper</span><br><span class="line">                                                    |</span><br><span class="line">                                                -&gt;  domain entity  -&gt;  PO</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line">event handler   -&gt;  app service  -&gt;  cmd/query exe  -&gt;  gateway        -&gt;  mapper</span><br><span class="line">|                   |                |                  |                  |</span><br><span class="line">event           -&gt;  cmd          -&gt;  cmd/query      -&gt;  domain entity  -&gt;  PO</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line">逻辑处理类型（从请求到响应）：</span><br><span class="line">- 参数校验（参数是否为空等等）</span><br><span class="line"></span><br><span class="line">- 业务参数校验（下单时，商品是否下架；数据权限；）</span><br><span class="line"></span><br><span class="line">- </span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line">question:</span><br><span class="line"></span><br><span class="line">- exe 什么情况下调用 gateway，什么情况下直接调用 mapper？</span><br><span class="line"></span><br><span class="line">    - 当 gateway 会产生 event 的时候，那么，是否只有 gateway 才能生成 event ？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Rx分析"><a href="#Rx分析" class="headerlink" title="Rx分析"></a>Rx分析</h1><blockquote>
<p>Rx是以前一位同事的项目，这里只简单描述它的代码结构</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">------------------------------------------------</span><br><span class="line">application.service</span><br><span class="line"></span><br><span class="line">domain</span><br><span class="line">domain.cmd</span><br><span class="line">domain.cmd.handler</span><br><span class="line">domain.event</span><br><span class="line">domain.event.handler</span><br><span class="line"></span><br><span class="line">infrastructure</span><br><span class="line">infrastructure.config</span><br><span class="line">infrastructure.exception</span><br><span class="line">infrastructure.repository</span><br><span class="line"></span><br><span class="line">interfaces.api</span><br><span class="line">interfaces.assembler</span><br><span class="line">interfaces.dto</span><br><span class="line">interfaces.validation</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">分析下，主要模块的调用链，及每种数据对象用在哪一层</span><br><span class="line">------------------------------------------------</span><br><span class="line">interfaces  -&gt;  app service     -&gt;  cmd gateway</span><br><span class="line">|               |                   |</span><br><span class="line">request     -&gt;  request         -&gt;  cmd</span><br><span class="line">            |                   |</span><br><span class="line">            |                   -&gt;  repository          只有查询操作</span><br><span class="line">            |                   |</span><br><span class="line">            |                   -&gt;  infr                基础设施</span><br><span class="line">            |                   |</span><br><span class="line">            |                   -&gt;  security            用来获取当前登录用户信息</span><br><span class="line">            |</span><br><span class="line">            |</span><br><span class="line">            |</span><br><span class="line">            |</span><br><span class="line">            |</span><br><span class="line">            -&gt;  validation                              请求参数校验</span><br><span class="line"></span><br><span class="line">cmd handler -&gt;  domain service              -&gt;  repository      -&gt;  </span><br><span class="line">                实例化domain及domain service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>无论是框架还是协议还是规范，都是前辈们根据他们的项目经验总结的成果，但我们不一定必须 100% 遵从，必要时可以根据我们自己的项目情况、<br>团队情况进行改动，可能是降低标准、可能是提升和优化，最终达到<strong>平衡</strong></p>
]]></content>
      <tags>
        <tag>ddd</tag>
        <tag>cola</tag>
      </tags>
  </entry>
  <entry>
    <title>【docker】杀不死的docker</title>
    <url>/docker/%E3%80%90docker%E3%80%91%E6%9D%80%E4%B8%8D%E6%AD%BB%E7%9A%84docker/</url>
    <content><![CDATA[<p>Cannot restart container oasis-roomservice: Cannot kill container 9f34690345ddc450f8dcb60ed72fd0ceba3a9ce5196ba14e0a9b8e346082280a: connection error: desc = “transport: dial unix /var/run/docker/containerd/docker-containerd.sock: connect: connection refused”: unknown</p>
<p>应该是内存不足导致的</p>
<ul>
<li><a href="https://github.com/moby/moby/issues/36002">https://github.com/moby/moby/issues/36002</a></li>
<li><a href="https://github.com/jwilder/nginx-proxy/issues/1034">https://github.com/jwilder/nginx-proxy/issues/1034</a></li>
</ul>
]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>【bootstrap】file-input</title>
    <url>/frontend/%E3%80%90bootstrap%E3%80%91file-input/</url>
    <content><![CDATA[<blockquote>
<p>暂时不适用该方式上传文件</p>
</blockquote>
<h1 id="文件上传插件"><a href="#文件上传插件" class="headerlink" title="文件上传插件"></a>文件上传插件</h1><p>官方文档：<a href="http://plugins.krajee.com/file-input">fileinput</a></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul>
<li>引入css<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;c:url value=&quot;</span>/<span class="attr">assets</span>/<span class="attr">bower_components</span>/<span class="attr">bootstrap-fileinput</span>/<span class="attr">css</span>/<span class="attr">fileinput.min.css</span>&quot;/&gt;</span>&quot;/&gt;</span><br></pre></td></tr></table></figure></li>
<li>引入js<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;&lt;c:url value=&quot;/assets/bower_components/bootstrap-fileinput/js/fileinput.min.js&quot;/&gt;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;&lt;c:url value=&quot;/assets/bower_components/bootstrap-fileinput/js/locales/zh.js&quot;/&gt;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;&lt;c:url value=&quot;/assets/bower_components/bootstrap-fileinput/js/plugins/piexif.min.js&quot;/&gt;&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
该插件需要</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;f1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;file&quot;</span> <span class="attr">data-show-preview</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$scope.initFileinput(<span class="string">&quot;#f1&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$scope.initFileinput = <span class="function"><span class="keyword">function</span> (<span class="params">fileinputId</span>) </span>&#123;</span><br><span class="line">    $(fileinputId).fileinput(&#123;</span><br><span class="line">        <span class="string">&quot;uploadUrl&quot;</span>: <span class="string">&quot;/fileUpload/upload&quot;</span>,</span><br><span class="line">        <span class="string">&quot;maxFileSize&quot;</span>: <span class="number">20480</span>,</span><br><span class="line">        <span class="string">&quot;msgSizeTooLarge&quot;</span>: <span class="string">&quot;文件(&#123;name&#125; - &#123;size&#125; KB) 超过最大限制 &#123;maxSize&#125; KB. 请重新上传!&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $(fileinputId).on(<span class="string">&#x27;fileuploaded&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event, data, previewId, index</span>) </span>&#123;</span><br><span class="line">        $scope.taskRequest.fileName = data.response.fileName;</span><br><span class="line">        $scope.taskRequest.fileUrl = data.response.path;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>bootstrap</tag>
        <tag>fileinput</tag>
      </tags>
  </entry>
  <entry>
    <title>【docker】创建java容器</title>
    <url>/docker/%E3%80%90docker%E3%80%91%E5%88%9B%E5%BB%BAjava%E5%AE%B9%E5%99%A8/</url>
    <content><![CDATA[<h2 id="创建jre镜像"><a href="#创建jre镜像" class="headerlink" title="创建jre镜像"></a>创建jre镜像</h2><ul>
<li>Dockerfile / jre8</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM daocloud.io/library/java:8u111-jre-alpine</span><br><span class="line">MAINTAINER 624498030@qq.com</span><br><span class="line">ARG DOCKER_HOST_IP</span><br><span class="line">ENV DOCKER_HOST_IP=$DOCKER_HOST_IP</span><br><span class="line">RUN echo &quot;docker host ip found1: $DOCKER_HOST_IP&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>构建 oasis/java 的镜像</li>
</ul>
<blockquote>
<p>因为consul服务里要用到服务本身的内网IP（区别于镜像内部IP），<br>所以单独构建了 oasis/java 的镜像，将服务器IP映射到容器内</p>
</blockquote>
<p>把本机外网IP映射到镜像内</p>
<p><code>docker build --tag=oasis/java:latest --build-arg DOCKER_HOST_IP=$(ifconfig eth0 | grep inet | awk &#39;&#123;print $2&#125;&#39;) .</code></p>
<h2 id="构建容器"><a href="#构建容器" class="headerlink" title="构建容器"></a>构建容器</h2><p>自行替换</p>
<ul>
<li>${service-name} 服务名称</li>
<li>${outer-port}:${inner-port} 服务器端口:容器内端口</li>
<li>${container-name} 容器名字</li>
<li>${hotname} 主机名</li>
<li>${project-name} 项目打包后的名字</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;2&#x27;</span><br><span class="line">services:</span><br><span class="line">  $&#123;service-name&#125;:</span><br><span class="line">    image: oasis/java:latest</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;$&#123;outer-port&#125;:$&#123;inner-port&#125;&quot;</span><br><span class="line">      - &quot;$&#123;debug-port&#125;:$&#123;debug-port&#125;&quot;</span><br><span class="line">    container_name : $&#123;container-name&#125;</span><br><span class="line">    hostname: $&#123;hostname&#125;</span><br><span class="line">    mem_limit: 3000m</span><br><span class="line">    stdin_open: true</span><br><span class="line">    tty: true</span><br><span class="line">    working_dir: /opt/app</span><br><span class="line">    command: java -Dfile.encoding=UTF-8 -Duser.timezone=GMT+08 -Dspring.profiles.active=prod -jar -Xmx512M $&#123;project-name&#125;.jar</span><br><span class="line">    volumes:</span><br><span class="line">      - /data1/auto_upline/$&#123;project-name&#125;:/opt/app</span><br><span class="line">      - /etc/localtime:/etc/localtime:ro</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>【服务架构】微服务与分布式的区别</title>
    <url>/architecture/%E3%80%90%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E3%80%91%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<p>最近面试很多人，让他们说一下对微服务的理解，很多都扯到分布式架构上，可能压根没有对架构有一个基本的认识</p>
<span id="more"></span>


<p>微服务:</p>
<p>  分散能力</p>
<p>分布式:</p>
<p>  分散压力</p>
]]></content>
      <tags>
        <tag>服务架构</tag>
      </tags>
  </entry>
  <entry>
    <title>gh-pages 自定义 CNAME</title>
    <url>/github/gh-pages-how-generate-cname/</url>
    <content><![CDATA[<blockquote>
<p>如何自定义 github-pages CNAME</p>
</blockquote>
<ul>
<li>直接在 source 目录下新建 CNAME 文件</li>
</ul>
<p>在<code>CNAME</code>文件下填写自己的域名，如：rushgo.wiki</p>
<ul>
<li><p>使用<code>hexo-generator-cname</code>插件</p>
<ul>
<li><code>npm i hexo-generator-cname --save</code></li>
<li>在项目根目录下新建<code>CNAME</code>文件，填入自己的domain</li>
</ul>
</li>
</ul>
<p><strong>NOTICE 注意<code>CNAME</code>文件的插件路径，一个是<code>source</code>目录，一个是项目根目录</strong></p>
]]></content>
      <tags>
        <tag>github pages</tag>
      </tags>
  </entry>
  <entry>
    <title>【beego】工作流程</title>
    <url>/golang/%E3%80%90beego%E3%80%91%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="请求流程"><a href="#请求流程" class="headerlink" title="请求流程"></a>请求流程</h2><p>app.go =&gt; <code>init()</code> // 初始化 BeeApp， 创建 ControllerRegister</p>
<p><code>ControllerRegister</code>[/github.com/astaxie/beego/router.go:125]</p>
<p>可以看出 App 结构体的组成: <code>&#123;     Handlers *ControllerRegister     Server *http.Server &#125;</code><br>在 app.go:104 看到，将 app.Server.Handler 赋值为 app.Handlers</p>
<p>那么，这边有人问了，这个 Handler 要干嘛用的呢？说起 Handler 的作用，就要扯一下 go 里面的 http 请求流程，</p>
<p>请求开始处理的地方：</p>
<p><code>func (c \*conn) serve(ctx context.Context)</code>[/net/http/server.go:1739] -&gt; <code>serverHandler&#123;c.server&#125;.ServeHTTP(w, w.req)</code></p>
<p><code>func (sh serverHandler) ServeHTTP(rw ResponseWriter, req *Request)</code> -&gt; <code>handler.ServeHTTP(rw, req)</code></p>
<p>这里 <code>Handler.ServeHTTP</code> 是一个接口， 而 <code>ControllerRegister</code> 也实现了该接口，我们再去看看具体实现，记录几个比较有意思的地方：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Implement http.Handler interface.</span><br><span class="line">func (p *ControllerRegister) ServeHTTP(rw http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line">	startTime := time.Now()</span><br><span class="line">	var (</span><br><span class="line">		runRouter    reflect.Type</span><br><span class="line">		findRouter   bool</span><br><span class="line">		runMethod    string</span><br><span class="line">		methodParams []*param.MethodParam</span><br><span class="line">		routerInfo   *ControllerInfo</span><br><span class="line">		isRunnable   bool</span><br><span class="line">	)</span><br><span class="line">	// :star:✨✨✨ 这里用到了一个pool，用来存取 `beecontext.Context` ，用完又Put放回去了。回头详细了解下 pool 的作用</span><br><span class="line">	context := p.pool.Get().(*beecontext.Context)</span><br><span class="line">	// ✨✨✨ 设置context，关联Request.Context = context</span><br><span class="line">	context.Reset(rw, r)</span><br><span class="line"></span><br><span class="line">	defer p.pool.Put(context)</span><br><span class="line">	if BConfig.RecoverFunc != nil &#123;</span><br><span class="line">		// ✨✨✨ 具体实现：/github.com/astaxie/beego/config.go: 204[newBConfig],161[recoverPanic] </span><br><span class="line">		defer BConfig.RecoverFunc(context)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	...</span><br><span class="line">	...</span><br><span class="line">	...</span><br><span class="line"></span><br><span class="line">	// ✨✨✨ 静态文件过滤器</span><br><span class="line">	// filter for static file</span><br><span class="line">	if len(p.filters[BeforeStatic]) &gt; 0 &amp;&amp; p.execFilter(context, urlPath, BeforeStatic) &#123;</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line">	// ✨✨✨ 根据请求uri查找静态文件，比如：favicon.ico，robots.txt</span><br><span class="line">	serverStaticRouter(context)</span><br><span class="line">	// ✨✨✨ 当路由到静态文件时，调用 `ResponseWriter.write` 将 Started=true，即当前请求处理完成</span><br><span class="line">	if context.ResponseWriter.Started &#123;</span><br><span class="line">		findRouter = true</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if r.Method != http.MethodGet &amp;&amp; r.Method != http.MethodHead &#123;</span><br><span class="line">		if BConfig.CopyRequestBody &amp;&amp; !context.Input.IsUpload() &#123;</span><br><span class="line">			context.Input.CopyBody(BConfig.MaxMemory)</span><br><span class="line">		&#125;</span><br><span class="line">		context.Input.ParseFormOrMulitForm(BConfig.MaxMemory)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// ✨✨✨ 这里开始处理Session了，不过我们是接口服务，一般可以把session关闭，即 `SessionOn=False`</span><br><span class="line">	// session init</span><br><span class="line">	if BConfig.WebConfig.Session.SessionOn &#123;</span><br><span class="line">		var err error</span><br><span class="line">		context.Input.CruSession, err = GlobalSessions.SessionStart(rw, r)</span><br><span class="line">		if err != nil &#123;</span><br><span class="line">			logs.Error(err)</span><br><span class="line">			exception(&quot;503&quot;, context)</span><br><span class="line">			goto Admin</span><br><span class="line">		&#125;</span><br><span class="line">		defer func() &#123;</span><br><span class="line">			if context.Input.CruSession != nil &#123;</span><br><span class="line">				context.Input.CruSession.SessionRelease(rw)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// ✨✨✨ 过滤器，这个过滤器filters的实现结构很有意思，结构是个二元数组，根据下标存放不同功能的filter数组</span><br><span class="line">	// ✨✨✨ 而这个下标正好用到了不常见的`iota`</span><br><span class="line">	if len(p.filters[BeforeRouter]) &gt; 0 &amp;&amp; p.execFilter(context, urlPath, BeforeRouter) &#123;</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line">	// ✨✨✨ Input 怎么用的？还得深究一下</span><br><span class="line">	// User can define RunController and RunMethod in filter</span><br><span class="line">	if context.Input.RunController != nil &amp;&amp; context.Input.RunMethod != &quot;&quot; &#123;</span><br><span class="line">		findRouter = true</span><br><span class="line">		runMethod = context.Input.RunMethod</span><br><span class="line">		runRouter = context.Input.RunController</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		// ✨✨✨ 查找路由</span><br><span class="line">		routerInfo, findRouter = p.FindRouter(context)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//if no matches to url, throw a not found exception</span><br><span class="line">	if !findRouter &#123;</span><br><span class="line">		exception(&quot;404&quot;, context)</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line">	if splat := context.Input.Param(&quot;:splat&quot;); splat != &quot;&quot; &#123;</span><br><span class="line">		for k, v := range strings.Split(splat, &quot;/&quot;) &#123;</span><br><span class="line">			context.Input.SetParam(strconv.Itoa(k), v)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// ✨✨✨ ？？？</span><br><span class="line">	//execute middleware filters</span><br><span class="line">	if len(p.filters[BeforeExec]) &gt; 0 &amp;&amp; p.execFilter(context, urlPath, BeforeExec) &#123;</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//check policies</span><br><span class="line">	if p.execPolicy(context, urlPath) &#123;</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if routerInfo != nil &#123;</span><br><span class="line">		//store router pattern into context</span><br><span class="line">		context.Input.SetData(&quot;RouterPattern&quot;, routerInfo.pattern)</span><br><span class="line">		if routerInfo.routerType == routerTypeRESTFul &#123;</span><br><span class="line">			if _, ok := routerInfo.methods[r.Method]; ok &#123;</span><br><span class="line">				isRunnable = true</span><br><span class="line">				routerInfo.runFunction(context)</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				exception(&quot;405&quot;, context)</span><br><span class="line">				goto Admin</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; else if routerInfo.routerType == routerTypeHandler &#123;</span><br><span class="line">			isRunnable = true</span><br><span class="line">			routerInfo.handler.ServeHTTP(rw, r)</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			runRouter = routerInfo.controllerType</span><br><span class="line">			methodParams = routerInfo.methodParams</span><br><span class="line">			method := r.Method</span><br><span class="line">			if r.Method == http.MethodPost &amp;&amp; context.Input.Query(&quot;_method&quot;) == http.MethodPost &#123;</span><br><span class="line">				method = http.MethodPut</span><br><span class="line">			&#125;</span><br><span class="line">			if r.Method == http.MethodPost &amp;&amp; context.Input.Query(&quot;_method&quot;) == http.MethodDelete &#123;</span><br><span class="line">				method = http.MethodDelete</span><br><span class="line">			&#125;</span><br><span class="line">			if m, ok := routerInfo.methods[method]; ok &#123;</span><br><span class="line">				runMethod = m</span><br><span class="line">			&#125; else if m, ok = routerInfo.methods[&quot;*&quot;]; ok &#123;</span><br><span class="line">				runMethod = m</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				runMethod = method</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// also defined runRouter &amp; runMethod from filter</span><br><span class="line">	if !isRunnable &#123;</span><br><span class="line">		//Invoke the request handler</span><br><span class="line">		var execController ControllerInterface</span><br><span class="line">		if routerInfo != nil &amp;&amp; routerInfo.initialize != nil &#123;</span><br><span class="line">			// ✨✨✨ 反射获取到可执行的 `controller`</span><br><span class="line">			execController = routerInfo.initialize()</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			vc := reflect.New(runRouter)</span><br><span class="line">			var ok bool</span><br><span class="line">			execController, ok = vc.Interface().(ControllerInterface)</span><br><span class="line">			if !ok &#123;</span><br><span class="line">				panic(&quot;controller is not ControllerInterface&quot;)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		// ✨✨✨ beego.controller 生命周期之 Init</span><br><span class="line">		//call the controller init function</span><br><span class="line">		execController.Init(context, runRouter.Name(), runMethod, execController)</span><br><span class="line"></span><br><span class="line">		// ✨✨✨ beego.controller 生命周期之 Prepare</span><br><span class="line">		//call prepare function</span><br><span class="line">		execController.Prepare()</span><br><span class="line"></span><br><span class="line">		//if XSRF is Enable then check cookie where there has any cookie in the  request&#x27;s cookie _csrf</span><br><span class="line">		if BConfig.WebConfig.EnableXSRF &#123;</span><br><span class="line">			execController.XSRFToken()</span><br><span class="line">			if r.Method == http.MethodPost || r.Method == http.MethodDelete || r.Method == http.MethodPut ||</span><br><span class="line">				(r.Method == http.MethodPost &amp;&amp; (context.Input.Query(&quot;_method&quot;) == http.MethodDelete || context.Input.Query(&quot;_method&quot;) == http.MethodPut)) &#123;</span><br><span class="line">				execController.CheckXSRFCookie()</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		execController.URLMapping()</span><br><span class="line"></span><br><span class="line">		if !context.ResponseWriter.Started &#123;</span><br><span class="line">			//exec main logic</span><br><span class="line">			switch runMethod &#123;</span><br><span class="line">			case http.MethodGet:</span><br><span class="line">				execController.Get()</span><br><span class="line">			case http.MethodPost:</span><br><span class="line">				execController.Post()</span><br><span class="line">			case http.MethodDelete:</span><br><span class="line">				execController.Delete()</span><br><span class="line">			case http.MethodPut:</span><br><span class="line">				execController.Put()</span><br><span class="line">			case http.MethodHead:</span><br><span class="line">				execController.Head()</span><br><span class="line">			case http.MethodPatch:</span><br><span class="line">				execController.Patch()</span><br><span class="line">			case http.MethodOptions:</span><br><span class="line">				execController.Options()</span><br><span class="line">			default:</span><br><span class="line">				if !execController.HandlerFunc(runMethod) &#123;</span><br><span class="line">					vc := reflect.ValueOf(execController)</span><br><span class="line">					method := vc.MethodByName(runMethod)</span><br><span class="line">					in := param.ConvertParams(methodParams, method.Type(), context)</span><br><span class="line">					out := method.Call(in)</span><br><span class="line"></span><br><span class="line">					//For backward compatibility we only handle response if we had incoming methodParams</span><br><span class="line">					if methodParams != nil &#123;</span><br><span class="line">						p.handleParamResponse(context, execController, out)</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			//render template</span><br><span class="line">			if !context.ResponseWriter.Started &amp;&amp; context.Output.Status == 0 &#123;</span><br><span class="line">				if BConfig.WebConfig.AutoRender &#123;</span><br><span class="line">					if err := execController.Render(); err != nil &#123;</span><br><span class="line">						logs.Error(err)</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		// ✨✨✨ beego.controller 生命周期之 Finish</span><br><span class="line">		// finish all runRouter. release resource</span><br><span class="line">		execController.Finish()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//execute middleware filters</span><br><span class="line">	if len(p.filters[AfterExec]) &gt; 0 &amp;&amp; p.execFilter(context, urlPath, AfterExec) &#123;</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if len(p.filters[FinishRouter]) &gt; 0 &amp;&amp; p.execFilter(context, urlPath, FinishRouter) &#123;</span><br><span class="line">		goto Admin</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">Admin:</span><br><span class="line">	// ✨✨✨ 记录执行信息</span><br><span class="line">	//admin module record QPS</span><br><span class="line"></span><br><span class="line">	statusCode := context.ResponseWriter.Status</span><br><span class="line">	if statusCode == 0 &#123;</span><br><span class="line">		statusCode = 200</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	logAccess(context, &amp;startTime, statusCode)</span><br><span class="line"></span><br><span class="line">	timeDur := time.Since(startTime)</span><br><span class="line">	context.ResponseWriter.Elapsed = timeDur</span><br><span class="line">	if BConfig.Listen.EnableAdmin &#123;</span><br><span class="line">		pattern := &quot;&quot;</span><br><span class="line">		if routerInfo != nil &#123;</span><br><span class="line">			pattern = routerInfo.pattern</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		if FilterMonitorFunc(r.Method, r.URL.Path, timeDur, pattern, statusCode) &#123;</span><br><span class="line">			if runRouter != nil &#123;</span><br><span class="line">				go toolbox.StatisticsMap.AddStatistics(r.Method, r.URL.Path, runRouter.Name(), timeDur)</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				go toolbox.StatisticsMap.AddStatistics(r.Method, r.URL.Path, &quot;&quot;, timeDur)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if BConfig.RunMode == DEV &amp;&amp; !BConfig.Log.AccessLogs &#123;</span><br><span class="line">		var devInfo string</span><br><span class="line">		iswin := (runtime.GOOS == &quot;windows&quot;)</span><br><span class="line">		statusColor := logs.ColorByStatus(iswin, statusCode)</span><br><span class="line">		methodColor := logs.ColorByMethod(iswin, r.Method)</span><br><span class="line">		resetColor := logs.ColorByMethod(iswin, &quot;&quot;)</span><br><span class="line">		if findRouter &#123;</span><br><span class="line">			if routerInfo != nil &#123;</span><br><span class="line">				devInfo = fmt.Sprintf(&quot;|%15s|%s %3d %s|%13s|%8s|%s %-7s %s %-3s   r:%s&quot;, context.Input.IP(), statusColor, statusCode,</span><br><span class="line">					resetColor, timeDur.String(), &quot;match&quot;, methodColor, r.Method, resetColor, r.URL.Path,</span><br><span class="line">					routerInfo.pattern)</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				devInfo = fmt.Sprintf(&quot;|%15s|%s %3d %s|%13s|%8s|%s %-7s %s %-3s&quot;, context.Input.IP(), statusColor, statusCode, resetColor,</span><br><span class="line">					timeDur.String(), &quot;match&quot;, methodColor, r.Method, resetColor, r.URL.Path)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			devInfo = fmt.Sprintf(&quot;|%15s|%s %3d %s|%13s|%8s|%s %-7s %s %-3s&quot;, context.Input.IP(), statusColor, statusCode, resetColor,</span><br><span class="line">				timeDur.String(), &quot;nomatch&quot;, methodColor, r.Method, resetColor, r.URL.Path)</span><br><span class="line">		&#125;</span><br><span class="line">		if iswin &#123;</span><br><span class="line">			logs.W32Debug(devInfo)</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			logs.Debug(devInfo)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	// Call WriteHeader if status code has been set changed</span><br><span class="line">	if context.Output.Status != 0 &#123;</span><br><span class="line">		context.ResponseWriter.WriteHeader(context.Output.Status)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>golang</tag>
        <tag>beego</tag>
      </tags>
  </entry>
  <entry>
    <title>【mgo】mgo源码解读——cluster</title>
    <url>/golang/%E3%80%90mgo%E3%80%91mgo%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%E2%80%94%E2%80%94cluster/</url>
    <content><![CDATA[<h2 id="定时更新服务器信息-——-syncServersLoop"><a href="#定时更新服务器信息-——-syncServersLoop" class="headerlink" title="定时更新服务器信息 —— syncServersLoop"></a>定时更新服务器信息 —— syncServersLoop</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// syncServersLoop loops while the cluster is alive to keep its idea of the server topology up-to-date.</span><br><span class="line">// 当集群处于活动状态时，以循环来保持服务的实时拓扑结构。</span><br><span class="line"></span><br><span class="line">// It must be called just once from newCluster.</span><br><span class="line">// 必须从 newCluster 调用一次。</span><br><span class="line"></span><br><span class="line">// The loop iterates once syncServersDelay has passed, or if somebody injects a value into the cluster.sync channel to force a synchronization.</span><br><span class="line">// 一段时间（syncServersDelay）的延迟过后，循环会进行一次迭代。或者在 cluster.sync 管道中注入一个值，来强制执行一次同步操作。（从最后的select管道通信可以很容易看出）</span><br><span class="line"></span><br><span class="line">// A loop iteration will contact all servers in parallel, ask them about known peers and their own role within the cluster, and then attempt to do the same with all the peers retrieved.</span><br><span class="line">// 一次循环迭代将会✨并行✨访问所有服务，查询集群中已知的对等服务及自己的角色，然后对所有对等服务尝试同样的操作。</span><br><span class="line"> </span><br><span class="line">func (cluster *mongoCluster) syncServersLoop() &#123;</span><br><span class="line">    // ✨ 死循环</span><br><span class="line">	for &#123;</span><br><span class="line">		debugf(&quot;SYNC Cluster %p is starting a sync loop iteration.&quot;, cluster)</span><br><span class="line"></span><br><span class="line">		// ✨ 上锁！</span><br><span class="line">		cluster.Lock()</span><br><span class="line">		// ✨ 集群中没有服务了（全挂了？）</span><br><span class="line">		if cluster.references == 0 &#123;</span><br><span class="line">			cluster.Unlock()</span><br><span class="line">			break</span><br><span class="line">		&#125;</span><br><span class="line">		cluster.references++ // Keep alive while syncing.</span><br><span class="line">		// ✨ ？？？</span><br><span class="line">		direct := cluster.direct</span><br><span class="line">		cluster.Unlock()</span><br><span class="line"></span><br><span class="line">		cluster.syncServersIteration(direct)</span><br><span class="line"></span><br><span class="line">		// We just synchronized, so consume any outstanding requests.</span><br><span class="line">		select &#123;</span><br><span class="line">		case &lt;-cluster.sync:</span><br><span class="line">		default:</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		cluster.Release()</span><br><span class="line"></span><br><span class="line">		// Hold off before allowing another sync. No point in</span><br><span class="line">		// burning CPU looking for down servers.</span><br><span class="line">		if !cluster.failFast &#123;</span><br><span class="line">			time.Sleep(syncShortDelay)</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		cluster.Lock()</span><br><span class="line">		if cluster.references == 0 &#123;</span><br><span class="line">			cluster.Unlock()</span><br><span class="line">			break</span><br><span class="line">		&#125;</span><br><span class="line">		cluster.syncCount++</span><br><span class="line">		// Poke all waiters so they have a chance to timeout or</span><br><span class="line">		// restart syncing if they wish to.</span><br><span class="line">		cluster.serverSynced.Broadcast()</span><br><span class="line">		// Check if we have to restart immediately either way.</span><br><span class="line">		restart := !direct &amp;&amp; cluster.masters.Empty() || cluster.servers.Empty()</span><br><span class="line">		cluster.Unlock()</span><br><span class="line"></span><br><span class="line">		if restart &#123;</span><br><span class="line">			log(&quot;SYNC No masters found. Will synchronize again.&quot;)</span><br><span class="line">			time.Sleep(syncShortDelay)</span><br><span class="line">			continue</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		debugf(&quot;SYNC Cluster %p waiting for next requested or scheduled sync.&quot;, cluster)</span><br><span class="line"></span><br><span class="line">		// Hold off until somebody explicitly requests a synchronization</span><br><span class="line">		// or it&#x27;s time to check for a cluster topology change again.</span><br><span class="line">		select &#123;</span><br><span class="line">		case &lt;-cluster.sync:</span><br><span class="line">		case &lt;-time.After(syncServersDelay):</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	debugf(&quot;SYNC Cluster %p is stopping its sync loop.&quot;, cluster)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="同步服务info的核心"><a href="#同步服务info的核心" class="headerlink" title="同步服务info的核心"></a>同步服务info的核心</h2><p>设计到的点</p>
<ul>
<li>sync.WaitGroup 并发控制</li>
<li>sync.Mutex 这个简单</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func (cluster *mongoCluster) syncServersIteration(direct bool) &#123;</span><br><span class="line">	log(&quot;SYNC Starting full topology synchronization...&quot;)</span><br><span class="line"></span><br><span class="line">	var wg sync.WaitGroup</span><br><span class="line">	var m sync.Mutex</span><br><span class="line">	notYetAdded := make(map[string]pendingAdd)</span><br><span class="line">	addIfFound := make(map[string]bool)</span><br><span class="line">	seen := make(map[string]bool)</span><br><span class="line">	syncKind := partialSync</span><br><span class="line"></span><br><span class="line">	var spawnSync func(addr string, byMaster bool)</span><br><span class="line">	spawnSync = func(addr string, byMaster bool) &#123;</span><br><span class="line">		// ✨ 标记开启了一个新线程</span><br><span class="line">		wg.Add(1)</span><br><span class="line">		go func() &#123;</span><br><span class="line">			defer wg.Done()</span><br><span class="line"></span><br><span class="line">			// ✨ 解析地址，这个resolveAddr实现好🐂🍺，考虑的较全面</span><br><span class="line">			// ✨ （不进去看代码了）先解析ip地址，不是ip地址就当初udp连接解析，因为拨号连接可能耗时，用了select管道并发处理，这里分别以udp4、udp6进行尝试</span><br><span class="line">			tcpaddr, err := resolveAddr(addr)</span><br><span class="line">			if err != nil &#123;</span><br><span class="line">				log(&quot;SYNC Failed to start sync of &quot;, addr, &quot;: &quot;, err.Error())</span><br><span class="line">				return</span><br><span class="line">			&#125;</span><br><span class="line">			resolvedAddr := tcpaddr.String()</span><br><span class="line"></span><br><span class="line">			// ✨ 已发现地址的逻辑，要加锁</span><br><span class="line">			m.Lock()</span><br><span class="line">			if byMaster &#123;</span><br><span class="line">				if pending, ok := notYetAdded[resolvedAddr]; ok &#123;</span><br><span class="line">					delete(notYetAdded, resolvedAddr)</span><br><span class="line">					m.Unlock()</span><br><span class="line">					cluster.addServer(pending.server, pending.info, completeSync)</span><br><span class="line">					return</span><br><span class="line">				&#125;</span><br><span class="line">				addIfFound[resolvedAddr] = true</span><br><span class="line">			&#125;</span><br><span class="line">			// ✨ 如果已经发现该地址，stop</span><br><span class="line">			if seen[resolvedAddr] &#123;</span><br><span class="line">				m.Unlock()</span><br><span class="line">				return</span><br><span class="line">			&#125;</span><br><span class="line">			// ✨ 标记当前地址已被发现</span><br><span class="line">			seen[resolvedAddr] = true</span><br><span class="line">			m.Unlock()</span><br><span class="line"></span><br><span class="line">			server := cluster.server(addr, tcpaddr)</span><br><span class="line">			// ✨ 同步server信息</span><br><span class="line">			info, hosts, err := cluster.syncServer(server)</span><br><span class="line">			if err != nil &#123;</span><br><span class="line">				// ✨ 同步信息出错，移除</span><br><span class="line">				cluster.removeServer(server)</span><br><span class="line">				return</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			m.Lock()</span><br><span class="line">			add := direct || info.Master || addIfFound[resolvedAddr]</span><br><span class="line">			if add &#123;</span><br><span class="line">				syncKind = completeSync</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				notYetAdded[resolvedAddr] = pendingAdd&#123;server, info&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			m.Unlock()</span><br><span class="line">			if add &#123;</span><br><span class="line">				cluster.addServer(server, info, completeSync)</span><br><span class="line">			&#125;</span><br><span class="line">			if !direct &#123;</span><br><span class="line">				for _, addr := range hosts &#123;</span><br><span class="line">					spawnSync(addr, info.Master)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	knownAddrs := cluster.getKnownAddrs()</span><br><span class="line">	for _, addr := range knownAddrs &#123;</span><br><span class="line">		spawnSync(addr, false)</span><br><span class="line">	&#125;</span><br><span class="line">	wg.Wait()</span><br><span class="line"></span><br><span class="line">	if syncKind == completeSync &#123;</span><br><span class="line">		logf(&quot;SYNC Synchronization was complete (got data from primary).&quot;)</span><br><span class="line">		for _, pending := range notYetAdded &#123;</span><br><span class="line">			cluster.removeServer(pending.server)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		logf(&quot;SYNC Synchronization was partial (cannot talk to primary).&quot;)</span><br><span class="line">		for _, pending := range notYetAdded &#123;</span><br><span class="line">			cluster.addServer(pending.server, pending.info, partialSync)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cluster.Lock()</span><br><span class="line">	mastersLen := cluster.masters.Len()</span><br><span class="line">	logf(&quot;SYNC Synchronization completed: %d master(s) and %d slave(s) alive.&quot;, mastersLen, cluster.servers.Len()-mastersLen)</span><br><span class="line"></span><br><span class="line">	// Update dynamic seeds, but only if we have any good servers. Otherwise,</span><br><span class="line">	// leave them alone for better chances of a successful sync in the future.</span><br><span class="line">	if syncKind == completeSync &#123;</span><br><span class="line">		dynaSeeds := make([]string, cluster.servers.Len())</span><br><span class="line">		for i, server := range cluster.servers.Slice() &#123;</span><br><span class="line">			dynaSeeds[i] = server.Addr</span><br><span class="line">		&#125;</span><br><span class="line">		cluster.dynaSeeds = dynaSeeds</span><br><span class="line">		debugf(&quot;SYNC New dynamic seeds: %#v\n&quot;, dynaSeeds)</span><br><span class="line">	&#125;</span><br><span class="line">	cluster.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>golang</tag>
        <tag>mgo</tag>
      </tags>
  </entry>
  <entry>
    <title>如何定义线程数</title>
    <url>/java/how-to-define-thread-num/</url>
    <content><![CDATA[<h1 id="根据CPU核心数确定线程数"><a href="#根据CPU核心数确定线程数" class="headerlink" title="根据CPU核心数确定线程数"></a>根据CPU核心数确定线程数</h1><blockquote>
<p>refer <a href="https://www.cnblogs.com/dennyzhangdd/p/6909771.html">根据CPU核心数确定线程池并发线程数</a></p>
</blockquote>
<ul>
<li>当任务是计算型的，创建CPU核心数一样多的线程数</li>
<li>当任务是阻塞型的，需要尽可能多的创建线程，需要首先确定<code>阻塞系数</code></li>
</ul>
<p>如何理解上面两句话，比如：</p>
<p>对于计算型任务：4核心CPU，你创建了8个线程，其中一个线程A执行的好好的，但CPU却切换到另一个线程去执行，当再切换回来的时候，又要恢复A的执行上下文，这种情况反而对性能造成消耗；</p>
<p>对于阻塞性任务：4核心CPU，创建了8个线程，任务经常是阻塞的，这个时候CPU切换到其他线程去执行，就避免了阻塞造成的CPU占用，提高CPU使用率；</p>
<p>线程数 <code>Nthreads</code>= <code>Ncpu*Ucpu*(1+w/c)</code></p>
<p><code>Ncpu</code>=CPU核心数</p>
<p><code>Ucpu</code>=cpu使用率，0~1，一般我们肯定是想让CPU充分使用或接近100%，即 Ucpu≈1</p>
<p><code>W/C</code>=等待时间与计算时间的比率</p>
<h1 id="一般情况需要创建多少线程"><a href="#一般情况需要创建多少线程" class="headerlink" title="一般情况需要创建多少线程"></a>一般情况需要创建多少线程</h1><p>对于计算型任务，我们认为线程不会阻塞，则 w&gt;=0，则 <code>Nthreads</code> &gt;= <code>Ncpu*1*(1+0/c)</code> &gt;= <code>Ncpu</code></p>
<p>对于阻塞性任务，我们假定阻塞时间和计算时间是相等的，则 <code>w/c = 1</code> =&gt; <code>Nthreads</code> = <code>Ncpu*1*(1+1)</code> = <code>Ncpu * 2</code></p>
<p>同理，如果阻塞时间比较长，则创建的线程数应该更多</p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>开发中一般不过于关注这个问题，因为大多数项目里，会涉及到多个业务使用线程，可以先与CPU核心数保持一致即可</p>
<p>还有一种设置方法，Nthreads = Ncpu + 1，多设置一个线程，</p>
<h1 id="深入研究"><a href="#深入研究" class="headerlink" title="深入研究"></a>深入研究</h1><ul>
<li><a href="https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html">Java线程池实现原理及其在美团业务中的实践</a></li>
<li><a href="https://www.bilibili.com/read/cv7732319">线程调优总结（ThreadPoolExecutor）</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>【golang】当post https请求时，遇见301</title>
    <url>/golang/how-do-http_client-pass-post-request-when-301-redirect/</url>
    <content><![CDATA[<p>今天遇到个奇葩问题，一直在使用的通知接口突然报错了</p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我们提供了一个 post 通知接口（<a href="http://example.com/notify%EF%BC%89%E7%AA%81%E7%84%B6%E5%A4%B1%E6%95%88%E4%BA%86%EF%BC%8C%E5%AF%BC%E8%87%B4%E4%B8%89%E6%96%B9%E5%8F%91%E8%B4%A7%E5%A4%B1%E8%B4%A5%EF%BC%8C%E6%88%91%E4%BB%AC%E8%BF%99%E8%BE%B9%E6%98%AFjava%E6%9C%8D%E5%8A%A1%EF%BC%8C%E4%B8%89%E6%96%B9%E6%98%AFgolang%E6%9C%8D%E5%8A%A1">http://example.com/notify）突然失效了，导致三方发货失败，我们这边是java服务，三方是golang服务</a></p>
<p>我这边查了半天服务器日志，最后查到该请求报错是：<code>Request method &#39;GET&#39; not supported</code>，很奇怪，为什么变成了 <code>GET</code> 请求；</p>
<blockquote>
<p>为啥查了半天日志，因为这帮开发不知道为啥老喜欢把日志级别改成 INFO ，众所周知，spring-webmvc 只会在 DEBUG 级别打印请求信息，<br>就导致我看不到测试的请求，改成 DEBUG 之后才看到报错信息</p>
<p>虽然全局异常已经打印 <code>GlobalBizExceptionHandler : Request method &#39;GET&#39; not supported</code>，但是鬼知道是谁的请求导致的</p>
</blockquote>
<p>当跑到三方后台去调试接口的时候，发现填写的通知链接是：<code>http://example.com/notify</code></p>
<p>由于前几天运维把公司全部域名都加上了<code>重定向配置</code>，那就先改成<code>https</code> 再试一把，果然成功了；</p>
<p>但是，为什么 <code>POST</code> 请求会变成 <code>GET</code> 请求？</p>
<p>当时想了很多可能引发的原因，但是首先还是从三方的golang服务来推测，golang 中请求接口用的是<code>net/http</code>，不管3721，直接去google一番，<br>果然查到相似问题 <a href="https://stackoverflow.com/questions/27505066/why-do-post-request-in-the-go-http-client-not-follow-301-redirects">Why do POST request in the Go http.Client not follow 301 redirects?</a></p>
<p>文中提到 <code>it seems like GET requests follow 301 redirects, but not POST requests: http://golang.org/src/net/http/client.go</code>，<br><code>似乎 GET 请求才能正常 301 重定向，而 POST 请求不会</code>，还引导我们去看 <code>net/http/client</code> 源码：</p>
<p><code>/usr/local/Cellar/go@1.13/1.13.15/libexec/src/net/http/client.go:433</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">case 301, 302, 303:</span><br><span class="line">    redirectMethod = reqMethod</span><br><span class="line">    shouldRedirect = true</span><br><span class="line">    includeBody = false</span><br><span class="line"></span><br><span class="line">    // RFC 2616 allowed automatic redirection only with GET and</span><br><span class="line">    // HEAD requests. RFC 7231 lifts this restriction, but we still</span><br><span class="line">    // restrict other methods to GET to maintain compatibility.</span><br><span class="line">    // See Issue 18570.</span><br><span class="line">    if reqMethod != &quot;GET&quot; &amp;&amp; reqMethod != &quot;HEAD&quot; &#123;</span><br><span class="line">        redirectMethod = &quot;GET&quot;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>这段代码意思即：当碰到 <code>301</code>, <code>302</code>, <code>303</code> 状态码，同时请求不是 <code>GET</code>, <code>HEAD</code> 方法时，强制把重定向请求的方法改成了 <code>GET</code>，到这里算是真相大白了！</p>
<p>同时，如果对这段代码感兴趣的话，也可以读读<code>client</code>中<code>net/http/client.go:393</code>-<code>Get</code>方法的注释</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul>
<li>运维层修改配置，一定要确保通知到开发侧，否则找问题要费很大劲</li>
<li>像日志级别配置这种看似没技术含量的东西，没有经验的开发人员不要去管它，直接设置<code>DEBUG</code>级别即可，不要过多考虑服务器硬盘不够这种小问题</li>
</ul>
]]></content>
      <tags>
        <tag>事故记录</tag>
      </tags>
  </entry>
  <entry>
    <title>【feign】不支持在Get请求中使用对象传参</title>
    <url>/java/%E3%80%90feign%E3%80%91%E4%B8%8D%E6%94%AF%E6%8C%81%E5%9C%A8Get%E8%AF%B7%E6%B1%82%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E4%BC%A0%E5%8F%82/</url>
    <content><![CDATA[<p><img src= "/img/loading.gif" data-src="https://img.shields.io/badge/springcloud-Edgware.SR3-brightgreen" alt="spring-cloud"></p>
<p><img src= "/img/loading.gif" data-src="https://img.shields.io/badge/springboot-1.5.6.RELEASE-brightgreen" alt="spring-boot"></p>
<p>问题：feign 不支持在Get请求中使用对象传参</p>
<p>解决方法：</p>
<ol>
<li><p>改用 POST</p>
</li>
<li><p>改用 Map</p>
</li>
<li><p>自定义 Encoder</p>
<ul>
<li>@see <a href="https://github.com/OpenFeign/feign/issues/520">https://github.com/OpenFeign/feign/issues/520</a></li>
</ul>
</li>
</ol>
<h3 id="一点延伸"><a href="#一点延伸" class="headerlink" title="一点延伸"></a>一点延伸</h3><blockquote>
<p>quote: <a href="https://source.coveo.com/2016/07/21/feign-request-object/">https://source.coveo.com/2016/07/21/feign-request-object/</a></p>
</blockquote>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Using request objects with Feign</span><br><span class="line">BY JONATHAN ROCHETTE — JULY 21, 2016</span><br><span class="line">We recently decided to move our functional tests stack from python to Java, mainly to make coding them easier (our project’s backend is coded in Java) and thus increase the number of tests getting written. We needed a few things to make this possible and one of them was a complete and comprehensive Java client for the Usage Analytics API. Since a lot of the Java API clients we use internaly are built with Netflix’s Feign, I decided to give it a go.</span><br><span class="line"></span><br><span class="line">After playing with Feign a little, I started to really like the tool. Writing an HTTP client with it is pretty easy, and it would not be a lot of work to maintain. I only had one major concern: there was no out of the box support for request objects.</span><br><span class="line"></span><br><span class="line">Using request objects is a simple pattern that help maintain methods with many optional parameters, which is the case for some our API’s methods. Without request objects, calling a method would look like this:</span><br><span class="line"></span><br><span class="line">statsApi.getCombinedData(from,</span><br><span class="line">                         to,</span><br><span class="line">                         dimensions,</span><br><span class="line">                         metrics,</span><br><span class="line">                         null,</span><br><span class="line">                         null,</span><br><span class="line">                         null,</span><br><span class="line">                         null,</span><br><span class="line">                         true,</span><br><span class="line">                         null,</span><br><span class="line">                         null,</span><br><span class="line">                         null);</span><br><span class="line">Not looking so good, right? Using a request object transforms the method call into this:</span><br><span class="line"></span><br><span class="line">statsApi.getCombinedData(new GetCombinedDataRequest(from,</span><br><span class="line">                                                    to,</span><br><span class="line">                                                    dimensions,</span><br><span class="line">                                                    metrics)</span><br><span class="line">                         .withIncludeMetadata(true));</span><br><span class="line">Way better!</span><br><span class="line"></span><br><span class="line">For the request objects, we settled for a constructor that would take the required parameters of the API call in arguments. The optional parameters can then be added to the request with setters or via the fluent interface pattern.</span><br><span class="line"></span><br><span class="line">So, this is all very nice, but it does not fix my initial concern with Feign. I have some really nice request objects, but I cannot use any of them, as they are not supported. But, since Feign is very easily extendable, I simply added support for the request objects via a homemade encoder. And thus, the ReflectionEncoder was born.</span><br><span class="line"></span><br><span class="line">public class ReflectionEncoder implements Encoder</span><br><span class="line">&#123;</span><br><span class="line">    private static final String DEFAULT_DATETIME_FORMAT = &quot;yyyy-MM-dd&#x27;T&#x27;HH:mm:ss.SSSZZ&quot;;</span><br><span class="line">    private ObjectMapper mapper;</span><br><span class="line">    private Encoder fallbackEncoder;</span><br><span class="line"></span><br><span class="line">    public ReflectionEncoder(ObjectMapper mapper,</span><br><span class="line">                             Encoder fallbackEncoder)</span><br><span class="line">    &#123;</span><br><span class="line">        this.mapper = mapper;</span><br><span class="line">        this.fallbackEncoder = fallbackEncoder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void encode(Object parametersObject, Type bodyType, RequestTemplate template)</span><br><span class="line">      throws EncodeException &#123;</span><br><span class="line">      if (Request.class.isAssignableFrom(parametersObject.getClass())) &#123;</span><br><span class="line">        Map&lt;String, Object&gt; params = new HashMap&lt;&gt;();</span><br><span class="line">        try &#123;</span><br><span class="line">          // Prepare the requestTemplate</span><br><span class="line">          for (Method method : parametersObject.getClass().getMethods()) &#123;</span><br><span class="line">            if (method.isAnnotationPresent(QueryParam.class)) &#123;</span><br><span class="line">              String key = method.getAnnotation(QueryParam.class).value();</span><br><span class="line">              Object value = method.invoke(parametersObject);</span><br><span class="line">              if (value != null) &#123;</span><br><span class="line">                if (Collection.class.isAssignableFrom(method.getReturnType())) &#123;</span><br><span class="line">                  value =</span><br><span class="line">                      ((Collection&lt;?&gt;) value)</span><br><span class="line">                          .stream()</span><br><span class="line">                          .map(v -&gt; String.valueOf(v))</span><br><span class="line">                          .collect(Collectors.toList());</span><br><span class="line">                &#125; else if (DateTime.class.isAssignableFrom(method.getReturnType())) &#123;</span><br><span class="line">                  value = ((DateTime) value).toString(DEFAULT_DATETIME_FORMAT);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                  value = String.valueOf(value);</span><br><span class="line">                &#125;</span><br><span class="line">                params.put(key, value);</span><br><span class="line">                template.query(key, keyToTemplate(key));</span><br><span class="line">              &#125;</span><br><span class="line">            &#125; else if (method.isAnnotationPresent(PathParam.class)) &#123;</span><br><span class="line">              String key = method.getAnnotation(PathParam.class).value();</span><br><span class="line">              Object value = method.invoke(parametersObject);</span><br><span class="line">              if (value != null) &#123;</span><br><span class="line">                params.put(key, String.valueOf(value));</span><br><span class="line">              &#125;</span><br><span class="line">            &#125; else if (method.isAnnotationPresent(BodyParam.class)) &#123;</span><br><span class="line">              template.body(mapper.writeValueAsString(method.invoke(parametersObject)));</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          // Replace templates with actual values</span><br><span class="line">          template.resolve(params);</span><br><span class="line">        &#125; catch (</span><br><span class="line">            IllegalAccessException</span><br><span class="line">            | IllegalArgumentException</span><br><span class="line">            | InvocationTargetException</span><br><span class="line">            | JsonProcessingException e) &#123;</span><br><span class="line">          throw new EncodeException(&quot;Could not encode parameter object correctly&quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        fallbackEncoder.encode(parametersObject, bodyType, template);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String keyToTemplate(String key)</span><br><span class="line">    &#123;</span><br><span class="line">        return &quot;&#123;&quot; + key + &quot;&#125;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">It may look complicated, but it’s in fact pretty simple. Here is how it works: if the object received by the encoder is of the right type, it will use reflection to find the getters of the object, and depending on the annotation, inject the parameter at the right place in the RequestTemplate. Otherwise, it will use a fallback encoder.</span><br><span class="line"></span><br><span class="line">Now, simply set the ReflectionEncoder in your client class with the builder provided by Feign and you are ready to go!</span><br><span class="line"></span><br><span class="line">Here is a complete example of a simple client using request objects.</span><br><span class="line"></span><br><span class="line">public interface CustomDimensionsApi extends ClientFactory.Api</span><br><span class="line">&#123;</span><br><span class="line">    @RequestLine(&quot;PUT /&quot; + ApiVersion.VERSION + &quot;/dimensions/custom/&#123;apiName&#125;&quot;)</span><br><span class="line">    DimensionResponse editDimension(EditDimensionRequest request);</span><br><span class="line">&#125;</span><br><span class="line">public class EditDimensionRequest extends BaseRequest</span><br><span class="line">&#123;</span><br><span class="line">    private String apiName;</span><br><span class="line">    private Boolean updatePastEvents;</span><br><span class="line">    private CustomDimensionModel customDimensionModel;</span><br><span class="line"></span><br><span class="line">    public EditDimensionRequest(String apiName,</span><br><span class="line">                                CustomDimensionModel customDimensionModel)</span><br><span class="line">    &#123;</span><br><span class="line">        this.apiName = apiName;</span><br><span class="line">        this.customDimensionModel = customDimensionModel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @PathParam(&quot;apiName&quot;)</span><br><span class="line">    public String getApiName() &#123; return apiName; &#125;</span><br><span class="line">    public void setApiName(String apiName) &#123; this.apiName = apiName; &#125;</span><br><span class="line"></span><br><span class="line">    @QueryParam(&quot;updatePastEvents&quot;)</span><br><span class="line">    public Boolean getUpdatePastEvents() &#123; return updatePastEvents; &#125;</span><br><span class="line">    public void setUpdatePastEvents(Boolean updatePastEvents) &#123; this.updatePastEvents = updatePastEvents; &#125;</span><br><span class="line"></span><br><span class="line">    @BodyParam</span><br><span class="line">    public CustomDimensionModel getCustomDimensionModel() &#123; return customDimensionModel; &#125;</span><br><span class="line">    public void setCustomDimensionModel(CustomDimensionModel customDimensionModel) &#123; this.customDimensionModel = customDimensionModel; &#125;</span><br><span class="line"></span><br><span class="line">    public EditDimensionRequest withUpdatePastEvents(Boolean updatePastEvents)&#123;</span><br><span class="line">        setUpdatePastEvents(updatePastEvents); return this;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">There you have it: a very simple HTTP client built with Feign, using a request object. It made coding our functional tests way easier and made them much cleaner. The next steps for us would be to combine that with better exception handling (awesome post by my friend Jacques-Etienne Beaudet, go check it out) and we would be unstoppable!</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>feign</tag>
        <tag>spring-cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>【hystrix】探索</title>
    <url>/java/%E3%80%90hystrix%E3%80%91%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<h1 id="断路器"><a href="#断路器" class="headerlink" title="断路器"></a>断路器</h1><p>作用: 防止一个服务接口错误可能会导致级联故障. </p>
<p>触发条件: 当<strong>一个周期</strong>内, 单个接口调用次数超过<strong>请求调用阈值</strong>, 或失败率达到<strong>失败百分比阈值</strong>,<br>断路器将会打开, 并且请求会失败.</p>
<p>降级: 为了防止失败和断路, 开发中可以提供一个回调函数.<br>回调函数可以是另一个受Hystrix保护的接口, 静态数据或空值. </p>
<p><img src= "/img/loading.gif" data-src="https://raw.githubusercontent.com/spring-cloud/spring-cloud-netflix/1.4.x/docs/src/main/asciidoc/images/HystrixFallback.png"></p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>引入依赖:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>启用:</p>
<p><code>@EnableCircuitBreaker</code></p>
<p>See <a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration">here</a> for more.</p>
<p>See the <a href="https://github.com/Netflix/Hystrix/wiki/Configuration">Hystrix wiki</a> for details on the properties available.</p>
]]></content>
  </entry>
  <entry>
    <title>锁</title>
    <url>/java/lock/</url>
    <content><![CDATA[<blockquote>
<p>希望能只用一篇文章，让你理解java中锁的概念，或者能让你在面试中能够让面试官知道，你对锁是了解的！不会过多的解释底层实现</p>
</blockquote>
<h1 id="简单列出几个常见的锁"><a href="#简单列出几个常见的锁" class="headerlink" title="简单列出几个常见的锁"></a>简单列出几个常见的锁</h1><h2 id="核心接口"><a href="#核心接口" class="headerlink" title="核心接口"></a>核心接口</h2><ul>
<li><code>Lock</code> - 锁的核心接口</li>
<li><code>Condition</code> - 用来代替<code>Object</code>的<code>notify()</code>, <code>wait()</code></li>
</ul>
<h2 id="核心-Lock"><a href="#核心-Lock" class="headerlink" title="核心 Lock"></a>核心 Lock</h2><p>简单列一下涉及到锁的几个类，和他们的使用场景</p>
<ul>
<li><code>ReentrantLock</code> - 可重入锁，可被同一个线程lock很多次，但同样也需要unlock对应的次数；内部实现了公平锁、非公平锁机制；<ul>
<li><code>CyclicBarrier</code> 就是基于此实现的</li>
</ul>
</li>
<li><code>ReadWriteLock</code> - 读写锁<ul>
<li><code>ReentrantReadWriteLock</code> 可重入读写锁，多个线程可以调用，用于读多写少的场景<ul>
<li><code>锁降级</code> - 在 <code>可重入读写锁</code> 的注释里提到的一个概念，在释放写锁之前，获取一个读锁，然后释放写锁，执行一系列操作，最后释放读锁；场景：获取刚刚写操作的值，避免获取的是别的线程修改的数据</li>
</ul>
<blockquote>
<p>注释里，为什么要在获取写锁之前释放第一个读锁？避免死锁，同时在后面对 <code>cacheValid</code> 进行二次判断，就是为了防止前面释放读锁后的一瞬间，别的线程做了修改操作；</p>
</blockquote>
</li>
</ul>
</li>
<li><code>StampedLock</code> - 支持读写锁，获取锁后会返回一个戳（stamp），用于释放锁；同时支持乐观读锁，乐观读锁不会阻塞写锁，所以需要你在执行完读操作后，校验 stamp （<code>validate(stamp)</code>），如果返回false，就最好用（悲观）读锁重新操作，或者依然用乐观读锁循环执行，由此可见，乐观读锁在实际用的时候很麻烦，而且我们在开发中基本不需要考虑这个层次的优化，虽然 <code>对短、只读代码段使用乐观模式通常会减少争用并提高吞吐量</code>，但基本上不会用到它；</li>
</ul>
<h2 id="涉及锁的一些并发类"><a href="#涉及锁的一些并发类" class="headerlink" title="涉及锁的一些并发类"></a>涉及锁的一些并发类</h2><ul>
<li><code>CountDownLatch</code> - 类似于计数器的东西，主要用于需要等待多个子线程执行完，主线程再往下执行的场景（一个线程等多个线程）</li>
<li><code>CyclicBarrier</code> - 回环栅栏，当所有线程都到开始await时，所有线程才可以往下进行；（类似于一个栅栏，当所有的选手都到达栅栏的时候，开始放行；）（多个线程相互等待）<ul>
<li>cyclic，回环，表示它可以重用，我们可以联想一下短跑比赛，当5个人跑完100米，标记下每个人的用时，然后继续跑下一个100米，再计时…</li>
</ul>
</li>
<li><code>Semaphore</code> - 信号量，也可称之为资源量，比如一个网吧有100台记起你，100个小学生全占住了，只有等走了一个小学生，下个人才能上机；</li>
</ul>
<blockquote>
<p>有了上面的了解，让你能够在遇到业务的时候，知道使用哪种锁来解决问题，让你能够有和他人沟通的能力</p>
</blockquote>
<h1 id="公平锁、非公平锁"><a href="#公平锁、非公平锁" class="headerlink" title="公平锁、非公平锁"></a>公平锁、非公平锁</h1><p>这两种锁是一种概念，在java中多个锁里面都有内部的实现方式；</p>
<ul>
<li>公平锁，就是在线程等待获取锁的时候，谁等待的时间长，谁优先获取锁；</li>
<li>非公平锁，则是当前线程去获取锁的时候，恰好锁没有被占用，则直接给他用；这就相当于你去银行办业务，正好有个窗口送走一个客户，工作人员赶紧把你拉过来，让你先办理，排队的人只能干瞪眼；</li>
</ul>
<h1 id="悲观锁、乐观锁"><a href="#悲观锁、乐观锁" class="headerlink" title="悲观锁、乐观锁"></a>悲观锁、乐观锁</h1><h2 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h2><p>就像上面说的 <code>StampedLock</code> 的乐观读锁一样，每次都假设数据不会被篡改，我直接读取数据，等读完发现，被改了，那我就重新读；自旋锁 CAS 也是一种乐观锁；</p>
<p>虽然乐观锁在正常使用的时候，性能上有很大优势，但有很多缺点：</p>
<ul>
<li>ABA 问题</li>
</ul>
<p>乐观锁中会出现的一个问题，比如第一次读取的时候是A，在赋值前，另一个线程把A set 为B，又把B set 会A，当前线程会认为什么也没发生；</p>
<blockquote>
<p>这就相当于你从数据库中，select where id=1，在内存中做对比，然后执行 update where id=1，实际上很可能，另外一个线程，已经在两步操作之间改过这条数据了</p>
</blockquote>
<ul>
<li>循环时间开销大</li>
</ul>
<h2 id="悲观锁"><a href="#悲观锁" class="headerlink" title="悲观锁"></a>悲观锁</h2><p>以读锁为例，我担心在读的时候，有写操作会影响到我，那我就加一个悲观读锁，让你写操作进不来；java中<code>synchronized</code>、<code>ReetrantLock</code> 都属于悲观锁；</p>
<h1 id="java并发包下的几个重要的接口（）"><a href="#java并发包下的几个重要的接口（）" class="headerlink" title="java并发包下的几个重要的接口（）"></a>java并发包下的几个重要的接口（）</h1><ul>
<li>locks<ul>
<li><code>AbstractOwnableSynchronizer</code> - 线程独占同步器，其实就是用来存放一个线程，用于后续<code>AQS</code>和其他子类的实现</li>
<li><code>AbstractQueuedSynchronizer</code> - </li>
</ul>
</li>
</ul>
<h2 id="基于核心接口实现了哪几种锁"><a href="#基于核心接口实现了哪几种锁" class="headerlink" title="基于核心接口实现了哪几种锁"></a>基于核心接口实现了哪几种锁</h2><blockquote>
<p>了解这些，让你知道锁的基本原理，在和他人交流的时候，略有谈资</p>
</blockquote>
<h1 id="深入了解（TODO）"><a href="#深入了解（TODO）" class="headerlink" title="深入了解（TODO）"></a>深入了解（TODO）</h1><ul>
<li>synchronize 原理</li>
<li>CAS 原理</li>
<li>AQS 原理</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>【mybatis】通用mapper注册流程</title>
    <url>/java/%E3%80%90mybatis%E3%80%91%E9%80%9A%E7%94%A8mapper%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://github.com/abel533/Mapper">https://github.com/abel533/Mapper</a><br>/oasis-o2o/Mapper</p>
</blockquote>
<h2 id="通用mapper注册流程"><a href="#通用mapper注册流程" class="headerlink" title="通用mapper注册流程"></a>通用mapper注册流程</h2><p>使用咱们自己的mapper扩展插件时, 想自定义mapper实现批量插入(见:InsertListMapper), 发现无法实例化 <code>SpecialProvider</code>, </p>
<p><code>org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method</code></p>
<p>研究其mapper注册流程发现, 在 <code>MapperScannerConfigurer</code> 中未配置 <code>mappers</code> 时, 默认注册 <code>tk.mybatis.mapper.common.Mapper</code>, 代码见 <code>tk.mybatis.mapper.mapperhelper.MapperHelper#ifEmptyRegisterDefaultInterface</code>, 如果指定了 <code>mappers</code>, 则在 <code>setProperties</code> 时就开始注册了, 代码见 <code>tk.mybatis.mapper.mapperhelper.MapperHelper#setProperties</code></p>
]]></content>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】参数校验</title>
    <url>/php/%E3%80%90php%E3%80%91%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">&#x27;form_validation&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = [</span><br><span class="line">    <span class="string">&#x27;_id&#x27;</span> =&gt; <span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">&quot;_id&quot;</span>),</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span> =&gt; <span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">&quot;name&quot;</span>),</span><br><span class="line">    <span class="string">&#x27;covers&#x27;</span> =&gt; <span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">&quot;covers&quot;</span>),</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 将要验证的参数 set 进去</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;form_validation-&gt;set_data(<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// validate</span></span><br><span class="line"><span class="variable">$config</span> = [[</span><br><span class="line">    <span class="string">&#x27;field&#x27;</span> =&gt; <span class="string">&#x27;_id&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rules&#x27;</span> =&gt; <span class="string">&#x27;required&#x27;</span></span><br><span class="line">], [</span><br><span class="line">    <span class="string">&#x27;field&#x27;</span> =&gt; <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rules&#x27;</span> =&gt; <span class="string">&#x27;required&#x27;</span></span><br><span class="line">], [</span><br><span class="line">    <span class="comment">// 数组需要在后面或两边加括号：covers[] 或 [covers]</span></span><br><span class="line">    <span class="string">&#x27;field&#x27;</span> =&gt; <span class="string">&#x27;covers[]&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;label&#x27;</span> =&gt; <span class="string">&#x27;cover&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rules&#x27;</span> =&gt; <span class="string">&#x27;required&#x27;</span></span><br><span class="line">]];</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;form_validation-&gt;set_rules(<span class="variable">$config</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;form_validation-&gt;run() === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;form_validation-&gt;error_array();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>【项目管理】开发规范</title>
    <url>/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<ul>
<li><p>代码规范</p>
<ul>
<li>代码风格</li>
</ul>
<p>自行下载 google-style 规范, 并在此基础上修改 java、html、JavaScript 的代码缩进，444: Tab-Size [2 -&gt; 4]，Indent [2 -&gt; 4]。</p>
<ul>
<li>参数命名规范</li>
</ul>
<p>命名尽量全，一般<strong>不要使用缩写</strong>，做到<strong>望文生义</strong>，<br>一般遵循各个语言的命名规则，比如：java-&gt;驼峰命名，php-&gt;小写+下划线</p>
<ul>
<li>接口规范</li>
</ul>
<ol>
<li>restful，url一般格式：/uri, /uri/action，一般用http method表示行为，<br>特殊行为一般在资源定位符最后标记行为，比如：publish</li>
<li>参数名：也是尽量不使用缩写，<strong>望文生义</strong>，一般格式也是：小写+下划线</li>
</ol>
</li>
<li><p>git 使用规范</p>
<p>参考：<a href="/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91git%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/" title="【项目管理】git使用规范">【项目管理】git使用规范</a></p>
</li>
<li><p>数据库规范</p>
<p>参考：<a href="/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%84%E8%8C%83/" title="【项目管理】数据库规范">【项目管理】数据库规范</a></p>
</li>
<li><p>idea</p>
<p>我们自己搭建了一个jetbrains的注册服务，android studio、idea、pycharm、webstorm都可以使用。 </p>
<blockquote>
<p><a href="http://54.183.56.211:1027/">http://54.183.56.211:1027</a></p>
</blockquote>
<p>jrebel</p>
<blockquote>
<p><a href="http://139.199.89.239:1008/88414687-3b91-4286-89ba-2dc813b107ce">http://139.199.89.239:1008/88414687-3b91-4286-89ba-2dc813b107ce</a></p>
</blockquote>
</li>
<li><p>其他服务地址</p>
<p><a href="http://back.oasiscare.cn/">服务列表</a><br><a href="http://172.20.0.4:8000/">seafile</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>项目管理</tag>
        <tag>开发规范</tag>
      </tags>
  </entry>
  <entry>
    <title>【项目管理】spring-cloud接口定义规范</title>
    <url>/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91spring-cloud%E6%8E%A5%E5%8F%A3%E5%AE%9A%E4%B9%89%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p>接口分两种, 一种是服务间调用, 一种是前端调用</p>
<p>建议 server 接口放在 controller.server 包下面</p>
<p>server 接口禁止外网访问,所以访问路径最好区分开放接口访问路径</p>
<h2 id="调用者配置"><a href="#调用者配置" class="headerlink" title="调用者配置"></a>调用者配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  [<span class="string">server</span>]<span class="string">:</span></span><br><span class="line">    <span class="comment"># 服务的serviceId</span></span><br><span class="line">    <span class="attr">serviceId:</span> <span class="string">...</span></span><br><span class="line">    <span class="comment"># 服务的请求url（ip:port），方便本地调试</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">...</span></span><br></pre></td></tr></table></figure>

<h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><p>写api的时候建议这样写，方便以后调用者调试，调用方通过Configuration注入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;$&#123;server.pay.serviceId:pay-server&#125;&quot;, url = &quot;$&#123;server.pay.url:&#125;&quot;)</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/pay-server&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PayCenterInterface</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接口是否配置 @FeignClient，调用方也有不同的配置方式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="comment">// 1) 支付中心配置了 @FiegnClient，会自动扫描指定包下的 接口</span></span><br><span class="line"><span class="meta">@EnableFeignClients(&#123;&quot;cn.oasis.pay.service&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2) PayCenterInterface 没有配置 @FeignClient</span></span><br><span class="line">    <span class="meta">@FeignClient(value = &quot;$&#123;server.pay.serviceId:pay-server&#125;&quot;, url = &quot;$&#123;server.pay.url:&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PayServer</span> <span class="keyword">extends</span> <span class="title">PayCenterInterface</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ul>
<li><p>偶尔会发现接口重复定义的错误(@FeignClient)</p>
<p>  微服务接口(@FeignClient)定义的时候, 不要在类名上加 <code>@RequestMapping</code>, spring会扫描该注解, 并将所有方法映射 <code>mappingRegistry</code> 里</p>
<p>  原理:</p>
<p>  <code>org.springframework.web.servlet.handler.AbstractHandlerMethodMapping#initHandlerMethods</code><br>  获取所有的bean, 筛选出controller方法, 见<code>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#isHandler</code>,<br>  所有 <code>@Controller</code> <strong>或</strong> <code>@RequestMapping</code> 的bean都将会扫描到, 这里解答了上面接口重复定义的问题,<br>  注册mapping: <code>org.springframework.web.servlet.handler.AbstractHandlerMethodMapping#registerHandlerMethod</code></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>spring-cloud</tag>
        <tag>项目管理</tag>
      </tags>
  </entry>
  <entry>
    <title>【项目管理】git使用规范</title>
    <url>/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91git%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p>在开工之前，我们约定一下git的开发流程，详细的可以参考这篇文章:<br><a href="https://blog.csdn.net/u012562943/article/details/79754587">https://blog.csdn.net/u012562943/article/details/79754587</a></p>
<p>基本原则：</p>
<p><img src= "/img/loading.gif" data-src="../res/git.png" alt="Git"></p>
<p>1 分支解释：</p>
<ul>
<li><p>master 是受保护的分支，今后是稳定版本，用于build和线上部署，是稳定分支，不可以push。只有当代码经过验证以后，负责人才可以合并到该分支；</p>
</li>
<li><p>dev 分支是大家可以进行开发集成和测试的分支，原则上接受pull和push，本次大家都在 dev 分支上开发；</p>
</li>
</ul>
<p>2 需要开发一个 feature 或者版本的时候，从master中创建一个分支出来，在本地进行开发，开发完毕后合并到测试（dev）分支进行验证，验证通过后才可以合并到master进行上线；</p>
<p>  大体步骤：</p>
<ul>
<li>创建项目</li>
<li>从 master 分支上开出若干环境分支，如：dev(对应测试环境), sim, online</li>
<li>开始一个任务的 时候从gitlab界面上开feature分支(create from master), 命名规范建议是feature/jira-123</li>
<li>在开发者本机执 行: git fetch</li>
<li>在开发者本机执 行: git checkout origin feature/xxxx</li>
<li>提交代码: git commit …</li>
<li>测试验证 feature 分支是否正常；</li>
<li>推送 feature 分支：git push origin feature/xxxx</li>
<li>在 GOGS 界面上合并 feature 分支到对应的环境分支</li>
</ul>
<p>  注意：</p>
<ul>
<li>从 master 分支开出分支，以及合并到master这个过程建议在GOGS界面上面来做，而不是在命令行中；</li>
<li>本次本着迅速开发原则，dev 分支是一个初始分支，大家可以直接pull和push；但为了保证不相互冲突，鼓励大家创建自己的 feature 分支；</li>
</ul>
]]></content>
      <tags>
        <tag>项目管理</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>intellij-java-google-style-sucre</title>
    <url>/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91intellij-java-google-style-sucre/</url>
    <content><![CDATA[<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code_scheme</span> <span class="attr">name</span>=<span class="string">&quot;GoogleStyle&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;OTHER_INDENT_OPTIONS&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;USE_TAB_CHARACTER&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;SMART_TABS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;LABEL_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;LABEL_INDENT_ABSOLUTE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;USE_RELATIVE_INDENTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INSERT_INNER_CLASS_IMPORTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND&quot;</span> <span class="attr">value</span>=<span class="string">&quot;999&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND&quot;</span> <span class="attr">value</span>=<span class="string">&quot;999&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;PACKAGES_TO_USE_IMPORT_ON_DEMAND&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;IMPORT_LAYOUT_TABLE&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">withSubpackages</span>=<span class="string">&quot;true&quot;</span> <span class="attr">static</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">emptyLine</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">withSubpackages</span>=<span class="string">&quot;true&quot;</span> <span class="attr">static</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;RIGHT_MARGIN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;JD_ALIGN_PARAM_COMMENTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;JD_ALIGN_EXCEPTION_COMMENTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;JD_P_AT_EMPTY_LINES&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;JD_KEEP_EMPTY_PARAMETER&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;JD_KEEP_EMPTY_EXCEPTION&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;JD_KEEP_EMPTY_RETURN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_CONTROL_STATEMENT_IN_ONE_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_BLANK_LINES_BEFORE_RBRACE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_BLANK_LINES_IN_CODE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BLANK_LINES_AFTER_CLASS_HEADER&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_PARAMETERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_FOR&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CALL_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;METHOD_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;EXTENDS_LIST_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;THROWS_KEYWORD_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;METHOD_CALL_CHAIN_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_SIGN_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_SIGNS_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_STATEMENT_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ARRAY_INITIALIZER_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;WRAP_COMMENTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;IF_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;DOWHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;WHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">AndroidXmlCodeStyleSettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;USE_CUSTOM_SETTINGS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;LAYOUT_SETTINGS&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INSERT_BLANK_LINE_BEFORE_TAG&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">AndroidXmlCodeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">JSCodeStyleSettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_CHAINED_CALLS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">JSCodeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Python</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;USE_CONTINUATION_INDENT_FOR_ARGUMENTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Python</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">TypeScriptCodeStyleSettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_CHAINED_CALLS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">TypeScriptCodeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">XML</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;XML_ALIGN_ATTRIBUTES&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;XML_LEGACY_SETTINGS_IMPORTED&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">XML</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;CSS&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;ECMA Script Level 4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_BLANK_LINES_IN_CODE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_PARAMETERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_FOR&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CALL_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;METHOD_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;EXTENDS_LIST_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_SIGN_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_SIGNS_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_STATEMENT_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ARRAY_INITIALIZER_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;IF_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;DOWHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;WHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;PARENT_SETTINGS_INSTALLED&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;HTML&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;JAVA&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_CONTROL_STATEMENT_IN_ONE_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_BLANK_LINES_IN_CODE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BLANK_LINES_AFTER_CLASS_HEADER&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_PARAMETERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_RESOURCES&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_FOR&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CALL_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;METHOD_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;EXTENDS_LIST_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;THROWS_KEYWORD_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;METHOD_CALL_CHAIN_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_SIGN_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_SIGNS_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_STATEMENT_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ARRAY_INITIALIZER_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;WRAP_COMMENTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;IF_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;DOWHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;WHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;PARENT_SETTINGS_INSTALLED&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;JSON&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;JavaScript&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;RIGHT_MARGIN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_BLANK_LINES_IN_CODE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_PARAMETERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_FOR&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CALL_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;METHOD_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_SIGN_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TERNARY_OPERATION_SIGNS_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_STATEMENT_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ARRAY_INITIALIZER_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;IF_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;DOWHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;WHILE_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_BRACE_FORCE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;PARENT_SETTINGS_INSTALLED&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;PROTO&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;RIGHT_MARGIN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;protobuf&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;RIGHT_MARGIN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;Python&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_BLANK_LINES_IN_CODE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;RIGHT_MARGIN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_PARAMETERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;PARENT_SETTINGS_INSTALLED&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;SASS&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;SCSS&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;TypeScript&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;XML&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TAB_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arrangement</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>xmlns:android<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>^$<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>xmlns:.*<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>^$<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:id<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>style<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>^$<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>^$<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:.*Style<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_width<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_height<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_weight<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_margin<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_marginTop<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_marginBottom<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_marginStart<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_marginEnd<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_marginLeft<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_marginRight<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:layout_.*<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:padding<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:paddingTop<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:paddingBottom<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:paddingStart<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:paddingEnd<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:paddingLeft<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*:paddingRight<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_ATTRIBUTE</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res/android<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/apk/res-auto<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>http://schemas.android.com/tools<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">match</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">AND</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">NAME</span>&gt;</span>.*<span class="tag">&lt;/<span class="name">NAME</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">XML_NAMESPACE</span>&gt;</span>.*<span class="tag">&lt;/<span class="name">XML_NAMESPACE</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">AND</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">order</span>&gt;</span>BY_NAME<span class="tag">&lt;/<span class="name">order</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">arrangement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Objective-C</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_NAMESPACE_MEMBERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_C_STRUCT_MEMBERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_CLASS_MEMBERS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_VISIBILITY_KEYWORDS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_INSIDE_CODE_BLOCK&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_STRUCTURES_IN_ONE_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FUNCTION_PARAMETERS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FUNCTION_CALL_ARGUMENTS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TEMPLATE_CALL_ARGUMENTS_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TEMPLATE_CALL_ARGUMENTS_ALIGN_MULTILINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_INIT_LIST_IN_COLUMNS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;SPACE_BEFORE_SUPERCLASS_COLON&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Objective-C</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Objective-C-extensions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;GENERATE_INSTANCE_VARIABLES_FOR_PROPERTIES&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ASK&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;RELEASE_STYLE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;IVAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;TYPE_QUALIFIERS_PLACEMENT&quot;</span> <span class="attr">value</span>=<span class="string">&quot;BEFORE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">file</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Import&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Macro&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Typedef&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Enum&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Constant&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Global&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Struct&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;FunctionPredecl&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Function&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Property&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Synthesize&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;InitMethod&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;StaticMethod&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;InstanceMethod&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;com.jetbrains.cidr.lang.util.OCDeclarationKind&quot;</span> <span class="attr">value</span>=<span class="string">&quot;DeallocMethod&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">extensions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pair</span> <span class="attr">source</span>=<span class="string">&quot;cc&quot;</span> <span class="attr">header</span>=<span class="string">&quot;h&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pair</span> <span class="attr">source</span>=<span class="string">&quot;c&quot;</span> <span class="attr">header</span>=<span class="string">&quot;h&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Objective-C-extensions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">codeStyleSettings</span> <span class="attr">language</span>=<span class="string">&quot;ObjectiveC&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;RIGHT_MARGIN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;KEEP_BLANK_LINES_BEFORE_RBRACE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BLANK_LINES_BEFORE_IMPORTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BLANK_LINES_AFTER_IMPORTS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BLANK_LINES_AROUND_CLASS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BLANK_LINES_AROUND_METHOD&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BLANK_LINES_AROUND_METHOD_IN_INTERFACE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ALIGN_MULTILINE_BINARY_OPERATION&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;BINARY_OPERATION_SIGN_ON_NEXT_LINE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;FOR_STATEMENT_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ASSIGNMENT_WRAP&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;CONTINUATION_INDENT_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">indentOptions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">codeStyleSettings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code_scheme</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>项目管理</tag>
        <tag>code style</tag>
      </tags>
  </entry>
  <entry>
    <title>【项目管理】接口设计</title>
    <url>/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="服务接口设计"><a href="#服务接口设计" class="headerlink" title="服务接口设计"></a>服务接口设计</h1><ul>
<li><p>swagger 地址</p>
</li>
<li><p>是否需要redis</p>
</li>
<li><p>是否幂等</p>
</li>
<li><p>时序图（服务调用）</p>
</li>
<li><p>接口URL</p>
</li>
<li><p>接口参数</p>
</li>
<li><p>接口返回值</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>项目管理</tag>
      </tags>
  </entry>
  <entry>
    <title>【项目管理】数据库规范</title>
    <url>/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p>1 建库</p>
<p>最好每种业务，有自己的库，不要都放在同一个库里。</p>
<p>同业务下有日志表，最好能建立（业务名_log) 这样的库，已便于以后拆分，能够很容易的将日志表剥离出来。</p>
<p>2 建表</p>
<ul>
<li>统一用小写字母，用”_”进行分割，对相关功能的表应当使用相同前缀，如crm_xxx，前缀通常为库名或依赖主实体对象</li>
<li>控制库名，表名，字段名的长度</li>
<li>默认，都是innodb引擎</li>
<li>默认字符集都是utf8mb4</li>
<li>表都要有自增id 作为主键</li>
<li>尽量不要用外键，</li>
<li>禁用存储过程，触发器</li>
<li>字段都要有comment，default值，not null</li>
<li>log表提前规划好分表或者归档规则。</li>
<li>不要跨库多表查询。</li>
</ul>
<p>3 索引</p>
<p>按查询条件，大家提前规划下索引，不能裸上表。</p>
]]></content>
      <tags>
        <tag>项目管理</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>【redis】RedisTemplate的一点疑问</title>
    <url>/redis/%E3%80%90redis%E3%80%91RedisTemplate%E7%9A%84%E4%B8%80%E7%82%B9%E7%96%91%E9%97%AE/</url>
    <content><![CDATA[<blockquote>
<p>这是一个连接池的问题，虽说 RedisTemplate ，但实际上是 JedisPool</p>
</blockquote>
<p>最近老是看到 redis 从pool里获取/释放的频繁操作日志, 跟踪业务发现, 每调用一次 RestTemplate.execute(callback), 都会从连接池里获取jedis连接</p>
<p>频繁获取和释放连接, 会很浪费CPU资源.<br>在获取Jedis时, 会经过下面几个操作:</p>
<ul>
<li>获取空闲对象(takeObject/pollObject)</li>
<li>激活对象(activateObject)</li>
<li>检查对象是否可用(testOnBorrow/testOnCreate/validateObject)</li>
<li>修改统计状态(updateStatsBorrow)</li>
</ul>
<p>释放资源时:</p>
<ul>
<li>检查对象是否可用(testOnReturn/validateObject)<ul>
<li>如果不可用, 销毁(destroy), ensureIdle(1, false)</li>
</ul>
</li>
<li>钝化对象(passivateObject), 意思就是刚对象刚被使用过, 让他休息一下</li>
<li>归还对象(addFirst/addLast)</li>
<li>修改统计状态(updateStatsBorrow)</li>
</ul>
<p>当然你可以把业务放在callback里处理, 但是这样使得callback里的代码变得冗长，感觉又不太爽,<br>所以我们自己把jedis重新封装一下，它的取用全由自己控制，且可以避免<br><code>redis.clients.jedis.exceptions.JedisException: Could not return the resource to the pool</code>异常</p>
<p>这里来看下rap的一个issue, 值得借鉴:<br><a href="https://github.com/thx/RAP/pull/1008">https://github.com/thx/RAP/pull/1008</a><br>解决:<br><a href="https://github.com/thx/RAP/commit/ebd22f2b095b9cb6983a9945e5297a4ace9d439a">https://github.com/thx/RAP/commit/ebd22f2b095b9cb6983a9945e5297a4ace9d439a</a></p>
]]></content>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>【guava】EventBus</title>
    <url>/java/%E3%80%90guava%E3%80%91EventBus/</url>
    <content><![CDATA[<h1 id="EventBus"><a href="#EventBus" class="headerlink" title="EventBus"></a>EventBus</h1><p>消息总线, 望文生义, 发布订阅者模式中用来做事件调度的组件</p>
<p>下文基於<code>guava-18.0</code></p>
<p>EventBus 比較值得学习的是:</p>
<ul>
<li><p>com.google.common.eventbus.EventBus#subscribersByType</p>
<blockquote>
<p>SetMultimap&lt;Class&lt;?&gt;, EventSubscriber&gt; subscribersByType</p>
</blockquote>
<p>以 event object 作为 key, method 为方法</p>
<p>这样在消费event的时候, 可以根据 event object 快速找出所有的订阅者方法(@Subscribe)</p>
<p>注册消费者的方法可以借鉴<br>-&gt; <code>com.google.common.eventbus.EventBus#register</code><br>-&gt; <code>com.google.common.collect.Multimap#putAll</code></p>
</li>
<li><p>AsyncEventBus</p>
<p>异步的消息总线, 其实就是继承EventBus之后重写了3个方法:</p>
<ul>
<li><p>enqueueEvent: event入队列</p>
<ul>
<li>EventBus: 使用ThreadLocal隔离多线程, 每个线程自己处理自己的event</li>
<li>AsyncEventBus: 使用ConcurrentLinkedQueue解决并发, 使得任务调度更高效</li>
</ul>
</li>
<li><p>dispatchQueuedEvents: 调度队列中的 event</p>
<p>几乎没什么区别, 都是循环拿event进行调度</p>
<ul>
<li>EventBus: 还要用isDispatching设置是否正在执行的开关, 感觉有点鸡肋</li>
</ul>
</li>
<li><p>dispatch: 调度方法</p>
<ul>
<li>EventBus: 反射调用真实的订阅者(<code>method.invoke(target, new Object[] &#123; event &#125;)</code>)</li>
<li>AsyncEventBus: 使用 Executor 异步调度: super.dispatch</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><p><a href="http://ifeve.com/google-guava-eventbus/">[Google Guava] 11-事件总线</a></p>
<p>很好的解释了:</p>
<ul>
<li>为什么要用 EventBus</li>
<li>为什么使用 @Subscribe 注解, 而不是接口</li>
<li>为什么不使用泛型(spring event 中就用的泛型), 而是 Object</li>
</ul>
</li>
<li><p><a href="https://juejin.im/post/5b61c852e51d451956055476">Guava：EventBus 源码分析</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>guava</tag>
        <tag>eventbus</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-boot】如何优雅关闭服务</title>
    <url>/spring/%E3%80%90spring-boot%E3%80%91%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%85%B3%E9%97%AD%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="借助-spring-boot"><a href="#借助-spring-boot" class="headerlink" title="借助 spring-boot"></a>借助 spring-boot</h2><p>开启优雅关闭终端：<code>endpoints.shutdown.enabled: true</code></p>
<p>调用接口： <code>POST /shutdown</code></p>
<h2 id="用docker实现"><a href="#用docker实现" class="headerlink" title="用docker实现"></a>用docker实现</h2><ul>
<li><p>docker stop/restart [-t seconds] [container_id]</p>
<p>发送中断信号，不会接收新的请求，之前的请求会继续运行</p>
<ul>
<li><p>新请求无法创建连接：因为服务不再接收新的请求，所以会报503：Service Unavailable，<br>建议Client设置一个合适的 <strong>连接超时时间</strong></p>
</li>
<li><p>超时时间[-t]：到达超时时间后，服务仍会立即中断，所以最好 <strong>设置一个合适的超时时间</strong></p>
</li>
<li><p>日志：接收到中断信号后，log不会再打印，但 <code>log.isXXXEnabled()</code> 仍返回 <code>true</code>！<br>所以不要用log作为判断请求中断的标记，而是用<code>System.out.print</code></p>
</li>
</ul>
</li>
</ul>
<h2 id="代码解决"><a href="#代码解决" class="headerlink" title="代码解决"></a>代码解决</h2><blockquote>
<p>该方法只是手动关闭服务线程，前几种方法已经可以做到，不建议使用</p>
</blockquote>
<ul>
<li><p>实现</p>
<p>自定义 <a href="#GracefulShutdownConfiguration"><code>GracefulShutdownConfiguration</code></a></p>
<p>通过 <code>@ImportAutoConfiguration(GracefulShutdownConfiguration.class)</code> 启用配置</p>
</li>
<li><p>问题：停止后服务仍未关闭，用<code>jstack</code>看到仍然有线程在执行（基于我当前的服务）：</p>
<ul>
<li><p>org.springframework.cloud.consul.config.ConfigWatch</p>
<p>解决：<code>spring.cloud.consul.config.watch.enabled: false</code></p>
<p>但是有些服务是需要开启的</p>
<p>查看源码，该线程默认要等待55s来判断结束状态，时间较长</p>
</li>
<li><p>ch.qos.logback.classic.AsyncAppender</p>
<p>解决：logback-spring 里加上</p>
<p><code>&lt;shutdownHook class=&quot;ch.qos.logback.core.hook.DelayingShutdownHook&quot;/&gt;</code></p>
<p><code>ShutdownHookBase#close</code> 里会调用 <code>Context.stop()</code> 进行关闭</p>
</li>
</ul>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><p><a href="http://docs.api.xiaomi.com/app-engine-v2/bestpractice-pod-prestop.html">应用优雅停止最佳实践</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/4e13db951895">spring boot 2.0 实现优雅停机</a></p>
</li>
<li><p>spring boot issue: <a href="https://github.com/spring-projects/spring-boot/issues/4657">Shut down embedded servlet container gracefully</a></p>
</li>
<li><p>A graceful shutdown starter for Spring-Boot: <a href="https://github.com/corentin59/spring-boot-graceful-shutdown">spring-boot-graceful-shutdown</a></p>
</li>
<li><p>graceful shutdown by impl <code>TomcatConnectorCustomizer</code>: <a href="https://dzone.com/articles/graceful-shutdown-spring-boot-applications">Graceful Shutdown Spring Boot Applications</a></p>
</li>
<li><p><a href="http://tech.lede.com/2017/07/31/rd/server/TomcatShutdownProblem/">Tomcat停机过程分析及线程处理方法</a></p>
</li>
</ul>
<h2 id="GracefulShutdownConfiguration"><a href="#GracefulShutdownConfiguration" class="headerlink" title="GracefulShutdownConfiguration"></a>GracefulShutdownConfiguration</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GracefulShutdownConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GracefulShutdown <span class="title">gracefulShutdown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> GracefulShutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TomcatEmbeddedServletContainerFactory <span class="title">webServerFactory</span><span class="params">(<span class="keyword">final</span> GracefulShutdown gracefulShutdown)</span> </span>&#123;</span><br><span class="line">        TomcatEmbeddedServletContainerFactory factory = <span class="keyword">new</span> TomcatEmbeddedServletContainerFactory();</span><br><span class="line">        factory.addConnectorCustomizers(gracefulShutdown);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">GracefulShutdown</span> <span class="keyword">implements</span> <span class="title">TomcatConnectorCustomizer</span>, <span class="title">ApplicationListener</span>&lt;<span class="title">ContextClosedEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">volatile</span> Connector connector;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(Connector connector)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.connector = connector;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ContextClosedEvent event)</span> </span>&#123;</span><br><span class="line">            log.info(<span class="string">&quot;signal: shutdown&quot;</span>);</span><br><span class="line">            log.info(event.toString());</span><br><span class="line">            <span class="keyword">this</span>.connector.pause();</span><br><span class="line">            Executor executor = <span class="keyword">this</span>.connector.getProtocolHandler().getExecutor();</span><br><span class="line">            <span class="keyword">if</span> (executor <span class="keyword">instanceof</span> ThreadPoolExecutor) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) executor;</span><br><span class="line">                    threadPoolExecutor.shutdown();</span><br><span class="line">                    log.info(threadPoolExecutor.getActiveCount() + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (!threadPoolExecutor.awaitTermination(<span class="number">30</span>, TimeUnit.SECONDS)) &#123;</span><br><span class="line">                        log.warn(<span class="string">&quot;Tomcat thread pool did not shut down gracefully within &quot;</span></span><br><span class="line">                            + <span class="string">&quot;30 seconds. Proceeding with forceful shutdown&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</span><br><span class="line">                    Thread.currentThread().interrupt();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>【项目管理】错误代码定义</title>
    <url>/proj-mgmt/%E3%80%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%91%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<h3 id="通用异常代码"><a href="#通用异常代码" class="headerlink" title="通用异常代码"></a>通用异常代码</h3><table>
<thead>
<tr>
<th>代码</th>
<th>错误信息</th>
</tr>
</thead>
<tbody><tr>
<td>-440001</td>
<td>服务内部错误</td>
</tr>
<tr>
<td>-440002</td>
<td>服务内部错误</td>
</tr>
<tr>
<td>——-</td>
<td></td>
</tr>
<tr>
<td>-330001</td>
<td>无效参数</td>
</tr>
<tr>
<td>-330002</td>
<td>缺少参数</td>
</tr>
<tr>
<td>-330003</td>
<td>资源不存在</td>
</tr>
<tr>
<td>-330004</td>
<td>未登录</td>
</tr>
<tr>
<td>-330005</td>
<td>请求类型不支持</td>
</tr>
<tr>
<td>-330006</td>
<td>非法操作</td>
</tr>
<tr>
<td>-330007</td>
<td>未注册</td>
</tr>
</tbody></table>
<h3 id="服务异常定义规则"><a href="#服务异常定义规则" class="headerlink" title="服务异常定义规则"></a>服务异常定义规则</h3><p>异常代码长度为7位，组成：服务代码（2） + 业务代码（2） + 错误代码（3）</p>
<p>比如：</p>
<p>消息服务中发送邮件失败：1101001</p>
<ul>
<li>11 代表消息服务</li>
<li>01 代表邮件业务</li>
<li>001 代表邮件发送失败</li>
</ul>
<table>
<thead>
<tr>
<th>服务</th>
<th>服务代码</th>
</tr>
</thead>
<tbody><tr>
<td>xxx-message</td>
<td>11</td>
</tr>
<tr>
<td>xxx-pay</td>
<td>12</td>
</tr>
<tr>
<td>xxx-order</td>
<td>13</td>
</tr>
<tr>
<td>xxx-assets</td>
<td>14</td>
</tr>
<tr>
<td>xxx-product</td>
<td>15</td>
</tr>
<tr>
<td>xxx-promotion</td>
<td>16</td>
</tr>
<tr>
<td>xxx-medicine</td>
<td>17</td>
</tr>
<tr>
<td>xxx-thirdpartner</td>
<td>18</td>
</tr>
</tbody></table>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://open.weibo.com/wiki/Error_code">微博错误码定义</a></p>
]]></content>
      <tags>
        <tag>项目管理</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-cloud】在网关中配置swagger</title>
    <url>/spring/%E3%80%90spring-cloud%E3%80%91%E5%9C%A8%E7%BD%91%E5%85%B3%E4%B8%AD%E9%85%8D%E7%BD%AEswagger/</url>
    <content><![CDATA[<h2 id="TODO-LIST"><a href="#TODO-LIST" class="headerlink" title="TODO LIST"></a>TODO LIST</h2><ul>
<li>[1/2] 在你的服务中配置swagger接口的地址</li>
</ul>
<p>在 application.yml 中配置</p>
<p><code>springfox.documentation.swagger.v2.path: /&#123;server path&#125;/api-docs</code></p>
<p><code>&#123;server path&#125;</code> 为你的服务在网关中配置的上下文路径，比如下面的订单服务在网关的配置中，上下文路径为<strong>order-server</strong>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">order:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/order-server/**</span></span><br><span class="line">  <span class="attr">serviceId:</span> <span class="string">order-server</span></span><br><span class="line">  <span class="attr">stripPrefix:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>[2/2] 在网关中配置接口访问URI</li>
</ul>
<p>在 <code>application.yml</code> 中如下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">swagger:</span></span><br><span class="line">  <span class="attr">apis:</span></span><br><span class="line">    <span class="comment"># 订单系统</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">order-server</span></span><br><span class="line">      <span class="attr">location:</span> <span class="string">/order-server/api-docs</span></span><br><span class="line">    <span class="comment"># 支付系统</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pay-server</span></span><br><span class="line">      <span class="attr">location:</span> <span class="string">/pay/api-docs</span></span><br></pre></td></tr></table></figure>

<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>swagger的请求处理器 <code>Swagger2Controller</code> 中有个默认接口URI <code>DEFAULT_URL</code>，下面的注解用于替换默认URI：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@PropertySourcedMapping(</span><br><span class="line">      value = &quot;$&#123;springfox.documentation.swagger.v2.path&#125;&quot;,</span><br><span class="line">      propertyKey = &quot;springfox.documentation.swagger.v2.path&quot;)</span><br></pre></td></tr></table></figure>
<p>具体该注解处理方法，见 <code>PropertySourcedRequestMappingHandlerMapping</code></p>
]]></content>
      <tags>
        <tag>spring-cloud</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-cloud】ribbon探索</title>
    <url>/spring/%E3%80%90spring-cloud%E3%80%91ribbon%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 开启负载均衡重试</span><br><span class="line">spring.cloud.loadbalancer.retry.enabled: true</span><br><span class="line">ribbon:</span><br><span class="line">  # 最多重试多少台服务</span><br><span class="line">  MaxAutoRetriesNextServer: 2</span><br><span class="line">  # 每台服务器最多重试次数，但是首次调用不包括在内</span><br><span class="line">  MaxAutoRetries: 1</span><br><span class="line">  # 连接超时时间</span><br><span class="line">  ConnectTimeout: 1000</span><br><span class="line">  # 读取超时时间</span><br><span class="line">  ReadTimeout: 3000</span><br></pre></td></tr></table></figure>

<p>如果针对某个服务做负载均衡, 可把 ribbon 配置放在该服务节点下, 比如: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx-server:</span><br><span class="line">  ribbon:</span><br><span class="line">    # 最多重试多少台服务</span><br><span class="line">    MaxAutoRetriesNextServer: 2</span><br><span class="line">    # 每台服务器最多重试次数，但是首次调用不包括在内</span><br><span class="line">    MaxAutoRetries: 1</span><br><span class="line">    # 连接超时时间</span><br><span class="line">    ConnectTimeout: 1000</span><br><span class="line">    # 读取超时时间</span><br><span class="line">    ReadTimeout: 3000</span><br></pre></td></tr></table></figure>

<p>或者使用注解: @RibbonClients, @RibbonClient(name=”xxx-server”, configuration=XXXConfiguration.class)</p>
<h2 id="配置类源码追溯"><a href="#配置类源码追溯" class="headerlink" title="配置类源码追溯"></a>配置类源码追溯</h2><blockquote>
<p>配置相关 key<br>com.netflix.client.config.CommonClientConfigKey</p>
<p>ribbon ClientConfig 构造器<br>com.netflix.client.config.IClientConfig.Builder</p>
<p>默认值(除 connectTimeout, readTimeout 外, 其他配置都使用该类中的默认值, 前面两个属性在 RibbonClientConfiguration 已经声明)<br>com.netflix.client.config.DefaultClientConfigImpl</p>
</blockquote>
<blockquote>
<p>💡:bulb:<br>这里需要注意一个地方<br>connectTimeout, readTimeout 如果没有显式配置, 默认值为: 1000, 1000.</p>
<blockquote>
<p>org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration#DEFAULT_CONNECT_TIMEOUT = 1000<br>org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration#DEFAULT_READ_TIMEOUT = 1000<br>初始化 RibbonClientConfig 的位置在 org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration#ribbonClientConfig.</p>
</blockquote>
<p>有配置的时候,自然使用配置的value, DefaultClientConfigImpl里的默认值然而并没有用到(ps: 应该在其他地方用到了: HttpClientRibbonConfiguration, OkHttpRibbonConfiguration)</p>
<p>这大概就是为什么我们服务(牵涉到三方调用)经常出现超时的原因</p>
</blockquote>
<h2 id="负载均衡规则"><a href="#负载均衡规则" class="headerlink" title="负载均衡规则"></a>负载均衡规则</h2><ul>
<li><strong>ClientConfigEnabledRoundRobinRule</strong> 内嵌了一个 <strong>RoundRobinRule</strong><ul>
<li><strong>BestAvailableRule</strong>         最优可用: 获取其中ActiveRequestsCount最小的服务</li>
<li><strong>PredicateBasedRule</strong>        基于 Predicate 的规则 <ul>
<li><strong>ZoneAvoidanceRule</strong>       区域去除判定: 判断某个区域的运行性能是否可用, 提出不可用的区域(该区域下的所有服务)</li>
<li><strong>AvailabilityFilterRule</strong>  可用性判定: 过滤掉连接数过多的server</li>
</ul>
</li>
</ul>
</li>
<li><strong>RoundRobinRule</strong>              轮询<ul>
<li><strong>WeightedResponseTimeRule</strong>  根据响应时间分配一个weight，响应时间越长，weight越小，被选中的可能性越低</li>
<li><strong>ResponseTimeWeightTimeRule</strong> (??? use WeightedResponseTimeRule instead)</li>
</ul>
</li>
<li><strong>RandomRule</strong> 随机</li>
<li><strong>RetryRule</strong>  重试规则, 失败之后会在指定时间内以subRule继续获取服务, 默认subRule=RoundRobinRule</li>
</ul>
<p>规则配置方式(以 RetryRule 为例):</p>
<ul>
<li>properties方式</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ribbon:</span><br><span class="line">  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule</span><br></pre></td></tr></table></figure>

<ul>
<li>java config</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Bean</span><br><span class="line">IRule rule() &#123;</span><br><span class="line">    RetryRule retryRule = new RetryRule();</span><br><span class="line">    retryRule.setMaxRetryMillis(1000);</span><br><span class="line">    retryRule.setRule(subRule());</span><br><span class="line">    return retryRule;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IRule subRule() &#123;</span><br><span class="line">    return new RoundRobinRule();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>默认规则: com.netflix.loadbalancer.AvailabilityFilteringRule</p>
<h2 id="依赖说明"><a href="#依赖说明" class="headerlink" title="依赖说明"></a>依赖说明</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&lt;dependencyManagement&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;Edgware.SR3&lt;/version&gt;</span><br><span class="line">          &lt;type&gt;pom&lt;/type&gt;</span><br><span class="line">          &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/dependencyManagement&gt;</span><br></pre></td></tr></table></figure>

<h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><ul>
<li><a href="https://github.com/Netflix/ribbon/wiki/Getting-Started">https://github.com/Netflix/ribbon/wiki/Getting-Started</a></li>
</ul>
]]></content>
      <tags>
        <tag>spring-cloud</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-boot】配置grafana</title>
    <url>/spring/%E3%80%90spring-boot%E3%80%91%E9%85%8D%E7%BD%AEgrafana/</url>
    <content><![CDATA[<h2 id="项目配置-spring-boot-1-5-x"><a href="#项目配置-spring-boot-1-5-x" class="headerlink" title="项目配置(spring-boot:1.5.x)"></a>项目配置(spring-boot:1.5.x)</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependecies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.1.1 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- prometheus相关依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.micrometer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>micrometer-spring-legacy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.micrometer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>micrometer-registry-prometheus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Actuator (with security enabled) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependecies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="grafana"><a href="#grafana" class="headerlink" title="grafana"></a>grafana</h2><p><img src= "/img/loading.gif" data-src="../../assets/grafana-01.png"></p>
<p><img src= "/img/loading.gif" data-src="../../assets/grafana-02.png"></p>
<p><img src= "/img/loading.gif" data-src="../../assets/grafana-03.png"></p>
<p>Dashboard for Spring Boot 1.x applications, using Micrometer and Prometheus.</p>
<h3 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h3><ul>
<li>Overall status</li>
<li>API stats</li>
<li>Tomcat</li>
<li>JVM</li>
</ul>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>Only one variable is declared in Grafana:<br>在该dashboard中有一个变量 <code>$job</code>, 用来标识job名, 等同于<code>prometheus</code>中的<code>job_name</code>,<br>不过在监控<code>consul</code>的服务时, 用来标识服务名, 即项目里配置的 <code>spring.application.name</code></p>
<p>配置方式:</p>
<p>{dashboard} -&gt; settings -&gt; Variables</p>
<h2 id="promethues-配置"><a href="#promethues-配置" class="headerlink" title="promethues 配置"></a>promethues 配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 监控consul</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># cousul_services</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;consul_services&#x27;</span></span><br><span class="line">    <span class="attr">consul_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">server:</span> <span class="string">&#x27;$&#123;consul-server&#125;:8500&#x27;</span></span><br><span class="line">        <span class="attr">services:</span> [<span class="string">&#x27;$&#123;server.name&#125;&#x27;</span>]</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 修改抓取route</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">&#x27;__metrics_path__&#x27;</span>]</span><br><span class="line">          <span class="attr">regex:</span>         <span class="string">&#x27;/metrics&#x27;</span></span><br><span class="line">          <span class="attr">target_label:</span>  <span class="string">__metrics_path__</span></span><br><span class="line">          <span class="attr">replacement:</span>   <span class="string">&#x27;/prometheus&#x27;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 通过consul监控所有服务</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;consul_server&#x27;</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">&#x27;/prometheus&#x27;</span></span><br><span class="line">    <span class="attr">consul_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">server:</span> <span class="string">&#x27;$&#123;consul-server&#125;:8500&#x27;</span></span><br><span class="line">        <span class="attr">services:</span> [<span class="string">&#x27;$&#123;server.name&#125;&#x27;</span>]</span><br><span class="line">    <span class="comment"># 修改抓取route</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">&#x27;__meta_consul_service&#x27;</span>]</span><br><span class="line">          <span class="attr">regex:</span>         <span class="string">&#x27;(.*)&#x27;</span></span><br><span class="line">          <span class="attr">replacement:</span>   <span class="string">&#x27;$1&#x27;</span></span><br><span class="line">          <span class="attr">action:</span>        <span class="string">replace</span></span><br><span class="line">          <span class="attr">target_label:</span>  <span class="string">&#x27;job&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 监控普通spring-boot项目</span></span><br><span class="line">  <span class="comment"># for https</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">my-app-prod</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">basic_auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">your_actuator_user</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">your_actuator_password</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/MyApp/actuator/prometheus</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;your_hostname:your_port&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># for http</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">my-app-prod</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/MyApp/actuator/prometheus</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;your_hostname:your_port&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src= "/img/loading.gif" data-src="../../assets/grafana-preview.png"></p>
]]></content>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-cloud】部署</title>
    <url>/spring/%E3%80%90spring-cloud%E3%80%91%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="构建docker容器"><a href="#构建docker容器" class="headerlink" title="构建docker容器"></a>构建docker容器</h2><a href="/docker/%E3%80%90docker%E3%80%91%E5%88%9B%E5%BB%BAjava%E5%AE%B9%E5%99%A8/" title="【docker】创建java容器">【docker】创建java容器</a>

<h2 id="优雅关闭服务"><a href="#优雅关闭服务" class="headerlink" title="优雅关闭服务"></a>优雅关闭服务</h2><a href="/spring/%E3%80%90spring-boot%E3%80%91%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%85%B3%E9%97%AD%E6%9C%8D%E5%8A%A1/" title="【spring-boot】如何优雅关闭服务">【spring-boot】如何优雅关闭服务</a>

<h2 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h2><p>启动时，加上 <code>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=[debug port]</code></p>
<p>注意加上远程调试前，也要在docker中配置调试端口的<strong>映射</strong></p>
<p>下面是一个完整的配置:</p>
<blockquote>
<p>java<br>-Dfile.encoding=UTF-8<br>-Duser.timezone=GMT+08<br>-Dspring.profiles.active=[profile]<br>-Xdebug<br>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=[debug port]<br>-jar [jar]</p>
</blockquote>
]]></content>
      <tags>
        <tag>spring-cloud</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-cloud】服务调用链追踪</title>
    <url>/spring/%E3%80%90spring-cloud%E3%80%91%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E8%BF%BD%E8%B8%AA/</url>
    <content><![CDATA[<p>服务监控——服务调用链追踪，帮助追踪每个请求的调用过程及每个过程的网络延迟、业务耗时等指标</p>
<p>服务调用追踪主要是根据 traceId, spanId, parentSpanId 在个服务日志上进行标记, 一个traceId标记一个请求, spanId标记链路, parentSpanId为上一条链路的spanId, 由traceId把所有的spanId串联起来, 在第一条链路上 traceId = spanId = parentSpanId.</p>
<h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="配置-ELK-（便于查询整个请求的处理日志）"><a href="#配置-ELK-（便于查询整个请求的处理日志）" class="headerlink" title="配置 ELK （便于查询整个请求的处理日志）"></a>配置 ELK （便于查询整个请求的处理日志）</h3><ul>
<li><p>添加依赖</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-sleuth&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>在 <code>logback-spring.xml</code> 的 <code>LOGSTASH</code> 节点下添加如下配置：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;additionalField&gt;</span><br><span class="line">    &lt;key&gt;X-B3-ParentSpanId&lt;/key&gt;</span><br><span class="line">    &lt;value&gt;@&#123;X-B3-ParentSpanId&#125;&lt;/value&gt;</span><br><span class="line">&lt;/additionalField&gt;</span><br><span class="line">&lt;additionalField&gt;</span><br><span class="line">    &lt;key&gt;X-B3-SpanId&lt;/key&gt;</span><br><span class="line">    &lt;value&gt;@&#123;X-B3-SpanId&#125;&lt;/value&gt;</span><br><span class="line">&lt;/additionalField&gt;</span><br><span class="line">&lt;additionalField&gt;</span><br><span class="line">    &lt;key&gt;X-B3-TraceId&lt;/key&gt;</span><br><span class="line">    &lt;value&gt;@&#123;X-B3-TraceId&#125;&lt;/value&gt;</span><br><span class="line">&lt;/additionalField&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="配置-zipkin"><a href="#配置-zipkin" class="headerlink" title="配置 zipkin"></a>配置 zipkin</h3><ul>
<li><p>添加依赖</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-sleuth-zipkin&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>在 <code>application-dev.yml</code> / <code>application-test.yml</code> 中配置：</p>
  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># zipkin 部署在 op 服务器</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://10.163.149.166:11001</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="comment"># 采样的比例</span></span><br><span class="line">      <span class="attr">percentage:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="attr">scheduled:</span></span><br><span class="line">      <span class="comment"># 关闭 scheduled 方法的采样，否则 zipkin 上一堆异步任务的 trace，尤其是 consul watch task</span></span><br><span class="line">      <span class="comment"># Refer: [scheduled_annotated_methods]</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>  如果某个环境没有配 zipkin, 会按照默认值进行请求zipkin, 所以最好配置enabled=false, 禁用zipkin:</p>
<p>  <code>spring.zipkin.enabled: false</code></p>
</li>
<li><p>检查配置是否成功</p>
<p>  访问任意一个接口，在 [zipkin] 中查看是否有该请求的记录</p>
<p>  查不到的原因：</p>
<pre><code>- 配置没有成功
- 由于采样配置不是 1.0，导致没有采样(所谓采样, 就是当前日志会不会打到 zipkin 上)
</code></pre>
</li>
</ul>
<h2 id="随机采样原理"><a href="#随机采样原理" class="headerlink" title="随机采样原理"></a>随机采样原理</h2><p>参考: <code>org.springframework.cloud.sleuth.sampler.PercentageBasedSampler#isSampled</code></p>
<ul>
<li><a href="http://stackoverflow.com/questions/12817946/generate-a-random-bitset-with-n-1s">generate-a-random-bitset-with-n-1s</a></li>
</ul>
<h2 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题"></a>遗留问题</h2><ul>
<li><p>可以引入消息队列帮助解耦及提升效率</p>
</li>
<li><p>集成 ELK 之后，在打印非请求的日志里，<code>X-B3-*</code> 相关的字段显示的是 <code>X-B3-*_NOT_FOUND</code></p>
<p>理论上应该是 <code>-</code> 或 <code> </code>（空），看源码 <code>com.cwbase.logback.JSONEventLayout#mdcSubst</code> ，是框架自己没有设置默认值的方法</p>
<p>所以暂时先不处理，或以后改用 <code>FileAppender</code> + <code>logstash</code> 的方式收集日志</p>
</li>
</ul>
<h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><ul>
<li><p><a href="https://cloud.spring.io/spring-cloud-sleuth/1.3.x/single/spring-cloud-sleuth.html">spring-cloud-sleuth Reference</a></p>
</li>
<li><p>spring-cloud-sleuth: <a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-sleuth/1.3.4.RELEASE/single/spring-cloud-sleuth.html#__scheduled_annotated_methods">scheduled_annotated_methods</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/6d6b52c7624f">Spring Cloud Sleuth使用简介</a></p>
</li>
<li><p>Spring Cloud Sleuth does not add trace/span related headers to the Http Response for security reasons. If you need the headers, see: <a href="https://cloud.spring.io/spring-cloud-sleuth/1.3.x/single/spring-cloud-sleuth.html#_example">在http response 中添加 trace header</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>spring-cloud</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring】基于hikari的多数据源配置</title>
    <url>/spring/%E3%80%90spring%E3%80%91%E5%9F%BA%E4%BA%8Ehikari%E7%9A%84%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>问题：<code>mgmt</code>项目目前配置了多数据源，当手动配置 <code>HikariDataSource</code> 时，会出现 DataSource 使用的是 Tomcat 的 <code>DataSource</code></p>
</blockquote>
<h1 id="使用-Hikari-实现多数据源"><a href="#使用-Hikari-实现多数据源" class="headerlink" title="使用 Hikari 实现多数据源"></a>使用 Hikari 实现多数据源</h1><h2 id="检查数据源是否为-Hikari"><a href="#检查数据源是否为-Hikari" class="headerlink" title="检查数据源是否为 Hikari"></a>检查数据源是否为 Hikari</h2><p><code>ApplicationContext.getBeansOfType(DataSource.class)</code> 是否为 <code>HikariDataSource</code>，并在debug时，查看属性<code>pool</code>是否为 <code>HikariPool-x</code> ，</p>
<p>如果检查不是 Hikari（有可能是 tomcat.DataSource），可按如下步骤配置</p>
<h2 id="配置-HikariDataSource"><a href="#配置-HikariDataSource" class="headerlink" title="配置 HikariDataSource"></a>配置 HikariDataSource</h2><ul>
<li>DataSourceConfig</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 一个默认的 DataSource</span><br><span class="line">@ConfigurationProperties(prefix = &quot;spring.datasource.hikari&quot;)</span><br><span class="line">public DataSource dataSource(DataSourceProperties properties) &#123;</span><br><span class="line">   return properties.initializeDataSourceBuilder().type(HikariDataSource.class).build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 第二个 DataSource</span><br><span class="line">@ConfigurationProperties(prefix = &quot;spring.datasource2.hikari&quot;)</span><br><span class="line">public DataSource dataSource(DataSourceProperties properties) &#123;</span><br><span class="line">   return properties.initializeDataSourceBuilder().type(HikariDataSource.class).build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>application.yml</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 这里使用了模板，可以省去一些公共配置</span></span><br><span class="line">  <span class="attr">tpl_datasource:</span> <span class="meta">&amp;tpl_datasource</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">$url</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">$username</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">$pwd</span></span><br><span class="line">    <span class="attr">maximum-pool-size:</span> <span class="number">23</span></span><br><span class="line">    <span class="attr">connection-timeout:</span> <span class="number">55000</span></span><br><span class="line">    <span class="attr">idle-timeout:</span> <span class="number">33000</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">maxLifetime:</span> <span class="number">11000</span>                  <span class="comment">#30分钟，服务器wait_timeout设置为30分钟了</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 默认的datasource，其他ds会继承该配置，有点像模板</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="string">&lt;&lt;:</span> <span class="meta">*tpl_datasource</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span>                      <span class="comment"># 其他ds会继承</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">oasisadmin</span>                <span class="comment"># 其他ds会继承</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">jdbc-url:</span> <span class="string">jdbc:mysql://xxx/oasis_mgmt?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;autoReconnect=true&amp;autoReconnectForPools=true</span></span><br><span class="line">      <span class="attr">connection-init-sql:</span> <span class="string">select</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">leakDetectionThreshold:</span> <span class="number">5000</span>      <span class="comment">#2s 后connection还不回归pool，则提示可能的connection leak</span></span><br><span class="line">      <span class="attr">connectionTimeout:</span> <span class="number">5000</span> <span class="comment">#5s,get connection from pool</span></span><br><span class="line">      <span class="attr">maxLifetime:</span> <span class="number">21000</span>                <span class="comment">#30分钟，服务器wait_timeout设置为30分钟了</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">24</span></span><br><span class="line">      <span class="attr">data-source-properties:</span></span><br><span class="line">        <span class="attr">cachePrepStmts:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">prepStmtCacheSize:</span> <span class="number">250</span></span><br><span class="line">        <span class="attr">prepStmtCacheSqlLimit:</span> <span class="number">2048</span></span><br><span class="line">        <span class="attr">useServerPrepStmts:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">datasource_mom:</span></span><br><span class="line">    <span class="string">&lt;&lt;:</span> <span class="meta">*tpl_datasource</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">jdbc-url:</span> <span class="string">jdbc:mysql://xxx/oasis_mom_formal?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;autoReconnect=true&amp;autoReconnectForPools=true</span></span><br><span class="line">      <span class="attr">connection-init-sql:</span> <span class="string">select</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">leakDetectionThreshold:</span> <span class="number">5000</span>      <span class="comment">#2s 后connection还不回归pool，则提示可能的connection leak</span></span><br><span class="line">      <span class="attr">connectionTimeout:</span> <span class="number">5000</span>           <span class="comment">#5s,get connection from pool</span></span><br><span class="line">      <span class="attr">maxLifetime:</span> <span class="number">21000</span>                <span class="comment">#30分钟，服务器wait_timeout设置为30分钟了</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">24</span></span><br><span class="line">      <span class="attr">data-source-properties:</span></span><br><span class="line">        <span class="attr">cachePrepStmts:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">prepStmtCacheSize:</span> <span class="number">250</span></span><br><span class="line">        <span class="attr">prepStmtCacheSqlLimit:</span> <span class="number">2048</span></span><br><span class="line">        <span class="attr">useServerPrepStmts:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>由于 hikari使用的是 jdbc-url，所以 <code>spring.datasource.hikari.jdbc-url</code> 在每个 ds 中都要单独配置</p>
</li>
<li><p>由于上一条，所以 hikari 的配置无法使用 tpl模板 的方式让其他地方使用，<code>spring.datasource.hikari.*</code> 也都要单独配置</p>
</li>
<li><p><code>spring.datasource.*</code> 里面的配置，所有ds默认都会使用，比如 <code>hikari.jdbc-url</code> 如果没有配置，则默认使用 <code>spring.datasource.url</code></p>
</li>
</ul>
<h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ul>
<li>org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration</li>
<li><a href="https://gist.github.com/rhamedy/b3cb936061cc03acdfe21358b86a5bc6">Configure HikariCP with Spring Boot JPA Hibernate and PostgreSQL as a database</a></li>
</ul>
]]></content>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-cloud】问题记录</title>
    <url>/spring/%E3%80%90spring-cloud%E3%80%91%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<ul>
<li><p>feign 请求 get 后返回 post 404 error</p>
<ul>
<li>检查请求路径是否正确</li>
<li>检查是否Get请求参数为对象，@see <a href="/java/%E3%80%90feign%E3%80%91%E4%B8%8D%E6%94%AF%E6%8C%81%E5%9C%A8Get%E8%AF%B7%E6%B1%82%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E4%BC%A0%E5%8F%82/" title="【feign】不支持在Get请求中使用对象传参">【feign】不支持在Get请求中使用对象传参</a></li>
</ul>
</li>
<li><p>feign 参数中有 Date 参数时，保证客户端和服务端格式一样</p>
<p>spring boot 下配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  jackson:</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br></pre></td></tr></table></figure></li>
<li><p>@FeignClient 被注册为 RequestHandler，导致与服务接口 duplicate</p>
</li>
</ul>
<blockquote>
<p>@FeignClient with top level @RequestMapping annotation is also registered as Spring MVC handler</p>
</blockquote>
<p>see: <a href="https://github.com/spring-cloud/spring-cloud-netflix/issues/466">https://github.com/spring-cloud/spring-cloud-netflix/issues/466</a></p>
]]></content>
      <tags>
        <tag>spring-cloud</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>【spring-boot】application.properties</title>
    <url>/spring/%E3%80%90spring-boot%E3%80%91application.properties/</url>
    <content><![CDATA[<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ===================================================================</span></span><br><span class="line"><span class="comment"># COMMON SPRING BOOT PROPERTIES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This sample file is provided as a guideline. Do NOT copy it in its</span></span><br><span class="line"><span class="comment"># entirety to your own application.               ^^^</span></span><br><span class="line"><span class="comment"># ===================================================================</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># CORE PROPERTIES</span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># BANNER</span></span><br><span class="line"><span class="meta">banner.charset</span>=<span class="string">UTF-8 # Banner file encoding.</span></span><br><span class="line"><span class="meta">banner.location</span>=<span class="string">classpath:banner.txt # Banner file location.</span></span><br><span class="line"><span class="meta">banner.image.location</span>=<span class="string">classpath:banner.gif # Banner image file location (jpg/png can also be used).</span></span><br><span class="line"><span class="meta">banner.image.width</span>= <span class="string"># Width of the banner image in chars (default 76)</span></span><br><span class="line"><span class="meta">banner.image.height</span>= <span class="string"># Height of the banner image in chars (default based on image height)</span></span><br><span class="line"><span class="meta">banner.image.margin</span>= <span class="string"># Left hand image margin in chars (default 2)</span></span><br><span class="line"><span class="meta">banner.image.invert</span>= <span class="string"># If images should be inverted for dark terminal themes (default false)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># LOGGING</span></span><br><span class="line"><span class="meta">logging.config</span>= <span class="string"># Location of the logging configuration file. For instance `classpath:logback.xml` for Logback</span></span><br><span class="line"><span class="meta">logging.exception-conversion-word</span>=<span class="string">%wEx # Conversion word used when logging exceptions.</span></span><br><span class="line"><span class="meta">logging.file</span>= <span class="string"># Log file name. For instance `myapp.log`</span></span><br><span class="line"><span class="meta">logging.level.*</span>= <span class="string"># Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`</span></span><br><span class="line"><span class="meta">logging.path</span>= <span class="string"># Location of the log file. For instance `/var/log`</span></span><br><span class="line"><span class="meta">logging.pattern.console</span>= <span class="string"># Appender pattern for output to the console. Only supported with the default logback setup.</span></span><br><span class="line"><span class="meta">logging.pattern.file</span>= <span class="string"># Appender pattern for output to the file. Only supported with the default logback setup.</span></span><br><span class="line"><span class="meta">logging.pattern.level</span>= <span class="string"># Appender pattern for log level (default %5p). Only supported with the default logback setup.</span></span><br><span class="line"><span class="meta">logging.register-shutdown-hook</span>=<span class="string">false # Register a shutdown hook for the logging system when it is initialized.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># AOP</span></span><br><span class="line"><span class="meta">spring.aop.auto</span>=<span class="string">true # Add @EnableAspectJAutoProxy.</span></span><br><span class="line"><span class="meta">spring.aop.proxy-target-class</span>= <span class="string"># Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false). Defaults to &quot;true&quot; when using Spring Transaction Management, otherwise &quot;false&quot;.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># IDENTITY (ContextIdApplicationContextInitializer)</span></span><br><span class="line"><span class="meta">spring.application.index</span>= <span class="string"># Application index.</span></span><br><span class="line"><span class="meta">spring.application.name</span>= <span class="string"># Application name.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ADMIN (SpringApplicationAdminJmxAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.application.admin.enabled</span>=<span class="string">false # Enable admin features for the application.</span></span><br><span class="line"><span class="meta">spring.application.admin.jmx-name</span>=<span class="string">org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># AUTO-CONFIGURATION</span></span><br><span class="line"><span class="meta">spring.autoconfigure.exclude</span>= <span class="string"># Auto-configuration classes to exclude.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING CORE</span></span><br><span class="line"><span class="meta">spring.beaninfo.ignore</span>=<span class="string">true # Skip search of BeanInfo classes.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING CACHE (CacheProperties)</span></span><br><span class="line"><span class="meta">spring.cache.cache-names</span>= <span class="string"># Comma-separated list of cache names to create if supported by the underlying cache manager.</span></span><br><span class="line"><span class="meta">spring.cache.caffeine.spec</span>= <span class="string"># The spec to use to create caches. Check CaffeineSpec for more details on the spec format.</span></span><br><span class="line"><span class="meta">spring.cache.couchbase.expiration</span>=<span class="string">0 # Entry expiration in milliseconds. By default the entries never expire.</span></span><br><span class="line"><span class="meta">spring.cache.ehcache.config</span>= <span class="string"># The location of the configuration file to use to initialize EhCache.</span></span><br><span class="line"><span class="meta">spring.cache.guava.spec</span>= <span class="string"># The spec to use to create caches. Check CacheBuilderSpec for more details on the spec format.</span></span><br><span class="line"><span class="meta">spring.cache.infinispan.config</span>= <span class="string"># The location of the configuration file to use to initialize Infinispan.</span></span><br><span class="line"><span class="meta">spring.cache.jcache.config</span>= <span class="string"># The location of the configuration file to use to initialize the cache manager.</span></span><br><span class="line"><span class="meta">spring.cache.jcache.provider</span>= <span class="string"># Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Only needed if more than one JSR-107 implementation is available on the classpath.</span></span><br><span class="line"><span class="meta">spring.cache.type</span>= <span class="string"># Cache type, auto-detected according to the environment by default.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING CONFIG - using environment property only (ConfigFileApplicationListener)</span></span><br><span class="line"><span class="meta">spring.config.location</span>= <span class="string"># Config file locations.</span></span><br><span class="line"><span class="meta">spring.config.name</span>=<span class="string">application # Config file name.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># HAZELCAST (HazelcastProperties)</span></span><br><span class="line"><span class="meta">spring.hazelcast.config</span>= <span class="string"># The location of the configuration file to use to initialize Hazelcast.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># PROJECT INFORMATION (ProjectInfoProperties)</span></span><br><span class="line"><span class="meta">spring.info.build.location</span>=<span class="string">classpath:META-INF/build-info.properties # Location of the generated build-info.properties file.</span></span><br><span class="line"><span class="meta">spring.info.git.location</span>=<span class="string">classpath:git.properties # Location of the generated git.properties file.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JMX</span></span><br><span class="line"><span class="meta">spring.jmx.default-domain</span>= <span class="string"># JMX domain name.</span></span><br><span class="line"><span class="meta">spring.jmx.enabled</span>=<span class="string">true # Expose management beans to the JMX domain.</span></span><br><span class="line"><span class="meta">spring.jmx.server</span>=<span class="string">mbeanServer # MBeanServer bean name.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Email (MailProperties)</span></span><br><span class="line"><span class="meta">spring.mail.default-encoding</span>=<span class="string">UTF-8 # Default MimeMessage encoding.</span></span><br><span class="line"><span class="meta">spring.mail.host</span>= <span class="string"># SMTP server host. For instance `smtp.example.com`</span></span><br><span class="line"><span class="meta">spring.mail.jndi-name</span>= <span class="string"># Session JNDI name. When set, takes precedence to others Session settings.</span></span><br><span class="line"><span class="meta">spring.mail.password</span>= <span class="string"># Login password of the SMTP server.</span></span><br><span class="line"><span class="meta">spring.mail.port</span>= <span class="string"># SMTP server port.</span></span><br><span class="line"><span class="meta">spring.mail.properties.*</span>= <span class="string"># Additional JavaMail Session properties.</span></span><br><span class="line"><span class="meta">spring.mail.protocol</span>=<span class="string">smtp # Protocol used by the SMTP server.</span></span><br><span class="line"><span class="meta">spring.mail.test-connection</span>=<span class="string">false # Test that the mail server is available on startup.</span></span><br><span class="line"><span class="meta">spring.mail.username</span>= <span class="string"># Login user of the SMTP server.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># APPLICATION SETTINGS (SpringApplication)</span></span><br><span class="line"><span class="meta">spring.main.banner-mode</span>=<span class="string">console # Mode used to display the banner when the application runs.</span></span><br><span class="line"><span class="meta">spring.main.sources</span>= <span class="string"># Sources (class name, package name or XML resource location) to include in the ApplicationContext.</span></span><br><span class="line"><span class="meta">spring.main.web-environment</span>= <span class="string"># Run the application in a web environment (auto-detected by default).</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># FILE ENCODING (FileEncodingApplicationListener)</span></span><br><span class="line"><span class="meta">spring.mandatory-file-encoding</span>= <span class="string"># Expected character encoding the application must use.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># INTERNATIONALIZATION (MessageSourceAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.messages.always-use-message-format</span>=<span class="string">false # Set whether to always apply the MessageFormat rules, parsing even messages without arguments.</span></span><br><span class="line"><span class="meta">spring.messages.basename</span>=<span class="string">messages # Comma-separated list of basenames (essentially a fully-qualified classpath location), each following the ResourceBundle convention with relaxed support for slash based locations.</span></span><br><span class="line"><span class="meta">spring.messages.cache-seconds</span>=<span class="string">-1 # Loaded resource bundle files cache expiration, in seconds. When set to -1, bundles are cached forever.</span></span><br><span class="line"><span class="meta">spring.messages.encoding</span>=<span class="string">UTF-8 # Message bundles encoding.</span></span><br><span class="line"><span class="meta">spring.messages.fallback-to-system-locale</span>=<span class="string">true # Set whether to fall back to the system Locale if no files for a specific Locale have been found.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># OUTPUT</span></span><br><span class="line"><span class="meta">spring.output.ansi.enabled</span>=<span class="string">detect # Configure the ANSI output.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># PID FILE (ApplicationPidFileWriter)</span></span><br><span class="line"><span class="meta">spring.pid.fail-on-write-error</span>= <span class="string"># Fail if ApplicationPidFileWriter is used but it cannot write the PID file.</span></span><br><span class="line"><span class="meta">spring.pid.file</span>= <span class="string"># Location of the PID file to write (if ApplicationPidFileWriter is used).</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># PROFILES</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>= <span class="string"># Comma-separated list (or list if using YAML) of active profiles.</span></span><br><span class="line"><span class="meta">spring.profiles.include</span>= <span class="string"># Unconditionally activate the specified comma separated profiles (or list of profiles if using YAML).</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SENDGRID (SendGridAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.sendgrid.api-key</span>= <span class="string"># SendGrid api key (alternative to username/password).</span></span><br><span class="line"><span class="meta">spring.sendgrid.username</span>= <span class="string"># SendGrid account username.</span></span><br><span class="line"><span class="meta">spring.sendgrid.password</span>= <span class="string"># SendGrid account password.</span></span><br><span class="line"><span class="meta">spring.sendgrid.proxy.host</span>= <span class="string"># SendGrid proxy host.</span></span><br><span class="line"><span class="meta">spring.sendgrid.proxy.port</span>= <span class="string"># SendGrid proxy port.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># WEB PROPERTIES</span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># EMBEDDED SERVER CONFIGURATION (ServerProperties)</span></span><br><span class="line"><span class="meta">server.address</span>= <span class="string"># Network address to which the server should bind to.</span></span><br><span class="line"><span class="meta">server.compression.enabled</span>=<span class="string">false # If response compression is enabled.</span></span><br><span class="line"><span class="meta">server.compression.excluded-user-agents</span>= <span class="string"># List of user-agents to exclude from compression.</span></span><br><span class="line"><span class="meta">server.compression.mime-types</span>=<span class="string">text/html,text/xml,text/plain,text/css,text/javascript,application/javascript # Comma-separated list of MIME types that should be compressed.</span></span><br><span class="line"><span class="meta">server.compression.min-response-size</span>=<span class="string">2048 # Minimum response size that is required for compression to be performed.</span></span><br><span class="line"><span class="meta">server.connection-timeout</span>= <span class="string"># Time in milliseconds that connectors will wait for another HTTP request before closing the connection. When not set, the connector&#x27;s container-specific default will be used. Use a value of -1 to indicate no (i.e. infinite) timeout.</span></span><br><span class="line"><span class="meta">server.context-parameters.*</span>= <span class="string"># Servlet context init parameters. For instance `server.context-parameters.a=alpha`</span></span><br><span class="line"><span class="meta">server.context-path</span>= <span class="string"># Context path of the application.</span></span><br><span class="line"><span class="meta">server.display-name</span>=<span class="string">application # Display name of the application.</span></span><br><span class="line"><span class="meta">server.max-http-header-size</span>=<span class="string">0 # Maximum size in bytes of the HTTP message header.</span></span><br><span class="line"><span class="meta">server.error.include-stacktrace</span>=<span class="string">never # When to include a &quot;stacktrace&quot; attribute.</span></span><br><span class="line"><span class="meta">server.error.path</span>=<span class="string">/error # Path of the error controller.</span></span><br><span class="line"><span class="meta">server.error.whitelabel.enabled</span>=<span class="string">true # Enable the default error page displayed in browsers in case of a server error.</span></span><br><span class="line"><span class="meta">server.jetty.acceptors</span>= <span class="string"># Number of acceptor threads to use.</span></span><br><span class="line"><span class="meta">server.jetty.max-http-post-size</span>=<span class="string">0 # Maximum size in bytes of the HTTP post or put content.</span></span><br><span class="line"><span class="meta">server.jetty.selectors</span>= <span class="string"># Number of selector threads to use.</span></span><br><span class="line"><span class="meta">server.jsp-servlet.class-name</span>=<span class="string">org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.</span></span><br><span class="line"><span class="meta">server.jsp-servlet.init-parameters.*</span>= <span class="string"># Init parameters used to configure the JSP servlet</span></span><br><span class="line"><span class="meta">server.jsp-servlet.registered</span>=<span class="string">true # Whether or not the JSP servlet is registered</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">8080 # Server HTTP port.</span></span><br><span class="line"><span class="meta">server.server-header</span>= <span class="string"># Value to use for the Server response header (no header is sent if empty)</span></span><br><span class="line"><span class="meta">server.servlet-path</span>=<span class="string">/ # Path of the main dispatcher servlet.</span></span><br><span class="line"><span class="meta">server.use-forward-headers</span>= <span class="string"># If X-Forwarded-* headers should be applied to the HttpRequest.</span></span><br><span class="line"><span class="meta">server.session.cookie.comment</span>= <span class="string"># Comment for the session cookie.</span></span><br><span class="line"><span class="meta">server.session.cookie.domain</span>= <span class="string"># Domain for the session cookie.</span></span><br><span class="line"><span class="meta">server.session.cookie.http-only</span>= <span class="string"># &quot;HttpOnly&quot; flag for the session cookie.</span></span><br><span class="line"><span class="meta">server.session.cookie.max-age</span>= <span class="string"># Maximum age of the session cookie in seconds.</span></span><br><span class="line"><span class="meta">server.session.cookie.name</span>= <span class="string"># Session cookie name.</span></span><br><span class="line"><span class="meta">server.session.cookie.path</span>= <span class="string"># Path of the session cookie.</span></span><br><span class="line"><span class="meta">server.session.cookie.secure</span>= <span class="string"># &quot;Secure&quot; flag for the session cookie.</span></span><br><span class="line"><span class="meta">server.session.persistent</span>=<span class="string">false # Persist session data between restarts.</span></span><br><span class="line"><span class="meta">server.session.store-dir</span>= <span class="string"># Directory used to store session data.</span></span><br><span class="line"><span class="meta">server.session.timeout</span>= <span class="string"># Session timeout in seconds.</span></span><br><span class="line"><span class="meta">server.session.tracking-modes</span>= <span class="string"># Session tracking modes (one or more of the following: &quot;cookie&quot;, &quot;url&quot;, &quot;ssl&quot;).</span></span><br><span class="line"><span class="meta">server.ssl.ciphers</span>= <span class="string"># Supported SSL ciphers.</span></span><br><span class="line"><span class="meta">server.ssl.client-auth</span>= <span class="string"># Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store.</span></span><br><span class="line"><span class="meta">server.ssl.enabled</span>= <span class="string"># Enable SSL support.</span></span><br><span class="line"><span class="meta">server.ssl.enabled-protocols</span>= <span class="string"># Enabled SSL protocols.</span></span><br><span class="line"><span class="meta">server.ssl.key-alias</span>= <span class="string"># Alias that identifies the key in the key store.</span></span><br><span class="line"><span class="meta">server.ssl.key-password</span>= <span class="string"># Password used to access the key in the key store.</span></span><br><span class="line"><span class="meta">server.ssl.key-store</span>= <span class="string"># Path to the key store that holds the SSL certificate (typically a jks file).</span></span><br><span class="line"><span class="meta">server.ssl.key-store-password</span>= <span class="string"># Password used to access the key store.</span></span><br><span class="line"><span class="meta">server.ssl.key-store-provider</span>= <span class="string"># Provider for the key store.</span></span><br><span class="line"><span class="meta">server.ssl.key-store-type</span>= <span class="string"># Type of the key store.</span></span><br><span class="line"><span class="meta">server.ssl.protocol</span>=<span class="string">TLS # SSL protocol to use.</span></span><br><span class="line"><span class="meta">server.ssl.trust-store</span>= <span class="string"># Trust store that holds SSL certificates.</span></span><br><span class="line"><span class="meta">server.ssl.trust-store-password</span>= <span class="string"># Password used to access the trust store.</span></span><br><span class="line"><span class="meta">server.ssl.trust-store-provider</span>= <span class="string"># Provider for the trust store.</span></span><br><span class="line"><span class="meta">server.ssl.trust-store-type</span>= <span class="string"># Type of the trust store.</span></span><br><span class="line"><span class="meta">server.tomcat.accept-count</span>= <span class="string"># Maximum queue length for incoming connection requests when all possible request processing threads are in use.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.buffered</span>=<span class="string">true # Buffer output such that it is only flushed periodically.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.directory</span>=<span class="string">logs # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.enabled</span>=<span class="string">false # Enable access log.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.file-date-format</span>=<span class="string">.yyyy-MM-dd # Date format to place in log file name.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.pattern</span>=<span class="string">common # Format pattern for access logs.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.prefix</span>=<span class="string">access_log # Log file name prefix.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.rename-on-rotate</span>=<span class="string">false # Defer inclusion of the date stamp in the file name until rotate time.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.request-attributes-enabled</span>=<span class="string">false # Set request attributes for IP address, Hostname, protocol and port used for the request.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.rotate</span>=<span class="string">true # Enable access log rotation.</span></span><br><span class="line"><span class="meta">server.tomcat.accesslog.suffix</span>=<span class="string">.log # Log file name suffix.</span></span><br><span class="line"><span class="meta">server.tomcat.additional-tld-skip-patterns</span>= <span class="string"># Comma-separated list of additional patterns that match jars to ignore for TLD scanning.</span></span><br><span class="line"><span class="meta">server.tomcat.background-processor-delay</span>=<span class="string">30 # Delay in seconds between the invocation of backgroundProcess methods.</span></span><br><span class="line"><span class="meta">server.tomcat.basedir</span>= <span class="string"># Tomcat base directory. If not specified a temporary directory will be used.</span></span><br><span class="line"><span class="meta">server.tomcat.internal-proxies</span>=<span class="string">10\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span></span><br><span class="line">        <span class="attr">192\\.168\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span></span><br><span class="line">        <span class="attr">169\\.254\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span></span><br><span class="line">        <span class="attr">127\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span></span><br><span class="line">        <span class="attr">172\\.1[6-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span></span><br><span class="line">        <span class="attr">172\\.2[0-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span></span><br><span class="line">        <span class="meta">172\\.3[0-1]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;</span> <span class="string"># regular expression matching trusted IP addresses.</span></span><br><span class="line"><span class="meta">server.tomcat.max-connections</span>= <span class="string"># Maximum number of connections that the server will accept and process at any given time.</span></span><br><span class="line"><span class="meta">server.tomcat.max-http-post-size</span>=<span class="string">0 # Maximum size in bytes of the HTTP post content.</span></span><br><span class="line"><span class="meta">server.tomcat.max-threads</span>=<span class="string">0 # Maximum amount of worker threads.</span></span><br><span class="line"><span class="meta">server.tomcat.min-spare-threads</span>=<span class="string">0 # Minimum amount of worker threads.</span></span><br><span class="line"><span class="meta">server.tomcat.port-header</span>=<span class="string">X-Forwarded-Port # Name of the HTTP header used to override the original port value.</span></span><br><span class="line"><span class="meta">server.tomcat.protocol-header</span>= <span class="string"># Header that holds the incoming protocol, usually named &quot;X-Forwarded-Proto&quot;.</span></span><br><span class="line"><span class="meta">server.tomcat.protocol-header-https-value</span>=<span class="string">https # Value of the protocol header that indicates that the incoming request uses SSL.</span></span><br><span class="line"><span class="meta">server.tomcat.redirect-context-root</span>= <span class="string"># Whether requests to the context root should be redirected by appending a / to the path.</span></span><br><span class="line"><span class="meta">server.tomcat.remote-ip-header</span>= <span class="string"># Name of the http header from which the remote ip is extracted. For instance `X-FORWARDED-FOR`</span></span><br><span class="line"><span class="meta">server.tomcat.uri-encoding</span>=<span class="string">UTF-8 # Character encoding to use to decode the URI.</span></span><br><span class="line"><span class="meta">server.undertow.accesslog.dir</span>= <span class="string"># Undertow access log directory.</span></span><br><span class="line"><span class="meta">server.undertow.accesslog.enabled</span>=<span class="string">false # Enable access log.</span></span><br><span class="line"><span class="meta">server.undertow.accesslog.pattern</span>=<span class="string">common # Format pattern for access logs.</span></span><br><span class="line"><span class="meta">server.undertow.accesslog.prefix</span>=<span class="string">access_log. # Log file name prefix.</span></span><br><span class="line"><span class="meta">server.undertow.accesslog.rotate</span>=<span class="string">true # Enable access log rotation.</span></span><br><span class="line"><span class="meta">server.undertow.accesslog.suffix</span>=<span class="string">log # Log file name suffix.</span></span><br><span class="line"><span class="meta">server.undertow.buffer-size</span>= <span class="string"># Size of each buffer in bytes.</span></span><br><span class="line"><span class="meta">server.undertow.direct-buffers</span>= <span class="string"># Allocate buffers outside the Java heap.</span></span><br><span class="line"><span class="meta">server.undertow.io-threads</span>= <span class="string"># Number of I/O threads to create for the worker.</span></span><br><span class="line"><span class="meta">server.undertow.max-http-post-size</span>=<span class="string">0 # Maximum size in bytes of the HTTP post content.</span></span><br><span class="line"><span class="meta">server.undertow.worker-threads</span>= <span class="string"># Number of worker threads.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># FREEMARKER (FreeMarkerAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.freemarker.allow-request-override</span>=<span class="string">false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span></span><br><span class="line"><span class="meta">spring.freemarker.allow-session-override</span>=<span class="string">false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span></span><br><span class="line"><span class="meta">spring.freemarker.cache</span>=<span class="string">false # Enable template caching.</span></span><br><span class="line"><span class="meta">spring.freemarker.charset</span>=<span class="string">UTF-8 # Template encoding.</span></span><br><span class="line"><span class="meta">spring.freemarker.check-template-location</span>=<span class="string">true # Check that the templates location exists.</span></span><br><span class="line"><span class="meta">spring.freemarker.content-type</span>=<span class="string">text/html # Content-Type value.</span></span><br><span class="line"><span class="meta">spring.freemarker.enabled</span>=<span class="string">true # Enable MVC view resolution for this technology.</span></span><br><span class="line"><span class="meta">spring.freemarker.expose-request-attributes</span>=<span class="string">false # Set whether all request attributes should be added to the model prior to merging with the template.</span></span><br><span class="line"><span class="meta">spring.freemarker.expose-session-attributes</span>=<span class="string">false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span></span><br><span class="line"><span class="meta">spring.freemarker.expose-spring-macro-helpers</span>=<span class="string">true # Set whether to expose a RequestContext for use by Spring&#x27;s macro library, under the name &quot;springMacroRequestContext&quot;.</span></span><br><span class="line"><span class="meta">spring.freemarker.prefer-file-system-access</span>=<span class="string">true # Prefer file system access for template loading. File system access enables hot detection of template changes.</span></span><br><span class="line"><span class="meta">spring.freemarker.prefix</span>= <span class="string"># Prefix that gets prepended to view names when building a URL.</span></span><br><span class="line"><span class="meta">spring.freemarker.request-context-attribute</span>= <span class="string"># Name of the RequestContext attribute for all views.</span></span><br><span class="line"><span class="meta">spring.freemarker.settings.*</span>= <span class="string"># Well-known FreeMarker keys which will be passed to FreeMarker&#x27;s Configuration.</span></span><br><span class="line"><span class="meta">spring.freemarker.suffix</span>=<span class="string">.ftl # Suffix that gets appended to view names when building a URL.</span></span><br><span class="line"><span class="meta">spring.freemarker.template-loader-path</span>=<span class="string">classpath:/templates/ # Comma-separated list of template paths.</span></span><br><span class="line"><span class="meta">spring.freemarker.view-names</span>= <span class="string"># White list of view names that can be resolved.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># GROOVY TEMPLATES (GroovyTemplateAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.groovy.template.allow-request-override</span>=<span class="string">false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span></span><br><span class="line"><span class="meta">spring.groovy.template.allow-session-override</span>=<span class="string">false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span></span><br><span class="line"><span class="meta">spring.groovy.template.cache</span>= <span class="string"># Enable template caching.</span></span><br><span class="line"><span class="meta">spring.groovy.template.charset</span>=<span class="string">UTF-8 # Template encoding.</span></span><br><span class="line"><span class="meta">spring.groovy.template.check-template-location</span>=<span class="string">true # Check that the templates location exists.</span></span><br><span class="line"><span class="meta">spring.groovy.template.configuration.*</span>= <span class="string"># See GroovyMarkupConfigurer</span></span><br><span class="line"><span class="meta">spring.groovy.template.content-type</span>=<span class="string">test/html # Content-Type value.</span></span><br><span class="line"><span class="meta">spring.groovy.template.enabled</span>=<span class="string">true # Enable MVC view resolution for this technology.</span></span><br><span class="line"><span class="meta">spring.groovy.template.expose-request-attributes</span>=<span class="string">false # Set whether all request attributes should be added to the model prior to merging with the template.</span></span><br><span class="line"><span class="meta">spring.groovy.template.expose-session-attributes</span>=<span class="string">false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span></span><br><span class="line"><span class="meta">spring.groovy.template.expose-spring-macro-helpers</span>=<span class="string">true # Set whether to expose a RequestContext for use by Spring&#x27;s macro library, under the name &quot;springMacroRequestContext&quot;.</span></span><br><span class="line"><span class="meta">spring.groovy.template.prefix</span>= <span class="string"># Prefix that gets prepended to view names when building a URL.</span></span><br><span class="line"><span class="meta">spring.groovy.template.request-context-attribute</span>= <span class="string"># Name of the RequestContext attribute for all views.</span></span><br><span class="line"><span class="meta">spring.groovy.template.resource-loader-path</span>=<span class="string">classpath:/templates/ # Template path.</span></span><br><span class="line"><span class="meta">spring.groovy.template.suffix</span>=<span class="string">.tpl # Suffix that gets appended to view names when building a URL.</span></span><br><span class="line"><span class="meta">spring.groovy.template.view-names</span>= <span class="string"># White list of view names that can be resolved.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING HATEOAS (HateoasProperties)</span></span><br><span class="line"><span class="meta">spring.hateoas.use-hal-as-default-json-media-type</span>=<span class="string">true # Specify if application/hal+json responses should be sent to requests that accept application/json.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># HTTP message conversion</span></span><br><span class="line"><span class="meta">spring.http.converters.preferred-json-mapper</span>=<span class="string">jackson # Preferred JSON mapper to use for HTTP message conversion. Set to &quot;gson&quot; to force the use of Gson when both it and Jackson are on the classpath.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># HTTP encoding (HttpEncodingProperties)</span></span><br><span class="line"><span class="meta">spring.http.encoding.charset</span>=<span class="string">UTF-8 # Charset of HTTP requests and responses. Added to the &quot;Content-Type&quot; header if not set explicitly.</span></span><br><span class="line"><span class="meta">spring.http.encoding.enabled</span>=<span class="string">true # Enable http encoding support.</span></span><br><span class="line"><span class="meta">spring.http.encoding.force</span>= <span class="string"># Force the encoding to the configured charset on HTTP requests and responses.</span></span><br><span class="line"><span class="meta">spring.http.encoding.force-request</span>= <span class="string"># Force the encoding to the configured charset on HTTP requests. Defaults to true when &quot;force&quot; has not been specified.</span></span><br><span class="line"><span class="meta">spring.http.encoding.force-response</span>= <span class="string"># Force the encoding to the configured charset on HTTP responses.</span></span><br><span class="line"><span class="meta">spring.http.encoding.mapping</span>= <span class="string"># Locale to Encoding mapping.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MULTIPART (MultipartProperties)</span></span><br><span class="line"><span class="meta">spring.http.multipart.enabled</span>=<span class="string">true # Enable support of multi-part uploads.</span></span><br><span class="line"><span class="meta">spring.http.multipart.file-size-threshold</span>=<span class="string">0 # Threshold after which files will be written to disk. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span></span><br><span class="line"><span class="meta">spring.http.multipart.location</span>= <span class="string"># Intermediate location of uploaded files.</span></span><br><span class="line"><span class="meta">spring.http.multipart.max-file-size</span>=<span class="string">1MB # Max file size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span></span><br><span class="line"><span class="meta">spring.http.multipart.max-request-size</span>=<span class="string">10MB # Max request size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span></span><br><span class="line"><span class="meta">spring.http.multipart.resolve-lazily</span>=<span class="string">false # Whether to resolve the multipart request lazily at the time of file or parameter access.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JACKSON (JacksonProperties)</span></span><br><span class="line"><span class="meta">spring.jackson.date-format</span>= <span class="string"># Date format string or a fully-qualified date format class name. For instance `yyyy-MM-dd HH:mm:ss`.</span></span><br><span class="line"><span class="meta">spring.jackson.default-property-inclusion</span>= <span class="string"># Controls the inclusion of properties during serialization.</span></span><br><span class="line"><span class="meta">spring.jackson.deserialization.*</span>= <span class="string"># Jackson on/off features that affect the way Java objects are deserialized.</span></span><br><span class="line"><span class="meta">spring.jackson.generator.*</span>= <span class="string"># Jackson on/off features for generators.</span></span><br><span class="line"><span class="meta">spring.jackson.joda-date-time-format</span>= <span class="string"># Joda date time format string. If not configured, &quot;date-format&quot; will be used as a fallback if it is configured with a format string.</span></span><br><span class="line"><span class="meta">spring.jackson.locale</span>= <span class="string"># Locale used for formatting.</span></span><br><span class="line"><span class="meta">spring.jackson.mapper.*</span>= <span class="string"># Jackson general purpose on/off features.</span></span><br><span class="line"><span class="meta">spring.jackson.parser.*</span>= <span class="string"># Jackson on/off features for parsers.</span></span><br><span class="line"><span class="meta">spring.jackson.property-naming-strategy</span>= <span class="string"># One of the constants on Jackson&#x27;s PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.</span></span><br><span class="line"><span class="meta">spring.jackson.serialization.*</span>= <span class="string"># Jackson on/off features that affect the way Java objects are serialized.</span></span><br><span class="line"><span class="meta">spring.jackson.time-zone</span>= <span class="string"># Time zone used when formatting dates. For instance `America/Los_Angeles`</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JERSEY (JerseyProperties)</span></span><br><span class="line"><span class="meta">spring.jersey.application-path</span>= <span class="string"># Path that serves as the base URI for the application. Overrides the value of &quot;@ApplicationPath&quot; if specified.</span></span><br><span class="line"><span class="meta">spring.jersey.filter.order</span>=<span class="string">0 # Jersey filter chain order.</span></span><br><span class="line"><span class="meta">spring.jersey.init.*</span>= <span class="string"># Init parameters to pass to Jersey via the servlet or filter.</span></span><br><span class="line"><span class="meta">spring.jersey.servlet.load-on-startup</span>=<span class="string">-1 # Load on startup priority of the Jersey servlet.</span></span><br><span class="line"><span class="meta">spring.jersey.type</span>=<span class="string">servlet # Jersey integration type.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING LDAP (LdapProperties)</span></span><br><span class="line"><span class="meta">spring.ldap.urls</span>= <span class="string"># LDAP URLs of the server.</span></span><br><span class="line"><span class="meta">spring.ldap.base</span>= <span class="string"># Base suffix from which all operations should originate.</span></span><br><span class="line"><span class="meta">spring.ldap.username</span>= <span class="string"># Login user of the server.</span></span><br><span class="line"><span class="meta">spring.ldap.password</span>= <span class="string"># Login password of the server.</span></span><br><span class="line"><span class="meta">spring.ldap.base-environment.*</span>= <span class="string"># LDAP specification settings.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># EMBEDDED LDAP (EmbeddedLdapProperties)</span></span><br><span class="line"><span class="meta">spring.ldap.embedded.base-dn</span>= <span class="string"># The base DN</span></span><br><span class="line"><span class="meta">spring.ldap.embedded.credential.username</span>= <span class="string"># Embedded LDAP username.</span></span><br><span class="line"><span class="meta">spring.ldap.embedded.credential.password</span>= <span class="string"># Embedded LDAP password.</span></span><br><span class="line"><span class="meta">spring.ldap.embedded.ldif</span>=<span class="string">classpath:schema.ldif # Schema (LDIF) script resource reference.</span></span><br><span class="line"><span class="meta">spring.ldap.embedded.port</span>= <span class="string"># Embedded LDAP port.</span></span><br><span class="line"><span class="meta">spring.ldap.embedded.validation.enabled</span>=<span class="string">true # Enable LDAP schema validation.</span></span><br><span class="line"><span class="meta">spring.ldap.embedded.validation.schema</span>= <span class="string"># Path to the custom schema.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING MOBILE DEVICE VIEWS (DeviceDelegatingViewResolverAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.enable-fallback</span>=<span class="string">false # Enable support for fallback resolution.</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.enabled</span>=<span class="string">false # Enable device view resolver.</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.mobile-prefix</span>=<span class="string">mobile/ # Prefix that gets prepended to view names for mobile devices.</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.mobile-suffix</span>= <span class="string"># Suffix that gets appended to view names for mobile devices.</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.normal-prefix</span>= <span class="string"># Prefix that gets prepended to view names for normal devices.</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.normal-suffix</span>= <span class="string"># Suffix that gets appended to view names for normal devices.</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.tablet-prefix</span>=<span class="string">tablet/ # Prefix that gets prepended to view names for tablet devices.</span></span><br><span class="line"><span class="meta">spring.mobile.devicedelegatingviewresolver.tablet-suffix</span>= <span class="string"># Suffix that gets appended to view names for tablet devices.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING MOBILE SITE PREFERENCE (SitePreferenceAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.mobile.sitepreference.enabled</span>=<span class="string">true # Enable SitePreferenceHandler.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MUSTACHE TEMPLATES (MustacheAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.mustache.allow-request-override</span>= <span class="string"># Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span></span><br><span class="line"><span class="meta">spring.mustache.allow-session-override</span>= <span class="string"># Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span></span><br><span class="line"><span class="meta">spring.mustache.cache</span>= <span class="string"># Enable template caching.</span></span><br><span class="line"><span class="meta">spring.mustache.charset</span>= <span class="string"># Template encoding.</span></span><br><span class="line"><span class="meta">spring.mustache.check-template-location</span>= <span class="string"># Check that the templates location exists.</span></span><br><span class="line"><span class="meta">spring.mustache.content-type</span>= <span class="string"># Content-Type value.</span></span><br><span class="line"><span class="meta">spring.mustache.enabled</span>= <span class="string"># Enable MVC view resolution for this technology.</span></span><br><span class="line"><span class="meta">spring.mustache.expose-request-attributes</span>= <span class="string"># Set whether all request attributes should be added to the model prior to merging with the template.</span></span><br><span class="line"><span class="meta">spring.mustache.expose-session-attributes</span>= <span class="string"># Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span></span><br><span class="line"><span class="meta">spring.mustache.expose-spring-macro-helpers</span>= <span class="string"># Set whether to expose a RequestContext for use by Spring&#x27;s macro library, under the name &quot;springMacroRequestContext&quot;.</span></span><br><span class="line"><span class="meta">spring.mustache.prefix</span>=<span class="string">classpath:/templates/ # Prefix to apply to template names.</span></span><br><span class="line"><span class="meta">spring.mustache.request-context-attribute</span>= <span class="string"># Name of the RequestContext attribute for all views.</span></span><br><span class="line"><span class="meta">spring.mustache.suffix</span>=<span class="string">.html # Suffix to apply to template names.</span></span><br><span class="line"><span class="meta">spring.mustache.view-names</span>= <span class="string"># White list of view names that can be resolved.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING MVC (WebMvcProperties)</span></span><br><span class="line"><span class="meta">spring.mvc.async.request-timeout</span>= <span class="string"># Amount of time (in milliseconds) before asynchronous request handling times out.</span></span><br><span class="line"><span class="meta">spring.mvc.date-format</span>= <span class="string"># Date format to use. For instance `dd/MM/yyyy`.</span></span><br><span class="line"><span class="meta">spring.mvc.dispatch-trace-request</span>=<span class="string">false # Dispatch TRACE requests to the FrameworkServlet doService method.</span></span><br><span class="line"><span class="meta">spring.mvc.dispatch-options-request</span>=<span class="string">true # Dispatch OPTIONS requests to the FrameworkServlet doService method.</span></span><br><span class="line"><span class="meta">spring.mvc.favicon.enabled</span>=<span class="string">true # Enable resolution of favicon.ico.</span></span><br><span class="line"><span class="meta">spring.mvc.formcontent.putfilter.enabled</span>=<span class="string">true # Enable Spring&#x27;s HttpPutFormContentFilter.</span></span><br><span class="line"><span class="meta">spring.mvc.ignore-default-model-on-redirect</span>=<span class="string">true # If the content of the &quot;default&quot; model should be ignored during redirect scenarios.</span></span><br><span class="line"><span class="meta">spring.mvc.locale</span>= <span class="string"># Locale to use. By default, this locale is overridden by the &quot;Accept-Language&quot; header.</span></span><br><span class="line"><span class="meta">spring.mvc.locale-resolver</span>=<span class="string">accept-header # Define how the locale should be resolved.</span></span><br><span class="line"><span class="meta">spring.mvc.log-resolved-exception</span>=<span class="string">false # Enable warn logging of exceptions resolved by a &quot;HandlerExceptionResolver&quot;.</span></span><br><span class="line"><span class="meta">spring.mvc.media-types.*</span>= <span class="string"># Maps file extensions to media types for content negotiation.</span></span><br><span class="line"><span class="meta">spring.mvc.message-codes-resolver-format</span>= <span class="string"># Formatting strategy for message codes. For instance `PREFIX_ERROR_CODE`.</span></span><br><span class="line"><span class="meta">spring.mvc.servlet.load-on-startup</span>=<span class="string">-1 # Load on startup priority of the Spring Web Services servlet.</span></span><br><span class="line"><span class="meta">spring.mvc.static-path-pattern</span>=<span class="string">/** # Path pattern used for static resources.</span></span><br><span class="line"><span class="meta">spring.mvc.throw-exception-if-no-handler-found</span>=<span class="string">false # If a &quot;NoHandlerFoundException&quot; should be thrown if no Handler was found to process a request.</span></span><br><span class="line"><span class="meta">spring.mvc.view.prefix</span>= <span class="string"># Spring MVC view prefix.</span></span><br><span class="line"><span class="meta">spring.mvc.view.suffix</span>= <span class="string"># Spring MVC view suffix.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING RESOURCES HANDLING (ResourceProperties)</span></span><br><span class="line"><span class="meta">spring.resources.add-mappings</span>=<span class="string">true # Enable default resource handling.</span></span><br><span class="line"><span class="meta">spring.resources.cache-period</span>= <span class="string"># Cache period for the resources served by the resource handler, in seconds.</span></span><br><span class="line"><span class="meta">spring.resources.chain.cache</span>=<span class="string">true # Enable caching in the Resource chain.</span></span><br><span class="line"><span class="meta">spring.resources.chain.enabled</span>= <span class="string"># Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.</span></span><br><span class="line"><span class="meta">spring.resources.chain.gzipped</span>=<span class="string">false # Enable resolution of already gzipped resources.</span></span><br><span class="line"><span class="meta">spring.resources.chain.html-application-cache</span>=<span class="string">false # Enable HTML5 application cache manifest rewriting.</span></span><br><span class="line"><span class="meta">spring.resources.chain.strategy.content.enabled</span>=<span class="string">false # Enable the content Version Strategy.</span></span><br><span class="line"><span class="meta">spring.resources.chain.strategy.content.paths</span>=<span class="string">/** # Comma-separated list of patterns to apply to the Version Strategy.</span></span><br><span class="line"><span class="meta">spring.resources.chain.strategy.fixed.enabled</span>=<span class="string">false # Enable the fixed Version Strategy.</span></span><br><span class="line"><span class="meta">spring.resources.chain.strategy.fixed.paths</span>=<span class="string">/** # Comma-separated list of patterns to apply to the Version Strategy.</span></span><br><span class="line"><span class="meta">spring.resources.chain.strategy.fixed.version</span>= <span class="string"># Version string to use for the Version Strategy.</span></span><br><span class="line"><span class="meta">spring.resources.static-locations</span>=<span class="string">classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING SESSION (SessionProperties)</span></span><br><span class="line"><span class="meta">spring.session.hazelcast.flush-mode</span>=<span class="string">on-save # Sessions flush mode.</span></span><br><span class="line"><span class="meta">spring.session.hazelcast.map-name</span>=<span class="string">spring:session:sessions # Name of the map used to store sessions.</span></span><br><span class="line"><span class="meta">spring.session.jdbc.initializer.enabled</span>= <span class="string"># Create the required session tables on startup if necessary. Enabled automatically if the default table name is set or a custom schema is configured.</span></span><br><span class="line"><span class="meta">spring.session.jdbc.schema</span>=<span class="string">classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</span></span><br><span class="line"><span class="meta">spring.session.jdbc.table-name</span>=<span class="string">SPRING_SESSION # Name of database table used to store sessions.</span></span><br><span class="line"><span class="meta">spring.session.mongo.collection-name</span>=<span class="string">sessions # Collection name used to store sessions.</span></span><br><span class="line"><span class="meta">spring.session.redis.flush-mode</span>=<span class="string">on-save # Sessions flush mode.</span></span><br><span class="line"><span class="meta">spring.session.redis.namespace</span>= <span class="string"># Namespace for keys used to store sessions.</span></span><br><span class="line"><span class="meta">spring.session.store-type</span>= <span class="string"># Session store type.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING SOCIAL (SocialWebAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.social.auto-connection-views</span>=<span class="string">false # Enable the connection status view for supported providers.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.social.facebook.app-id</span>= <span class="string"># your application&#x27;s Facebook App ID</span></span><br><span class="line"><span class="meta">spring.social.facebook.app-secret</span>= <span class="string"># your application&#x27;s Facebook App Secret</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.social.linkedin.app-id</span>= <span class="string"># your application&#x27;s LinkedIn App ID</span></span><br><span class="line"><span class="meta">spring.social.linkedin.app-secret</span>= <span class="string"># your application&#x27;s LinkedIn App Secret</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING SOCIAL TWITTER (TwitterAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.social.twitter.app-id</span>= <span class="string"># your application&#x27;s Twitter App ID</span></span><br><span class="line"><span class="meta">spring.social.twitter.app-secret</span>= <span class="string"># your application&#x27;s Twitter App Secret</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># THYMELEAF (ThymeleafAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">true # Enable template caching.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.check-template</span>=<span class="string">true # Check that the template exists before rendering it.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.check-template-location</span>=<span class="string">true # Check that the templates location exists.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.content-type</span>=<span class="string">text/html # Content-Type value.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.enabled</span>=<span class="string">true # Enable MVC Thymeleaf view resolution.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.encoding</span>=<span class="string">UTF-8 # Template encoding.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.excluded-view-names</span>= <span class="string"># Comma-separated list of view names that should be excluded from resolution.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.mode</span>=<span class="string">HTML5 # Template mode to be applied to templates. See also StandardTemplateModeHandlers.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/ # Prefix that gets prepended to view names when building a URL.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.suffix</span>=<span class="string">.html # Suffix that gets appended to view names when building a URL.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.template-resolver-order</span>= <span class="string"># Order of the template resolver in the chain.</span></span><br><span class="line"><span class="meta">spring.thymeleaf.view-names</span>= <span class="string"># Comma-separated list of view names that can be resolved.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING WEB SERVICES (WebServicesProperties)</span></span><br><span class="line"><span class="meta">spring.webservices.path</span>=<span class="string">/services # Path that serves as the base URI for the services.</span></span><br><span class="line"><span class="meta">spring.webservices.servlet.init</span>= <span class="string"># Servlet init parameters to pass to Spring Web Services.</span></span><br><span class="line"><span class="meta">spring.webservices.servlet.load-on-startup</span>=<span class="string">-1 # Load on startup priority of the Spring Web Services servlet.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># SECURITY PROPERTIES</span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># SECURITY (SecurityProperties)</span></span><br><span class="line"><span class="meta">security.basic.authorize-mode</span>=<span class="string">role # Security authorize mode to apply.</span></span><br><span class="line"><span class="meta">security.basic.enabled</span>=<span class="string">true # Enable basic authentication.</span></span><br><span class="line"><span class="meta">security.basic.path</span>=<span class="string">/** # Comma-separated list of paths to secure.</span></span><br><span class="line"><span class="meta">security.basic.realm</span>=<span class="string">Spring # HTTP basic realm name.</span></span><br><span class="line"><span class="meta">security.enable-csrf</span>=<span class="string">false # Enable Cross Site Request Forgery support.</span></span><br><span class="line"><span class="meta">security.filter-order</span>=<span class="string">0 # Security filter chain order.</span></span><br><span class="line"><span class="meta">security.filter-dispatcher-types</span>=<span class="string">ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.</span></span><br><span class="line"><span class="meta">security.headers.cache</span>=<span class="string">true # Enable cache control HTTP headers.</span></span><br><span class="line"><span class="meta">security.headers.content-security-policy</span>= <span class="string"># Value for content security policy header.</span></span><br><span class="line"><span class="meta">security.headers.content-security-policy-mode</span>=<span class="string">default # Content security policy mode.</span></span><br><span class="line"><span class="meta">security.headers.content-type</span>=<span class="string">true # Enable &quot;X-Content-Type-Options&quot; header.</span></span><br><span class="line"><span class="meta">security.headers.frame</span>=<span class="string">true # Enable &quot;X-Frame-Options&quot; header.</span></span><br><span class="line"><span class="meta">security.headers.hsts</span>=<span class="string">all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).</span></span><br><span class="line"><span class="meta">security.headers.xss</span>=<span class="string">true # Enable cross site scripting (XSS) protection.</span></span><br><span class="line"><span class="meta">security.ignored</span>= <span class="string"># Comma-separated list of paths to exclude from the default secured paths.</span></span><br><span class="line"><span class="meta">security.require-ssl</span>=<span class="string">false # Enable secure channel for all requests.</span></span><br><span class="line"><span class="meta">security.sessions</span>=<span class="string">stateless # Session creation policy (always, never, if_required, stateless).</span></span><br><span class="line"><span class="meta">security.user.name</span>=<span class="string">user # Default user name.</span></span><br><span class="line"><span class="meta">security.user.password</span>= <span class="string"># Password for the default user name. A random password is logged on startup by default.</span></span><br><span class="line"><span class="meta">security.user.role</span>=<span class="string">USER # Granted roles for the default user name.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)</span></span><br><span class="line"><span class="meta">security.oauth2.client.client-id</span>= <span class="string"># OAuth2 client id.</span></span><br><span class="line"><span class="meta">security.oauth2.client.client-secret</span>= <span class="string"># OAuth2 client secret. A random secret is generated by default</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SECURITY OAUTH2 RESOURCES (ResourceServerProperties)</span></span><br><span class="line"><span class="meta">security.oauth2.resource.filter-order</span>= <span class="string"># The order of the filter chain used to authenticate tokens.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.id</span>= <span class="string"># Identifier of the resource.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.jwt.key-uri</span>= <span class="string"># The URI of the JWT token. Can be set if the value is not available and the key is public.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.jwt.key-value</span>= <span class="string"># The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.jwk.key-set-uri</span>= <span class="string"># The URI for getting the set of keys that can be used to validate the token.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.prefer-token-info</span>=<span class="string">true # Use the token info, can be set to false to use the user info.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.service-id</span>=<span class="string">resource #</span></span><br><span class="line"><span class="meta">security.oauth2.resource.token-info-uri</span>= <span class="string"># URI of the token decoding endpoint.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.token-type</span>= <span class="string"># The token type to send when using the userInfoUri.</span></span><br><span class="line"><span class="meta">security.oauth2.resource.user-info-uri</span>= <span class="string"># URI of the user endpoint.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SECURITY OAUTH2 SSO (OAuth2SsoProperties)</span></span><br><span class="line"><span class="meta">security.oauth2.sso.filter-order</span>= <span class="string"># Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter</span></span><br><span class="line"><span class="meta">security.oauth2.sso.login-path</span>=<span class="string">/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># DATA PROPERTIES</span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># FLYWAY (FlywayProperties)</span></span><br><span class="line"><span class="meta">flyway.baseline-description</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.baseline-version</span>=<span class="string">1 # version to start migration</span></span><br><span class="line"><span class="meta">flyway.baseline-on-migrate</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.check-location</span>=<span class="string">false # Check that migration scripts location exists.</span></span><br><span class="line"><span class="meta">flyway.clean-on-validation-error</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.enabled</span>=<span class="string">true # Enable flyway.</span></span><br><span class="line"><span class="meta">flyway.encoding</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.ignore-failed-future-migration</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.init-sqls</span>= <span class="string"># SQL statements to execute to initialize a connection immediately after obtaining it.</span></span><br><span class="line"><span class="meta">flyway.locations</span>=<span class="string">classpath:db/migration # locations of migrations scripts</span></span><br><span class="line"><span class="meta">flyway.out-of-order</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.password</span>= <span class="string"># JDBC password if you want Flyway to create its own DataSource</span></span><br><span class="line"><span class="meta">flyway.placeholder-prefix</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.placeholder-replacement</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.placeholder-suffix</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.placeholders.*</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.schemas</span>= <span class="string"># schemas to update</span></span><br><span class="line"><span class="meta">flyway.sql-migration-prefix</span>=<span class="string">V #</span></span><br><span class="line"><span class="meta">flyway.sql-migration-separator</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.sql-migration-suffix</span>=<span class="string">.sql #</span></span><br><span class="line"><span class="meta">flyway.table</span>= <span class="string">#</span></span><br><span class="line"><span class="meta">flyway.url</span>= <span class="string"># JDBC url of the database to migrate. If not set, the primary configured data source is used.</span></span><br><span class="line"><span class="meta">flyway.user</span>= <span class="string"># Login user of the database to migrate.</span></span><br><span class="line"><span class="meta">flyway.validate-on-migrate</span>= <span class="string">#</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># LIQUIBASE (LiquibaseProperties)</span></span><br><span class="line"><span class="meta">liquibase.change-log</span>=<span class="string">classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.</span></span><br><span class="line"><span class="meta">liquibase.check-change-log-location</span>=<span class="string">true # Check the change log location exists.</span></span><br><span class="line"><span class="meta">liquibase.contexts</span>= <span class="string"># Comma-separated list of runtime contexts to use.</span></span><br><span class="line"><span class="meta">liquibase.default-schema</span>= <span class="string"># Default database schema.</span></span><br><span class="line"><span class="meta">liquibase.drop-first</span>=<span class="string">false # Drop the database schema first.</span></span><br><span class="line"><span class="meta">liquibase.enabled</span>=<span class="string">true # Enable liquibase support.</span></span><br><span class="line"><span class="meta">liquibase.labels</span>= <span class="string"># Comma-separated list of runtime labels to use.</span></span><br><span class="line"><span class="meta">liquibase.parameters.*</span>= <span class="string"># Change log parameters.</span></span><br><span class="line"><span class="meta">liquibase.password</span>= <span class="string"># Login password of the database to migrate.</span></span><br><span class="line"><span class="meta">liquibase.rollback-file</span>= <span class="string"># File to which rollback SQL will be written when an update is performed.</span></span><br><span class="line"><span class="meta">liquibase.url</span>= <span class="string"># JDBC url of the database to migrate. If not set, the primary configured data source is used.</span></span><br><span class="line"><span class="meta">liquibase.user</span>= <span class="string"># Login user of the database to migrate.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># COUCHBASE (CouchbaseProperties)</span></span><br><span class="line"><span class="meta">spring.couchbase.bootstrap-hosts</span>= <span class="string"># Couchbase nodes (host or IP address) to bootstrap from.</span></span><br><span class="line"><span class="meta">spring.couchbase.bucket.name</span>=<span class="string">default # Name of the bucket to connect to.</span></span><br><span class="line"><span class="meta">spring.couchbase.bucket.password</span>=  <span class="string"># Password of the bucket.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.endpoints.key-value</span>=<span class="string">1 # Number of sockets per node against the Key/value service.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.endpoints.query</span>=<span class="string">1 # Number of sockets per node against the Query (N1QL) service.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.endpoints.view</span>=<span class="string">1 # Number of sockets per node against the view service.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.ssl.enabled</span>= <span class="string"># Enable SSL support. Enabled automatically if a &quot;keyStore&quot; is provided unless specified otherwise.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.ssl.key-store</span>= <span class="string"># Path to the JVM key store that holds the certificates.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.ssl.key-store-password</span>= <span class="string"># Password used to access the key store.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.timeouts.connect</span>=<span class="string">5000 # Bucket connections timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.timeouts.key-value</span>=<span class="string">2500 # Blocking operations performed on a specific key timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.timeouts.query</span>=<span class="string">7500 # N1QL query operations timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.timeouts.socket-connect</span>=<span class="string">1000 # Socket connect connections timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.couchbase.env.timeouts.view</span>=<span class="string">7500 # Regular and geospatial view operations timeout in milliseconds.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># DAO (PersistenceExceptionTranslationAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.dao.exceptiontranslation.enabled</span>=<span class="string">true # Enable the PersistenceExceptionTranslationPostProcessor.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># CASSANDRA (CassandraProperties)</span></span><br><span class="line"><span class="meta">spring.data.cassandra.cluster-name</span>= <span class="string"># Name of the Cassandra cluster.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.compression</span>=<span class="string">none # Compression supported by the Cassandra binary protocol.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.connect-timeout-millis</span>= <span class="string"># Socket option: connection time out.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.consistency-level</span>= <span class="string"># Queries consistency level.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.contact-points</span>=<span class="string">localhost # Comma-separated list of cluster node addresses.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.fetch-size</span>= <span class="string"># Queries default fetch size.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.keyspace-name</span>= <span class="string"># Keyspace name to use.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.load-balancing-policy</span>= <span class="string"># Class name of the load balancing policy.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.port</span>= <span class="string"># Port of the Cassandra server.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.password</span>= <span class="string"># Login password of the server.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.read-timeout-millis</span>= <span class="string"># Socket option: read time out.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.reconnection-policy</span>= <span class="string"># Reconnection policy class.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.repositories.enabled</span>= <span class="string"># Enable Cassandra repositories.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.retry-policy</span>= <span class="string"># Class name of the retry policy.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.serial-consistency-level</span>= <span class="string"># Queries serial consistency level.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.schema-action</span>=<span class="string">none # Schema action to take at startup.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.ssl</span>=<span class="string">false # Enable SSL support.</span></span><br><span class="line"><span class="meta">spring.data.cassandra.username</span>= <span class="string"># Login user of the server.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># DATA COUCHBASE (CouchbaseDataProperties)</span></span><br><span class="line"><span class="meta">spring.data.couchbase.auto-index</span>=<span class="string">false # Automatically create views and indexes.</span></span><br><span class="line"><span class="meta">spring.data.couchbase.consistency</span>=<span class="string">read-your-own-writes # Consistency to apply by default on generated queries.</span></span><br><span class="line"><span class="meta">spring.data.couchbase.repositories.enabled</span>=<span class="string">true # Enable Couchbase repositories.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ELASTICSEARCH (ElasticsearchProperties)</span></span><br><span class="line"><span class="meta">spring.data.elasticsearch.cluster-name</span>=<span class="string">elasticsearch # Elasticsearch cluster name.</span></span><br><span class="line"><span class="meta">spring.data.elasticsearch.cluster-nodes</span>= <span class="string"># Comma-separated list of cluster node addresses. If not specified, starts a client node.</span></span><br><span class="line"><span class="meta">spring.data.elasticsearch.properties.*</span>= <span class="string"># Additional properties used to configure the client.</span></span><br><span class="line"><span class="meta">spring.data.elasticsearch.repositories.enabled</span>=<span class="string">true # Enable Elasticsearch repositories.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># DATA LDAP</span></span><br><span class="line"><span class="meta">spring.data.ldap.repositories.enabled</span>=<span class="string">true # Enable LDAP repositories.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MONGODB (MongoProperties)</span></span><br><span class="line"><span class="meta">spring.data.mongodb.authentication-database</span>= <span class="string"># Authentication database name.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.database</span>=<span class="string">test # Database name.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.field-naming-strategy</span>= <span class="string"># Fully qualified name of the FieldNamingStrategy to use.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.grid-fs-database</span>= <span class="string"># GridFS database name.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.host</span>=<span class="string">localhost # Mongo server host. Cannot be set with uri.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.password</span>= <span class="string"># Login password of the mongo server. Cannot be set with uri.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.port</span>=<span class="string">27017 # Mongo server port. Cannot be set with uri.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.repositories.enabled</span>=<span class="string">true # Enable Mongo repositories.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.uri</span>=<span class="string">mongodb://localhost/test # Mongo database URI. Cannot be set with host, port and credentials.</span></span><br><span class="line"><span class="meta">spring.data.mongodb.username</span>= <span class="string"># Login user of the mongo server. Cannot be set with uri.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># DATA REDIS</span></span><br><span class="line"><span class="meta">spring.data.redis.repositories.enabled</span>=<span class="string">true # Enable Redis repositories.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># NEO4J (Neo4jProperties)</span></span><br><span class="line"><span class="meta">spring.data.neo4j.compiler</span>= <span class="string"># Compiler to use.</span></span><br><span class="line"><span class="meta">spring.data.neo4j.embedded.enabled</span>=<span class="string">true # Enable embedded mode if the embedded driver is available.</span></span><br><span class="line"><span class="meta">spring.data.neo4j.open-in-view</span>=<span class="string">true # Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the entire processing of the request.</span></span><br><span class="line"><span class="meta">spring.data.neo4j.password</span>= <span class="string"># Login password of the server.</span></span><br><span class="line"><span class="meta">spring.data.neo4j.repositories.enabled</span>=<span class="string">true # Enable Neo4j repositories.</span></span><br><span class="line"><span class="meta">spring.data.neo4j.uri</span>= <span class="string"># URI used by the driver. Auto-detected by default.</span></span><br><span class="line"><span class="meta">spring.data.neo4j.username</span>= <span class="string"># Login user of the server.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># DATA REST (RepositoryRestProperties)</span></span><br><span class="line"><span class="meta">spring.data.rest.base-path</span>= <span class="string"># Base path to be used by Spring Data REST to expose repository resources.</span></span><br><span class="line"><span class="meta">spring.data.rest.default-media-type</span>= <span class="string"># Content type to use as a default when none is specified.</span></span><br><span class="line"><span class="meta">spring.data.rest.default-page-size</span>= <span class="string"># Default size of pages.</span></span><br><span class="line"><span class="meta">spring.data.rest.detection-strategy</span>=<span class="string">default # Strategy to use to determine which repositories get exposed.</span></span><br><span class="line"><span class="meta">spring.data.rest.enable-enum-translation</span>= <span class="string"># Enable enum value translation via the Spring Data REST default resource bundle.</span></span><br><span class="line"><span class="meta">spring.data.rest.limit-param-name</span>= <span class="string"># Name of the URL query string parameter that indicates how many results to return at once.</span></span><br><span class="line"><span class="meta">spring.data.rest.max-page-size</span>= <span class="string"># Maximum size of pages.</span></span><br><span class="line"><span class="meta">spring.data.rest.page-param-name</span>= <span class="string"># Name of the URL query string parameter that indicates what page to return.</span></span><br><span class="line"><span class="meta">spring.data.rest.return-body-on-create</span>= <span class="string"># Return a response body after creating an entity.</span></span><br><span class="line"><span class="meta">spring.data.rest.return-body-on-update</span>= <span class="string"># Return a response body after updating an entity.</span></span><br><span class="line"><span class="meta">spring.data.rest.sort-param-name</span>= <span class="string"># Name of the URL query string parameter that indicates what direction to sort results.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SOLR (SolrProperties)</span></span><br><span class="line"><span class="meta">spring.data.solr.host</span>=<span class="string">http://127.0.0.1:8983/solr # Solr host. Ignored if &quot;zk-host&quot; is set.</span></span><br><span class="line"><span class="meta">spring.data.solr.repositories.enabled</span>=<span class="string">true # Enable Solr repositories.</span></span><br><span class="line"><span class="meta">spring.data.solr.zk-host</span>= <span class="string"># ZooKeeper host address in the form HOST:PORT.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># DATASOURCE (DataSourceAutoConfiguration &amp; DataSourceProperties)</span></span><br><span class="line"><span class="meta">spring.datasource.continue-on-error</span>=<span class="string">false # Do not stop if an error occurs while initializing the database.</span></span><br><span class="line"><span class="meta">spring.datasource.data</span>= <span class="string"># Data (DML) script resource references.</span></span><br><span class="line"><span class="meta">spring.datasource.data-username</span>= <span class="string"># User of the database to execute DML scripts (if different).</span></span><br><span class="line"><span class="meta">spring.datasource.data-password</span>= <span class="string"># Password of the database to execute DML scripts (if different).</span></span><br><span class="line"><span class="meta">spring.datasource.dbcp2.*</span>= <span class="string"># Commons DBCP2 specific settings</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>= <span class="string"># Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.</span></span><br><span class="line"><span class="meta">spring.datasource.generate-unique-name</span>=<span class="string">false # Generate a random datasource name.</span></span><br><span class="line"><span class="meta">spring.datasource.hikari.*</span>= <span class="string"># Hikari specific settings</span></span><br><span class="line"><span class="meta">spring.datasource.initialize</span>=<span class="string">true # Populate the database using &#x27;data.sql&#x27;.</span></span><br><span class="line"><span class="meta">spring.datasource.jmx-enabled</span>=<span class="string">false # Enable JMX support (if provided by the underlying pool).</span></span><br><span class="line"><span class="meta">spring.datasource.jndi-name</span>= <span class="string"># JNDI location of the datasource. Class, url, username &amp; password are ignored when set.</span></span><br><span class="line"><span class="meta">spring.datasource.name</span>=<span class="string">testdb # Name of the datasource.</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>= <span class="string"># Login password of the database.</span></span><br><span class="line"><span class="meta">spring.datasource.platform</span>=<span class="string">all # Platform to use in the DDL or DML scripts (e.g. schema-$&#123;platform&#125;.sql or data-$&#123;platform&#125;.sql).</span></span><br><span class="line"><span class="meta">spring.datasource.schema</span>= <span class="string"># Schema (DDL) script resource references.</span></span><br><span class="line"><span class="meta">spring.datasource.schema-username</span>= <span class="string"># User of the database to execute DDL scripts (if different).</span></span><br><span class="line"><span class="meta">spring.datasource.schema-password</span>= <span class="string"># Password of the database to execute DDL scripts (if different).</span></span><br><span class="line"><span class="meta">spring.datasource.separator</span>=<span class="string">; # Statement separator in SQL initialization scripts.</span></span><br><span class="line"><span class="meta">spring.datasource.sql-script-encoding</span>= <span class="string"># SQL scripts encoding.</span></span><br><span class="line"><span class="meta">spring.datasource.tomcat.*</span>= <span class="string"># Tomcat datasource specific settings</span></span><br><span class="line"><span class="meta">spring.datasource.type</span>= <span class="string"># Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>= <span class="string"># JDBC url of the database.</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>= <span class="string"># Login user of the database.</span></span><br><span class="line"><span class="meta">spring.datasource.xa.data-source-class-name</span>= <span class="string"># XA datasource fully qualified name.</span></span><br><span class="line"><span class="meta">spring.datasource.xa.properties</span>= <span class="string"># Properties to pass to the XA data source.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JEST (Elasticsearch HTTP client) (JestProperties)</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.connection-timeout</span>=<span class="string">3000 # Connection timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.multi-threaded</span>=<span class="string">true # Enable connection requests from multiple execution threads.</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.password</span>= <span class="string"># Login password.</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.proxy.host</span>= <span class="string"># Proxy host the HTTP client should use.</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.proxy.port</span>= <span class="string"># Proxy port the HTTP client should use.</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.read-timeout</span>=<span class="string">3000 # Read timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.uris</span>=<span class="string">http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use.</span></span><br><span class="line"><span class="meta">spring.elasticsearch.jest.username</span>= <span class="string"># Login user.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># H2 Web Console (H2ConsoleProperties)</span></span><br><span class="line"><span class="meta">spring.h2.console.enabled</span>=<span class="string">false # Enable the console.</span></span><br><span class="line"><span class="meta">spring.h2.console.path</span>=<span class="string">/h2-console # Path at which the console will be available.</span></span><br><span class="line"><span class="meta">spring.h2.console.settings.trace</span>=<span class="string">false # Enable trace output.</span></span><br><span class="line"><span class="meta">spring.h2.console.settings.web-allow-others</span>=<span class="string">false # Enable remote access.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JOOQ (JooqProperties)</span></span><br><span class="line"><span class="meta">spring.jooq.sql-dialect</span>= <span class="string"># SQLDialect JOOQ used when communicating with the configured datasource. For instance `POSTGRES`</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.data.jpa.repositories.enabled</span>=<span class="string">true # Enable JPA repositories.</span></span><br><span class="line"><span class="meta">spring.jpa.database</span>= <span class="string"># Target database to operate on, auto-detected by default. Can be alternatively set using the &quot;databasePlatform&quot; property.</span></span><br><span class="line"><span class="meta">spring.jpa.database-platform</span>= <span class="string"># Name of the target database to operate on, auto-detected by default. Can be alternatively set using the &quot;Database&quot; enum.</span></span><br><span class="line"><span class="meta">spring.jpa.generate-ddl</span>=<span class="string">false # Initialize the schema on startup.</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.ddl-auto</span>= <span class="string"># DDL mode. This is actually a shortcut for the &quot;hibernate.hbm2ddl.auto&quot; property. Default to &quot;create-drop&quot; when using an embedded database, &quot;none&quot; otherwise.</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.naming.implicit-strategy</span>= <span class="string"># Hibernate 5 implicit naming strategy fully qualified name.</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.naming.physical-strategy</span>= <span class="string"># Hibernate 5 physical naming strategy fully qualified name.</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.naming.strategy</span>= <span class="string"># Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.use-new-id-generator-mappings</span>= <span class="string"># Use Hibernate&#x27;s newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.</span></span><br><span class="line"><span class="meta">spring.jpa.open-in-view</span>=<span class="string">true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.</span></span><br><span class="line"><span class="meta">spring.jpa.properties.*</span>= <span class="string"># Additional native properties to set on the JPA provider.</span></span><br><span class="line"><span class="meta">spring.jpa.show-sql</span>=<span class="string">false # Enable logging of SQL statements.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JTA (JtaAutoConfiguration)</span></span><br><span class="line"><span class="meta">spring.jta.enabled</span>=<span class="string">true # Enable JTA support.</span></span><br><span class="line"><span class="meta">spring.jta.log-dir</span>= <span class="string"># Transaction logs directory.</span></span><br><span class="line"><span class="meta">spring.jta.transaction-manager-id</span>= <span class="string"># Transaction manager unique identifier.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ATOMIKOS (AtomikosProperties)</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.borrow-connection-timeout</span>=<span class="string">30 # Timeout, in seconds, for borrowing connections from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag</span>=<span class="string">true # Whether or not to ignore the transacted flag when creating session.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.local-transaction-mode</span>=<span class="string">false # Whether or not local transactions are desired.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.maintenance-interval</span>=<span class="string">60 # The time, in seconds, between runs of the pool&#x27;s maintenance thread.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.max-idle-time</span>=<span class="string">60 # The time, in seconds, after which connections are cleaned up from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.max-lifetime</span>=<span class="string">0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.max-pool-size</span>=<span class="string">1 # The maximum size of the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.min-pool-size</span>=<span class="string">1 # The minimum size of the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.reap-timeout</span>=<span class="string">0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.connectionfactory.unique-resource-name</span>=<span class="string">jmsConnectionFactory # The unique name used to identify the resource during recovery.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.borrow-connection-timeout</span>=<span class="string">30 # Timeout, in seconds, for borrowing connections from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.default-isolation-level</span>= <span class="string"># Default isolation level of connections provided by the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.login-timeout</span>= <span class="string"># Timeout, in seconds, for establishing a database connection.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.maintenance-interval</span>=<span class="string">60 # The time, in seconds, between runs of the pool&#x27;s maintenance thread.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.max-idle-time</span>=<span class="string">60 # The time, in seconds, after which connections are cleaned up from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.max-lifetime</span>=<span class="string">0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.max-pool-size</span>=<span class="string">1 # The maximum size of the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.min-pool-size</span>=<span class="string">1 # The minimum size of the pool.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.reap-timeout</span>=<span class="string">0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.test-query</span>= <span class="string"># SQL query or statement used to validate a connection before returning it.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.datasource.unique-resource-name</span>=<span class="string">dataSource # The unique name used to identify the resource during recovery.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.checkpoint-interval</span>=<span class="string">500 # Interval between checkpoints.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.default-jta-timeout</span>=<span class="string">10000 # Default timeout for JTA transactions.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.enable-logging</span>=<span class="string">true # Enable disk logging.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.force-shutdown-on-vm-exit</span>=<span class="string">false # Specify if a VM shutdown should trigger forced shutdown of the transaction core.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.log-base-dir</span>= <span class="string"># Directory in which the log files should be stored.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.log-base-name</span>=<span class="string">tmlog # Transactions log file base name.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.max-actives</span>=<span class="string">50 # Maximum number of active transactions.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.max-timeout</span>=<span class="string">300000 # Maximum timeout (in milliseconds) that can be allowed for transactions.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.serial-jta-transactions</span>=<span class="string">true # Specify if sub-transactions should be joined when possible.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.service</span>= <span class="string"># Transaction manager implementation that should be started.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.threaded-two-phase-commit</span>=<span class="string">false # Use different (and concurrent) threads for two-phase commit on the participating resources.</span></span><br><span class="line"><span class="meta">spring.jta.atomikos.properties.transaction-manager-unique-name</span>= <span class="string"># Transaction manager&#x27;s unique name.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># BITRONIX</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.acquire-increment</span>=<span class="string">1 # Number of connections to create when growing the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.acquisition-interval</span>=<span class="string">1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.acquisition-timeout</span>=<span class="string">30 # Timeout, in seconds, for acquiring connections from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.allow-local-transactions</span>=<span class="string">true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.apply-transaction-timeout</span>=<span class="string">false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled</span>=<span class="string">true # Whether or not resources should be enlisted and delisted automatically.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.cache-producers-consumers</span>=<span class="string">true # Whether or not produces and consumers should be cached.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.defer-connection-release</span>=<span class="string">true # Whether or not the provider can run many transactions on the same connection and supports transaction interleaving.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.ignore-recovery-failures</span>=<span class="string">false # Whether or not recovery failures should be ignored.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.max-idle-time</span>=<span class="string">60 # The time, in seconds, after which connections are cleaned up from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.max-pool-size</span>=<span class="string">10 # The maximum size of the pool. 0 denotes no limit.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.min-pool-size</span>=<span class="string">0 # The minimum size of the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.password</span>= <span class="string"># The password to use to connect to the JMS provider.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.share-transaction-connections</span>=<span class="string">false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.test-connections</span>=<span class="string">true # Whether or not connections should be tested when acquired from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.two-pc-ordering-position</span>=<span class="string">1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.unique-name</span>=<span class="string">jmsConnectionFactory # The unique name used to identify the resource during recovery.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.use-tm-join</span>=<span class="string">true Whether or not TMJOIN should be used when starting XAResources.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.connectionfactory.user</span>= <span class="string"># The user to use to connect to the JMS provider.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.acquire-increment</span>=<span class="string">1 # Number of connections to create when growing the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.acquisition-interval</span>=<span class="string">1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.acquisition-timeout</span>=<span class="string">30 # Timeout, in seconds, for acquiring connections from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.allow-local-transactions</span>=<span class="string">true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.apply-transaction-timeout</span>=<span class="string">false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.automatic-enlisting-enabled</span>=<span class="string">true # Whether or not resources should be enlisted and delisted automatically.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.cursor-holdability</span>= <span class="string"># The default cursor holdability for connections.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.defer-connection-release</span>=<span class="string">true # Whether or not the database can run many transactions on the same connection and supports transaction interleaving.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.enable-jdbc4-connection-test</span>= <span class="string"># Whether or not Connection.isValid() is called when acquiring a connection from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.ignore-recovery-failures</span>=<span class="string">false # Whether or not recovery failures should be ignored.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.isolation-level</span>= <span class="string"># The default isolation level for connections.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.local-auto-commit</span>= <span class="string"># The default auto-commit mode for local transactions.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.login-timeout</span>= <span class="string"># Timeout, in seconds, for establishing a database connection.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.max-idle-time</span>=<span class="string">60 # The time, in seconds, after which connections are cleaned up from the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.max-pool-size</span>=<span class="string">10 # The maximum size of the pool. 0 denotes no limit.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.min-pool-size</span>=<span class="string">0 # The minimum size of the pool.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.prepared-statement-cache-size</span>=<span class="string">0 # The target size of the prepared statement cache. 0 disables the cache.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.share-transaction-connections</span>=<span class="string">false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.test-query</span>= <span class="string"># SQL query or statement used to validate a connection before returning it.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.two-pc-ordering-position</span>=<span class="string">1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.unique-name</span>=<span class="string">dataSource # The unique name used to identify the resource during recovery.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.datasource.use-tm-join</span>=<span class="string">true Whether or not TMJOIN should be used when starting XAResources.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.allow-multiple-lrc</span>=<span class="string">false # Allow multiple LRC resources to be enlisted into the same transaction.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.asynchronous2-pc</span>=<span class="string">false # Enable asynchronously execution of two phase commit.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.background-recovery-interval-seconds</span>=<span class="string">60 # Interval in seconds at which to run the recovery process in the background.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.current-node-only-recovery</span>=<span class="string">true # Recover only the current node.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.debug-zero-resource-transaction</span>=<span class="string">false # Log the creation and commit call stacks of transactions executed without a single enlisted resource.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.default-transaction-timeout</span>=<span class="string">60 # Default transaction timeout in seconds.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.disable-jmx</span>=<span class="string">false # Enable JMX support.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.exception-analyzer</span>= <span class="string"># Set the fully qualified name of the exception analyzer implementation to use.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.filter-log-status</span>=<span class="string">false # Enable filtering of logs so that only mandatory logs are written.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.force-batching-enabled</span>=<span class="string">true #  Set if disk forces are batched.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.forced-write-enabled</span>=<span class="string">true # Set if logs are forced to disk.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.graceful-shutdown-interval</span>=<span class="string">60 # Maximum amount of seconds the TM will wait for transactions to get done before aborting them at shutdown time.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name</span>= <span class="string"># JNDI name of the TransactionSynchronizationRegistry.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.jndi-user-transaction-name</span>= <span class="string"># JNDI name of the UserTransaction.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.journal</span>=<span class="string">disk # Name of the journal. Can be &#x27;disk&#x27;, &#x27;null&#x27; or a class name.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.log-part1-filename</span>=<span class="string">btm1.tlog # Name of the first fragment of the journal.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.log-part2-filename</span>=<span class="string">btm2.tlog # Name of the second fragment of the journal.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.max-log-size-in-mb</span>=<span class="string">2 # Maximum size in megabytes of the journal fragments.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.resource-configuration-filename</span>= <span class="string"># ResourceLoader configuration file name.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.server-id</span>= <span class="string"># ASCII ID that must uniquely identify this TM instance. Default to the machine&#x27;s IP address.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.skip-corrupted-logs</span>=<span class="string">false # Skip corrupted transactions log entries.</span></span><br><span class="line"><span class="meta">spring.jta.bitronix.properties.warn-about-zero-resource-transaction</span>=<span class="string">true # Log a warning for transactions executed without a single enlisted resource.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># NARAYANA (NarayanaProperties)</span></span><br><span class="line"><span class="meta">spring.jta.narayana.default-timeout</span>=<span class="string">60 # Transaction timeout in seconds.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.expiry-scanners</span>=<span class="string">com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner # Comma-separated list of expiry scanners.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.log-dir</span>= <span class="string"># Transaction object store directory.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.one-phase-commit</span>=<span class="string">true # Enable one phase commit optimisation.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.periodic-recovery-period</span>=<span class="string">120 # Interval in which periodic recovery scans are performed in seconds.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.recovery-backoff-period</span>=<span class="string">10 # Back off period between first and second phases of the recovery scan in seconds.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.recovery-db-pass</span>= <span class="string"># Database password to be used by recovery manager.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.recovery-db-user</span>= <span class="string"># Database username to be used by recovery manager.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.recovery-jms-pass</span>= <span class="string"># JMS password to be used by recovery manager.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.recovery-jms-user</span>= <span class="string"># JMS username to be used by recovery manager.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.recovery-modules</span>= <span class="string"># Comma-separated list of recovery modules.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.transaction-manager-id</span>=<span class="string">1 # Unique transaction manager id.</span></span><br><span class="line"><span class="meta">spring.jta.narayana.xa-resource-orphan-filters</span>= <span class="string"># Comma-separated list of orphan filters.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># EMBEDDED MONGODB (EmbeddedMongoProperties)</span></span><br><span class="line"><span class="meta">spring.mongodb.embedded.features</span>=<span class="string">SYNC_DELAY # Comma-separated list of features to enable.</span></span><br><span class="line"><span class="meta">spring.mongodb.embedded.storage.database-dir</span>= <span class="string"># Directory used for data storage.</span></span><br><span class="line"><span class="meta">spring.mongodb.embedded.storage.oplog-size</span>= <span class="string"># Maximum size of the oplog in megabytes.</span></span><br><span class="line"><span class="meta">spring.mongodb.embedded.storage.repl-set-name</span>= <span class="string"># Name of the replica set.</span></span><br><span class="line"><span class="meta">spring.mongodb.embedded.version</span>=<span class="string">2.6.10 # Version of Mongo to use.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># REDIS (RedisProperties)</span></span><br><span class="line"><span class="meta">spring.redis.cluster.max-redirects</span>= <span class="string"># Maximum number of redirects to follow when executing commands across the cluster.</span></span><br><span class="line"><span class="meta">spring.redis.cluster.nodes</span>= <span class="string"># Comma-separated list of &quot;host:port&quot; pairs to bootstrap from.</span></span><br><span class="line"><span class="meta">spring.redis.database</span>=<span class="string">0 # Database index used by the connection factory.</span></span><br><span class="line"><span class="meta">spring.redis.url</span>= <span class="string"># Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379</span></span><br><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">localhost # Redis server host.</span></span><br><span class="line"><span class="meta">spring.redis.password</span>= <span class="string"># Login password of the redis server.</span></span><br><span class="line"><span class="meta">spring.redis.ssl</span>=<span class="string">false # Enable SSL support.</span></span><br><span class="line"><span class="meta">spring.redis.pool.max-active</span>=<span class="string">8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.</span></span><br><span class="line"><span class="meta">spring.redis.pool.max-idle</span>=<span class="string">8 # Max number of &quot;idle&quot; connections in the pool. Use a negative value to indicate an unlimited number of idle connections.</span></span><br><span class="line"><span class="meta">spring.redis.pool.max-wait</span>=<span class="string">-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.</span></span><br><span class="line"><span class="meta">spring.redis.pool.min-idle</span>=<span class="string">0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.</span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379 # Redis server port.</span></span><br><span class="line"><span class="meta">spring.redis.sentinel.master</span>= <span class="string"># Name of Redis server.</span></span><br><span class="line"><span class="meta">spring.redis.sentinel.nodes</span>= <span class="string"># Comma-separated list of host:port pairs.</span></span><br><span class="line"><span class="meta">spring.redis.timeout</span>=<span class="string">0 # Connection timeout in milliseconds.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># TRANSACTION (TransactionProperties)</span></span><br><span class="line"><span class="meta">spring.transaction.default-timeout</span>= <span class="string"># Default transaction timeout in seconds.</span></span><br><span class="line"><span class="meta">spring.transaction.rollback-on-commit-failure</span>= <span class="string"># Perform the rollback on commit failures.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># INTEGRATION PROPERTIES</span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ACTIVEMQ (ActiveMQProperties)</span></span><br><span class="line"><span class="meta">spring.activemq.broker-url</span>= <span class="string"># URL of the ActiveMQ broker. Auto-generated by default.</span></span><br><span class="line"><span class="meta">spring.activemq.close-timeout</span>=<span class="string">15000 # Time to wait, in milliseconds, before considering a close complete.</span></span><br><span class="line"><span class="meta">spring.activemq.in-memory</span>=<span class="string">true # Specify if the default broker URL should be in memory. Ignored if an explicit broker has been specified.</span></span><br><span class="line"><span class="meta">spring.activemq.non-blocking-redelivery</span>=<span class="string">false # Do not stop message delivery before re-delivering messages from a rolled back transaction. This implies that message order will not be preserved when this is enabled.</span></span><br><span class="line"><span class="meta">spring.activemq.password</span>= <span class="string"># Login password of the broker.</span></span><br><span class="line"><span class="meta">spring.activemq.send-timeout</span>=<span class="string">0 # Time to wait, in milliseconds, on Message sends for a response. Set it to 0 to indicate to wait forever.</span></span><br><span class="line"><span class="meta">spring.activemq.user</span>= <span class="string"># Login user of the broker.</span></span><br><span class="line"><span class="meta">spring.activemq.packages.trust-all</span>= <span class="string"># Trust all packages.</span></span><br><span class="line"><span class="meta">spring.activemq.packages.trusted</span>= <span class="string"># Comma-separated list of specific packages to trust (when not trusting all packages).</span></span><br><span class="line"><span class="meta">spring.activemq.pool.block-if-full</span>=<span class="string">true # Block when a connection is requested and the pool is full. Set it to false to throw a &quot;JMSException&quot; instead.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.block-if-full-timeout</span>=<span class="string">-1 # Blocking period, in milliseconds, before throwing an exception if the pool is still full.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.create-connection-on-startup</span>=<span class="string">true # Create a connection on startup. Can be used to warm-up the pool on startup.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.enabled</span>=<span class="string">false # Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.expiry-timeout</span>=<span class="string">0 # Connection expiration timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.idle-timeout</span>=<span class="string">30000 # Connection idle timeout in milliseconds.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.max-connections</span>=<span class="string">1 # Maximum number of pooled connections.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.maximum-active-session-per-connection</span>=<span class="string">500 # Maximum number of active sessions per connection.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.reconnect-on-exception</span>=<span class="string">true # Reset the connection when a &quot;JMXException&quot; occurs.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.time-between-expiration-check</span>=<span class="string">-1 # Time to sleep, in milliseconds, between runs of the idle connection eviction thread. When negative, no idle connection eviction thread runs.</span></span><br><span class="line"><span class="meta">spring.activemq.pool.use-anonymous-producers</span>=<span class="string">true # Use only one anonymous &quot;MessageProducer&quot; instance. Set it to false to create one &quot;MessageProducer&quot; every time one is required.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ARTEMIS (ArtemisProperties)</span></span><br><span class="line"><span class="meta">spring.artemis.embedded.cluster-password</span>= <span class="string"># Cluster password. Randomly generated on startup by default.</span></span><br><span class="line"><span class="meta">spring.artemis.embedded.data-directory</span>= <span class="string"># Journal file directory. Not necessary if persistence is turned off.</span></span><br><span class="line"><span class="meta">spring.artemis.embedded.enabled</span>=<span class="string">true # Enable embedded mode if the Artemis server APIs are available.</span></span><br><span class="line"><span class="meta">spring.artemis.embedded.persistent</span>=<span class="string">false # Enable persistent store.</span></span><br><span class="line"><span class="meta">spring.artemis.embedded.queues</span>= <span class="string"># Comma-separated list of queues to create on startup.</span></span><br><span class="line"><span class="meta">spring.artemis.embedded.server-id</span>= <span class="string"># Server id. By default, an auto-incremented counter is used.</span></span><br><span class="line"><span class="meta">spring.artemis.embedded.topics</span>= <span class="string"># Comma-separated list of topics to create on startup.</span></span><br><span class="line"><span class="meta">spring.artemis.host</span>=<span class="string">localhost # Artemis broker host.</span></span><br><span class="line"><span class="meta">spring.artemis.mode</span>= <span class="string"># Artemis deployment mode, auto-detected by default.</span></span><br><span class="line"><span class="meta">spring.artemis.password</span>= <span class="string"># Login password of the broker.</span></span><br><span class="line"><span class="meta">spring.artemis.port</span>=<span class="string">61616 # Artemis broker port.</span></span><br><span class="line"><span class="meta">spring.artemis.user</span>= <span class="string"># Login user of the broker.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># SPRING BATCH (BatchProperties)</span></span><br><span class="line"><span class="meta">spring.batch.initializer.enabled</span>= <span class="string"># Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.</span></span><br><span class="line"><span class="meta">spring.batch.job.enabled</span>=<span class="string">true # Execute all Spring Batch jobs in the context on startup.</span></span><br><span class="line"><span class="meta">spring.batch.job.names</span>= <span class="string"># Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.</span></span><br><span class="line"><span class="meta">spring.batch.schema</span>=<span class="string">classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</span></span><br><span class="line"><span class="meta">spring.batch.table-prefix</span>= <span class="string"># Table prefix for all the batch meta-data tables.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JMS (JmsProperties)</span></span><br><span class="line"><span class="meta">spring.jms.jndi-name</span>= <span class="string"># Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.</span></span><br><span class="line"><span class="meta">spring.jms.listener.acknowledge-mode</span>= <span class="string"># Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.</span></span><br><span class="line"><span class="meta">spring.jms.listener.auto-startup</span>=<span class="string">true # Start the container automatically on startup.</span></span><br><span class="line"><span class="meta">spring.jms.listener.concurrency</span>= <span class="string"># Minimum number of concurrent consumers.</span></span><br><span class="line"><span class="meta">spring.jms.listener.max-concurrency</span>= <span class="string"># Maximum number of concurrent consumers.</span></span><br><span class="line"><span class="meta">spring.jms.pub-sub-domain</span>=<span class="string">false # Specify if the default destination type is topic.</span></span><br><span class="line"><span class="meta">spring.jms.template.default-destination</span>= <span class="string"># Default destination to use on send/receive operations that do not have a destination parameter.</span></span><br><span class="line"><span class="meta">spring.jms.template.delivery-delay</span>= <span class="string"># Delivery delay to use for send calls in milliseconds.</span></span><br><span class="line"><span class="meta">spring.jms.template.delivery-mode</span>= <span class="string"># Delivery mode. Enable QoS when set.</span></span><br><span class="line"><span class="meta">spring.jms.template.priority</span>= <span class="string"># Priority of a message when sending. Enable QoS when set.</span></span><br><span class="line"><span class="meta">spring.jms.template.qos-enabled</span>= <span class="string"># Enable explicit QoS when sending a message.</span></span><br><span class="line"><span class="meta">spring.jms.template.receive-timeout</span>= <span class="string"># Timeout to use for receive calls in milliseconds.</span></span><br><span class="line"><span class="meta">spring.jms.template.time-to-live</span>= <span class="string"># Time-to-live of a message when sending in milliseconds. Enable QoS when set.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># APACHE KAFKA (KafkaProperties)</span></span><br><span class="line"><span class="meta">spring.kafka.bootstrap-servers</span>= <span class="string"># Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span></span><br><span class="line"><span class="meta">spring.kafka.client-id</span>= <span class="string"># Id to pass to the server when making requests; used for server-side logging.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.auto-commit-interval</span>= <span class="string"># Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if &#x27;enable.auto.commit&#x27; true.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.auto-offset-reset</span>= <span class="string"># What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.bootstrap-servers</span>= <span class="string"># Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.client-id</span>= <span class="string"># Id to pass to the server when making requests; used for server-side logging.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.enable-auto-commit</span>= <span class="string"># If true the consumer&#x27;s offset will be periodically committed in the background.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.fetch-max-wait</span>= <span class="string"># Maximum amount of time in milliseconds the server will block before answering the fetch request if there isn&#x27;t sufficient data to immediately satisfy the requirement given by &quot;fetch.min.bytes&quot;.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.fetch-min-size</span>= <span class="string"># Minimum amount of data the server should return for a fetch request in bytes.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.group-id</span>= <span class="string"># Unique string that identifies the consumer group this consumer belongs to.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.heartbeat-interval</span>= <span class="string"># Expected time in milliseconds between heartbeats to the consumer coordinator.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.key-deserializer</span>= <span class="string"># Deserializer class for keys.</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.max-poll-records</span>= <span class="string"># Maximum number of records returned in a single call to poll().</span></span><br><span class="line"><span class="meta">spring.kafka.consumer.value-deserializer</span>= <span class="string"># Deserializer class for values.</span></span><br><span class="line"><span class="meta">spring.kafka.listener.ack-count</span>= <span class="string"># Number of records between offset commits when ackMode is &quot;COUNT&quot; or &quot;COUNT_TIME&quot;.</span></span><br><span class="line"><span class="meta">spring.kafka.listener.ack-mode</span>= <span class="string"># Listener AckMode; see the spring-kafka documentation.</span></span><br><span class="line"><span class="meta">spring.kafka.listener.ack-time</span>= <span class="string"># Time in milliseconds between offset commits when ackMode is &quot;TIME&quot; or &quot;COUNT_TIME&quot;.</span></span><br><span class="line"><span class="meta">spring.kafka.listener.concurrency</span>= <span class="string"># Number of threads to run in the listener containers.</span></span><br><span class="line"><span class="meta">spring.kafka.listener.poll-timeout</span>= <span class="string"># Timeout in milliseconds to use when polling the consumer.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.acks</span>= <span class="string"># Number of acknowledgments the producer requires the leader to have received before considering a request complete.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.batch-size</span>= <span class="string"># Default batch size in bytes.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.bootstrap-servers</span>= <span class="string"># Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.buffer-memory</span>= <span class="string"># Total bytes of memory the producer can use to buffer records waiting to be sent to the server.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.client-id</span>= <span class="string"># Id to pass to the server when making requests; used for server-side logging.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.compression-type</span>= <span class="string"># Compression type for all data generated by the producer.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.key-serializer</span>= <span class="string"># Serializer class for keys.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.retries</span>= <span class="string"># When greater than zero, enables retrying of failed sends.</span></span><br><span class="line"><span class="meta">spring.kafka.producer.value-serializer</span>= <span class="string"># Serializer class for values.</span></span><br><span class="line"><span class="meta">spring.kafka.properties.*</span>= <span class="string"># Additional properties used to configure the client.</span></span><br><span class="line"><span class="meta">spring.kafka.ssl.key-password</span>= <span class="string"># Password of the private key in the key store file.</span></span><br><span class="line"><span class="meta">spring.kafka.ssl.keystore-location</span>= <span class="string"># Location of the key store file.</span></span><br><span class="line"><span class="meta">spring.kafka.ssl.keystore-password</span>= <span class="string"># Store password for the key store file.</span></span><br><span class="line"><span class="meta">spring.kafka.ssl.truststore-location</span>= <span class="string"># Location of the trust store file.</span></span><br><span class="line"><span class="meta">spring.kafka.ssl.truststore-password</span>= <span class="string"># Store password for the trust store file.</span></span><br><span class="line"><span class="meta">spring.kafka.template.default-topic</span>= <span class="string"># Default topic to which messages will be sent.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># RABBIT (RabbitProperties)</span></span><br><span class="line"><span class="meta">spring.rabbitmq.addresses</span>= <span class="string"># Comma-separated list of addresses to which the client should connect.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.cache.channel.checkout-timeout</span>= <span class="string"># Number of milliseconds to wait to obtain a channel if the cache size has been reached.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.cache.channel.size</span>= <span class="string"># Number of channels to retain in the cache.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.cache.connection.mode</span>=<span class="string">channel # Connection factory cache mode.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.cache.connection.size</span>= <span class="string"># Number of connections to cache.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.connection-timeout</span>= <span class="string"># Connection timeout, in milliseconds; zero for infinite.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.dynamic</span>=<span class="string">true # Create an AmqpAdmin bean.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.host</span>=<span class="string">localhost # RabbitMQ host.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.acknowledge-mode</span>= <span class="string"># Acknowledge mode of container.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.auto-startup</span>=<span class="string">true # Start the container automatically on startup.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.concurrency</span>= <span class="string"># Minimum number of consumers.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.default-requeue-rejected</span>= <span class="string"># Whether or not to requeue delivery failures; default `true`.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.idle-event-interval</span>= <span class="string"># How often idle container events should be published in milliseconds.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.max-concurrency</span>= <span class="string"># Maximum number of consumers.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.prefetch</span>= <span class="string"># Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.retry.enabled</span>=<span class="string">false # Whether or not publishing retries are enabled.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.retry.initial-interval</span>=<span class="string">1000 # Interval between the first and second attempt to deliver a message.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.retry.max-attempts</span>=<span class="string">3 # Maximum number of attempts to deliver a message.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.retry.max-interval</span>=<span class="string">10000 # Maximum interval between attempts.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.retry.multiplier</span>=<span class="string">1.0 # A multiplier to apply to the previous delivery retry interval.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.retry.stateless</span>=<span class="string">true # Whether or not retry is stateless or stateful.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.listener.simple.transaction-size</span>= <span class="string"># Number of messages to be processed in a transaction. For best results it should be less than or equal to the prefetch count.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.password</span>= <span class="string"># Login to authenticate against the broker.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.port</span>=<span class="string">5672 # RabbitMQ port.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.publisher-confirms</span>=<span class="string">false # Enable publisher confirms.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.publisher-returns</span>=<span class="string">false # Enable publisher returns.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.requested-heartbeat</span>= <span class="string"># Requested heartbeat timeout, in seconds; zero for none.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.ssl.enabled</span>=<span class="string">false # Enable SSL support.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.ssl.key-store</span>= <span class="string"># Path to the key store that holds the SSL certificate.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.ssl.key-store-password</span>= <span class="string"># Password used to access the key store.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.ssl.trust-store</span>= <span class="string"># Trust store that holds SSL certificates.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.ssl.trust-store-password</span>= <span class="string"># Password used to access the trust store.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.ssl.algorithm</span>= <span class="string"># SSL algorithm to use. By default configure by the rabbit client library.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.mandatory</span>=<span class="string">false # Enable mandatory messages.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.receive-timeout</span>=<span class="string">0 # Timeout for `receive()` methods.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.reply-timeout</span>=<span class="string">5000 # Timeout for `sendAndReceive()` methods.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.retry.enabled</span>=<span class="string">false # Set to true to enable retries in the `RabbitTemplate`.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.retry.initial-interval</span>=<span class="string">1000 # Interval between the first and second attempt to publish a message.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.retry.max-attempts</span>=<span class="string">3 # Maximum number of attempts to publish a message.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.retry.max-interval</span>=<span class="string">10000 # Maximum number of attempts to publish a message.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.template.retry.multiplier</span>=<span class="string">1.0 # A multiplier to apply to the previous publishing retry interval.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.username</span>= <span class="string"># Login user to authenticate to the broker.</span></span><br><span class="line"><span class="meta">spring.rabbitmq.virtual-host</span>= <span class="string"># Virtual host to use when connecting to the broker.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># ACTUATOR PROPERTIES</span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ENDPOINTS (AbstractEndpoint subclasses)</span></span><br><span class="line"><span class="meta">endpoints.enabled</span>=<span class="string">true # Enable endpoints.</span></span><br><span class="line"><span class="meta">endpoints.sensitive</span>= <span class="string"># Default endpoint sensitive setting.</span></span><br><span class="line"><span class="meta">endpoints.actuator.enabled</span>=<span class="string">true # Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.actuator.path</span>= <span class="string"># Endpoint URL path.</span></span><br><span class="line"><span class="meta">endpoints.actuator.sensitive</span>=<span class="string">false # Enable security on the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.auditevents.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.auditevents.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.auditevents.sensitive</span>=<span class="string">false # Enable security on the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.autoconfig.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.autoconfig.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.autoconfig.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.autoconfig.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.beans.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.beans.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.beans.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.beans.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.configprops.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.configprops.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.configprops.keys-to-sanitize</span>=<span class="string">password,secret,key,token,.*credentials.*,vcap_services,sun.java.command # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</span></span><br><span class="line"><span class="meta">endpoints.configprops.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.configprops.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.docs.curies.enabled</span>=<span class="string">false # Enable the curie generation.</span></span><br><span class="line"><span class="meta">endpoints.docs.enabled</span>=<span class="string">true # Enable actuator docs endpoint.</span></span><br><span class="line"><span class="meta">endpoints.docs.path</span>=<span class="string">/docs #</span></span><br><span class="line"><span class="meta">endpoints.docs.sensitive</span>=<span class="string">false #</span></span><br><span class="line"><span class="meta">endpoints.dump.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.dump.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.dump.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.dump.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.env.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.env.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.env.keys-to-sanitize</span>=<span class="string">password,secret,key,token,.*credentials.*,vcap_services,sun.java.command # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</span></span><br><span class="line"><span class="meta">endpoints.env.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.env.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.flyway.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.flyway.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.flyway.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.health.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.health.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.health.mapping.*</span>= <span class="string"># Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (i.e. UP maps to 200).</span></span><br><span class="line"><span class="meta">endpoints.health.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.health.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.health.time-to-live</span>=<span class="string">1000 # Time to live for cached result, in milliseconds.</span></span><br><span class="line"><span class="meta">endpoints.heapdump.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.heapdump.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.heapdump.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.hypermedia.enabled</span>=<span class="string">false # Enable hypermedia support for endpoints.</span></span><br><span class="line"><span class="meta">endpoints.info.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.info.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.info.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.info.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.jolokia.enabled</span>=<span class="string">true # Enable Jolokia endpoint.</span></span><br><span class="line"><span class="meta">endpoints.jolokia.path</span>=<span class="string">/jolokia # Endpoint URL path.</span></span><br><span class="line"><span class="meta">endpoints.jolokia.sensitive</span>=<span class="string">true # Enable security on the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.liquibase.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.liquibase.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.liquibase.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.logfile.enabled</span>=<span class="string">true # Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.logfile.external-file</span>= <span class="string"># External Logfile to be accessed.</span></span><br><span class="line"><span class="meta">endpoints.logfile.path</span>=<span class="string">/logfile # Endpoint URL path.</span></span><br><span class="line"><span class="meta">endpoints.logfile.sensitive</span>=<span class="string">true # Enable security on the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.loggers.enabled</span>=<span class="string">true # Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.loggers.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.loggers.path</span>=<span class="string">/logfile # Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.loggers.sensitive</span>=<span class="string">true # Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.mappings.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.mappings.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.mappings.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.mappings.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.metrics.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.metrics.filter.enabled</span>=<span class="string">true # Enable the metrics servlet filter.</span></span><br><span class="line"><span class="meta">endpoints.metrics.filter.gauge-submissions</span>=<span class="string">merged # Http filter gauge submissions (merged, per-http-method)</span></span><br><span class="line"><span class="meta">endpoints.metrics.filter.counter-submissions</span>=<span class="string">merged # Http filter counter submissions (merged, per-http-method)</span></span><br><span class="line"><span class="meta">endpoints.metrics.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.metrics.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.metrics.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.shutdown.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.shutdown.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.shutdown.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.shutdown.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="meta">endpoints.trace.enabled</span>= <span class="string"># Enable the endpoint.</span></span><br><span class="line"><span class="meta">endpoints.trace.filter.enabled</span>=<span class="string">true # Enable the trace servlet filter.</span></span><br><span class="line"><span class="meta">endpoints.trace.id</span>= <span class="string"># Endpoint identifier.</span></span><br><span class="line"><span class="meta">endpoints.trace.path</span>= <span class="string"># Endpoint path.</span></span><br><span class="line"><span class="meta">endpoints.trace.sensitive</span>= <span class="string"># Mark if the endpoint exposes sensitive information.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ENDPOINTS CORS CONFIGURATION (EndpointCorsProperties)</span></span><br><span class="line"><span class="meta">endpoints.cors.allow-credentials</span>= <span class="string"># Set whether credentials are supported. When not set, credentials are not supported.</span></span><br><span class="line"><span class="meta">endpoints.cors.allowed-headers</span>= <span class="string"># Comma-separated list of headers to allow in a request. &#x27;*&#x27; allows all headers.</span></span><br><span class="line"><span class="meta">endpoints.cors.allowed-methods</span>=<span class="string">GET # Comma-separated list of methods to allow. &#x27;*&#x27; allows all methods.</span></span><br><span class="line"><span class="meta">endpoints.cors.allowed-origins</span>= <span class="string"># Comma-separated list of origins to allow. &#x27;*&#x27; allows all origins. When not set, CORS support is disabled.</span></span><br><span class="line"><span class="meta">endpoints.cors.exposed-headers</span>= <span class="string"># Comma-separated list of headers to include in a response.</span></span><br><span class="line"><span class="meta">endpoints.cors.max-age</span>=<span class="string">1800 # How long, in seconds, the response from a pre-flight request can be cached by clients.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JMX ENDPOINT (EndpointMBeanExportProperties)</span></span><br><span class="line"><span class="meta">endpoints.jmx.domain</span>= <span class="string"># JMX domain name. Initialized with the value of &#x27;spring.jmx.default-domain&#x27; if set.</span></span><br><span class="line"><span class="meta">endpoints.jmx.enabled</span>=<span class="string">true # Enable JMX export of all endpoints.</span></span><br><span class="line"><span class="meta">endpoints.jmx.static-names</span>= <span class="string"># Additional static properties to append to all ObjectNames of MBeans representing Endpoints.</span></span><br><span class="line"><span class="meta">endpoints.jmx.unique-names</span>=<span class="string">false # Ensure that ObjectNames are modified in case of conflict.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JOLOKIA (JolokiaProperties)</span></span><br><span class="line"><span class="meta">jolokia.config.*</span>= <span class="string"># See Jolokia manual</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MANAGEMENT HTTP SERVER (ManagementServerProperties)</span></span><br><span class="line"><span class="meta">management.add-application-context-header</span>=<span class="string">true # Add the &quot;X-Application-Context&quot; HTTP header in each response.</span></span><br><span class="line"><span class="meta">management.address</span>= <span class="string"># Network address that the management endpoints should bind to.</span></span><br><span class="line"><span class="meta">management.context-path</span>= <span class="string"># Management endpoint context-path. For instance `/actuator`</span></span><br><span class="line"><span class="meta">management.cloudfoundry.enabled</span>= <span class="string"># Enable extended Cloud Foundry actuator endpoints</span></span><br><span class="line"><span class="meta">management.cloudfoundry.skip-ssl-validation</span>= <span class="string"># Skip SSL verification for Cloud Foundry actuator endpoint security calls</span></span><br><span class="line"><span class="meta">management.port</span>= <span class="string"># Management endpoint HTTP port. Uses the same port as the application by default. Configure a different port to use management-specific SSL.</span></span><br><span class="line"><span class="meta">management.security.enabled</span>=<span class="string">true # Enable security.</span></span><br><span class="line"><span class="meta">management.security.roles</span>=<span class="string">ACTUATOR # Comma-separated list of roles that can access the management endpoint.</span></span><br><span class="line"><span class="meta">management.security.sessions</span>=<span class="string">stateless # Session creating policy to use (always, never, if_required, stateless).</span></span><br><span class="line"><span class="meta">management.ssl.ciphers</span>= <span class="string"># Supported SSL ciphers. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.client-auth</span>= <span class="string"># Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.enabled</span>= <span class="string"># Enable SSL support. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.enabled-protocols</span>= <span class="string"># Enabled SSL protocols. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.key-alias</span>= <span class="string"># Alias that identifies the key in the key store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.key-password</span>= <span class="string"># Password used to access the key in the key store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.key-store</span>= <span class="string"># Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.key-store-password</span>= <span class="string"># Password used to access the key store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.key-store-provider</span>= <span class="string"># Provider for the key store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.key-store-type</span>= <span class="string"># Type of the key store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.protocol</span>=<span class="string">TLS # SSL protocol to use. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.trust-store</span>= <span class="string"># Trust store that holds SSL certificates. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.trust-store-password</span>= <span class="string"># Password used to access the trust store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.trust-store-provider</span>= <span class="string"># Provider for the trust store. Requires a custom management.port.</span></span><br><span class="line"><span class="meta">management.ssl.trust-store-type</span>= <span class="string"># Type of the trust store. Requires a custom management.port.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># HEALTH INDICATORS</span></span><br><span class="line"><span class="meta">management.health.db.enabled</span>=<span class="string">true # Enable database health check.</span></span><br><span class="line"><span class="meta">management.health.cassandra.enabled</span>=<span class="string">true # Enable cassandra health check.</span></span><br><span class="line"><span class="meta">management.health.couchbase.enabled</span>=<span class="string">true # Enable couchbase health check.</span></span><br><span class="line"><span class="meta">management.health.defaults.enabled</span>=<span class="string">true # Enable default health indicators.</span></span><br><span class="line"><span class="meta">management.health.diskspace.enabled</span>=<span class="string">true # Enable disk space health check.</span></span><br><span class="line"><span class="meta">management.health.diskspace.path</span>= <span class="string"># Path used to compute the available disk space.</span></span><br><span class="line"><span class="meta">management.health.diskspace.threshold</span>=<span class="string">0 # Minimum disk space that should be available, in bytes.</span></span><br><span class="line"><span class="meta">management.health.elasticsearch.enabled</span>=<span class="string">true # Enable elasticsearch health check.</span></span><br><span class="line"><span class="meta">management.health.elasticsearch.indices</span>= <span class="string"># Comma-separated index names.</span></span><br><span class="line"><span class="meta">management.health.elasticsearch.response-timeout</span>=<span class="string">100 # The time, in milliseconds, to wait for a response from the cluster.</span></span><br><span class="line"><span class="meta">management.health.jms.enabled</span>=<span class="string">true # Enable JMS health check.</span></span><br><span class="line"><span class="meta">management.health.ldap.enabled</span>=<span class="string">true # Enable LDAP health check.</span></span><br><span class="line"><span class="meta">management.health.mail.enabled</span>=<span class="string">true # Enable Mail health check.</span></span><br><span class="line"><span class="meta">management.health.mongo.enabled</span>=<span class="string">true # Enable MongoDB health check.</span></span><br><span class="line"><span class="meta">management.health.rabbit.enabled</span>=<span class="string">true # Enable RabbitMQ health check.</span></span><br><span class="line"><span class="meta">management.health.redis.enabled</span>=<span class="string">true # Enable Redis health check.</span></span><br><span class="line"><span class="meta">management.health.solr.enabled</span>=<span class="string">true # Enable Solr health check.</span></span><br><span class="line"><span class="meta">management.health.status.order</span>=<span class="string">DOWN, OUT_OF_SERVICE, UP, UNKNOWN # Comma-separated list of health statuses in order of severity.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># INFO CONTRIBUTORS (InfoContributorProperties)</span></span><br><span class="line"><span class="meta">management.info.build.enabled</span>=<span class="string">true # Enable build info.</span></span><br><span class="line"><span class="meta">management.info.defaults.enabled</span>=<span class="string">true # Enable default info contributors.</span></span><br><span class="line"><span class="meta">management.info.env.enabled</span>=<span class="string">true # Enable environment info.</span></span><br><span class="line"><span class="meta">management.info.git.enabled</span>=<span class="string">true # Enable git info.</span></span><br><span class="line"><span class="meta">management.info.git.mode</span>=<span class="string">simple # Mode to use to expose git information.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># REMOTE SHELL (ShellProperties)</span></span><br><span class="line"><span class="meta">management.shell.auth.type</span>=<span class="string">simple # Authentication type. Auto-detected according to the environment.</span></span><br><span class="line"><span class="meta">management.shell.auth.jaas.domain</span>=<span class="string">my-domain # JAAS domain.</span></span><br><span class="line"><span class="meta">management.shell.auth.key.path</span>= <span class="string"># Path to the authentication key. This should point to a valid &quot;.pem&quot; file.</span></span><br><span class="line"><span class="meta">management.shell.auth.simple.user.name</span>=<span class="string">user # Login user.</span></span><br><span class="line"><span class="meta">management.shell.auth.simple.user.password</span>= <span class="string"># Login password.</span></span><br><span class="line"><span class="meta">management.shell.auth.spring.roles</span>=<span class="string">ACTUATOR # Comma-separated list of required roles to login to the CRaSH console.</span></span><br><span class="line"><span class="meta">management.shell.command-path-patterns</span>=<span class="string">classpath*:/commands/**,classpath*:/crash/commands/** # Patterns to use to look for commands.</span></span><br><span class="line"><span class="meta">management.shell.command-refresh-interval</span>=<span class="string">-1 # Scan for changes and update the command if necessary (in seconds).</span></span><br><span class="line"><span class="meta">management.shell.config-path-patterns</span>=<span class="string">classpath*:/crash/* # Patterns to use to look for configurations.</span></span><br><span class="line"><span class="meta">management.shell.disabled-commands</span>=<span class="string">jpa*,jdbc*,jndi* # Comma-separated list of commands to disable.</span></span><br><span class="line"><span class="meta">management.shell.disabled-plugins</span>= <span class="string"># Comma-separated list of plugins to disable. Certain plugins are disabled by default based on the environment.</span></span><br><span class="line"><span class="meta">management.shell.ssh.auth-timeout</span> = <span class="string"># Number of milliseconds after user will be prompted to login again.</span></span><br><span class="line"><span class="meta">management.shell.ssh.enabled</span>=<span class="string">true # Enable CRaSH SSH support.</span></span><br><span class="line"><span class="meta">management.shell.ssh.idle-timeout</span> = <span class="string"># Number of milliseconds after which unused connections are closed.</span></span><br><span class="line"><span class="meta">management.shell.ssh.key-path</span>= <span class="string"># Path to the SSH server key.</span></span><br><span class="line"><span class="meta">management.shell.ssh.port</span>=<span class="string">2000 # SSH port.</span></span><br><span class="line"><span class="meta">management.shell.telnet.enabled</span>=<span class="string">false # Enable CRaSH telnet support. Enabled by default if the TelnetPlugin is available.</span></span><br><span class="line"><span class="meta">management.shell.telnet.port</span>=<span class="string">5000 # Telnet port.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># TRACING (TraceProperties)</span></span><br><span class="line"><span class="meta">management.trace.include</span>=<span class="string">request-headers,response-headers,cookies,errors # Items to be included in the trace.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># METRICS EXPORT (MetricExportProperties)</span></span><br><span class="line"><span class="meta">spring.metrics.export.aggregate.key-pattern</span>= <span class="string"># Pattern that tells the aggregator what to do with the keys from the source repository.</span></span><br><span class="line"><span class="meta">spring.metrics.export.aggregate.prefix</span>= <span class="string"># Prefix for global repository if active.</span></span><br><span class="line"><span class="meta">spring.metrics.export.delay-millis</span>=<span class="string">5000 # Delay in milliseconds between export ticks. Metrics are exported to external sources on a schedule with this delay.</span></span><br><span class="line"><span class="meta">spring.metrics.export.enabled</span>=<span class="string">true # Flag to enable metric export (assuming a MetricWriter is available).</span></span><br><span class="line"><span class="meta">spring.metrics.export.excludes</span>= <span class="string"># List of patterns for metric names to exclude. Applied after the includes.</span></span><br><span class="line"><span class="meta">spring.metrics.export.includes</span>= <span class="string"># List of patterns for metric names to include.</span></span><br><span class="line"><span class="meta">spring.metrics.export.redis.key</span>=<span class="string">keys.spring.metrics # Key for redis repository export (if active).</span></span><br><span class="line"><span class="meta">spring.metrics.export.redis.prefix</span>=<span class="string">spring.metrics # Prefix for redis repository if active.</span></span><br><span class="line"><span class="meta">spring.metrics.export.send-latest</span>= <span class="string"># Flag to switch off any available optimizations based on not exporting unchanged metric values.</span></span><br><span class="line"><span class="meta">spring.metrics.export.statsd.host</span>= <span class="string"># Host of a statsd server to receive exported metrics.</span></span><br><span class="line"><span class="meta">spring.metrics.export.statsd.port</span>=<span class="string">8125 # Port of a statsd server to receive exported metrics.</span></span><br><span class="line"><span class="meta">spring.metrics.export.statsd.prefix</span>= <span class="string"># Prefix for statsd exported metrics.</span></span><br><span class="line"><span class="meta">spring.metrics.export.triggers.*</span>= <span class="string"># Specific trigger properties per MetricWriter bean name.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"><span class="comment"># TESTING PROPERTIES</span></span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.test.database.replace</span>=<span class="string">any # Type of existing DataSource to replace.</span></span><br><span class="line"><span class="meta">spring.test.mockmvc.print</span>=<span class="string">default # MVC Print option.</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>angular-问题记录</title>
    <url>/js/angular-tips/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="angular-问题记录"><a href="#angular-问题记录" class="headerlink" title="angular-问题记录"></a>angular-问题记录</h1><h2 id="数据绑定没有即时生效"><a href="#数据绑定没有即时生效" class="headerlink" title="数据绑定没有即时生效"></a>数据绑定没有即时生效</h2><p>alias： 数据绑定没有及时生效</p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>页面初始化时，使用 ajax 调用接口，将返回值绑定到 ng model 上，但是并没有及时渲染到页面上，<br>而是在触发任意一个 ng click 时，数据才会渲染。</p>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>在绑定语句后，加上：<code>$scope.$apply();</code>，作用是手动通知页面update绑定的数据</p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>ajax 是外部函数，且我们都知道请求响应是通过回调函数，这个时候ajax 的 success() 方法超出了<br>angular作用域范围，所以数据绑定没有立即生效。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://www.cnblogs.com/zhrj000/p/3383898.html">https://www.cnblogs.com/zhrj000/p/3383898.html</a></li>
<li><a href="http://jimhoskins.com/2012/12/17/angularjs-and-apply.html">http://jimhoskins.com/2012/12/17/angularjs-and-apply.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>angular</tag>
        <tag>angularjs</tag>
      </tags>
  </entry>
  <entry>
    <title>【cas】tips</title>
    <url>/cas/cas-tips/</url>
    <content><![CDATA[<h1 id="CAS-Q-amp-A"><a href="#CAS-Q-amp-A" class="headerlink" title="CAS Q&amp;A"></a>CAS Q&amp;A</h1><h2 id="OAuthCredentialsException-State-parameter-mismatch-session-expired-or-possible-threat-of-cross-site-request-forgery"><a href="#OAuthCredentialsException-State-parameter-mismatch-session-expired-or-possible-threat-of-cross-site-request-forgery" class="headerlink" title="OAuthCredentialsException: State parameter mismatch: session expired or possible threat of cross-site request forgery"></a>OAuthCredentialsException: State parameter mismatch: session expired or possible threat of cross-site request forgery</h2><p>CAS升级到6之后，突然出现这个异常</p>
<p>解决：</p>
<p><code>cas.authn.pac4j.replicateSessions: false</code></p>
<p>这个属性的作用还没研究</p>
<p>参考：<a href="https://stackoverflow.com/questions/59659637/cas-6-1-state-parameter-null-with-pac4j">https://stackoverflow.com/questions/59659637/cas-6-1-state-parameter-null-with-pac4j</a></p>
]]></content>
      <tags>
        <tag>Q&amp;A</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】如何写一篇可实施的技术方案？</title>
    <url>/architecture/how-to-write-an-enforceable-tech-proposal/</url>
    <content><![CDATA[<blockquote>
<p>这篇文章介绍的<strong>技术方案</strong>比较详细，适合用于交付项目（乙方交付给甲方），<br>如果是一般企业，只是汇报给领导，不需要很详细，可选其中领导主要关注的地方写即可。</p>
<blockquote>
<p>一般只需（_背景、目标、现有业务分析、系统整体架构_）</p>
</blockquote>
</blockquote>
<h2 id="为何要写这篇博文？"><a href="#为何要写这篇博文？" class="headerlink" title="为何要写这篇博文？"></a>为何要写这篇博文？</h2><p>在日常开发中，老大经常要求我们给出一个完善并合理的技术方案之后才能进行开发。并且要求技术方案一定要细，要重点覆盖监控、异常处理、灰度、降级方案。同时要注重边界处理。最初，我的技术方案写的很粗，也没有理解老大说的边界处理到底是怎么一回事。于是乎，辛辛苦苦写了一周的方案，就会在技术方案评审的时候直接打回重做，甚至多次打回。<br>不过还好，在经历过几次大项目的方案设计后，我的方案设计越来越完善，直到最后老大非常认可并在组内进行参考。随着我的方案设计逐渐完善，也逐渐发现，不但编码效率越来越高，编码时思维更加清晰，而且方案中的每一个模块都贯穿了整个软件生命周期。</p>
<p><img src= "/img/loading.gif" data-src="https://raw.githubusercontent.com/JPCui/jpcui.github.io/gh-pages/assets/architecture/how-to-write-an-enforceable-tech-proposal-01.png" alt="how-to-write-an-enforceable-tech-proposal-01.png"></p>
<p>在这里我会总结以往方案设计，给出一个方案设计模板，并给出模板中每一个模块的具体说明和案例，同时介绍如何通过领域驱动设计的思想拆分业务逻辑引入到这个设计模板中。<br>这一切看起来可能很枯燥乏味，但如果你认真读下去我想会对你有所帮助。<br>如果你在一个垃圾公司做的项目从来没上过线，或者上线就崩溃，可以认真看看，一个大流量、高稳定性的系统是如何实现的。<br>如果你有更好的方案设计，欢迎留言讨论，或者喷我。让我能够更加完善我的设计，谢谢！</p>
<h2 id="一个错误的方案设计"><a href="#一个错误的方案设计" class="headerlink" title="一个错误的方案设计"></a>一个错误的方案设计</h2><p>在说如何编写一个好的技术方案之前，先说说一个错误的方案。<br>其实要说错误的方案设计是什么样子的，是很难界定出来的。错误可能有很多点，导致的后果也是不同的。比如：</p>
<ul>
<li><p>技术方案设计的比较粗，给出了架构设计图，但没有表述清楚架构层次、模块关系、边界等，可能表面上看着没什么，但是当真正开始实施起来，发现：</p>
<ul>
<li>代码职责混乱（比如controller层写业务代码）</li>
<li>模块关系混乱（比如用户服务中调用了订单服务用来显示用户买了什么订单，而订单服务又调用了用户服务显示订单中的收获地址）</li>
<li>边界混乱（用户服务中写了订单服务的代码，订单服务中写了用户服务的代码）</li>
</ul>
</li>
<li><p>技术方案没有横向对比，没有对以往的业务进行review，没有对技术选型进行业内调研和对比。这时候会发现：</p>
<ul>
<li>修改的代码导致以往的业务无法兼容，出现不可预知的bug</li>
<li>用到的基础技术在某个环节无法支撑你的变更，只能重新选型</li>
</ul>
</li>
<li><p>没有异常处理方案，在代码开发完成后，虽然有QA保证质量。但是实际生产情况总会出现异常情况（网络抖动、用户违法输入、中间件或底层存储崩溃、依赖服务挂掉），在上线后会发现：</p>
<ul>
<li>网络抖动数据写入失败，业务请求的数据丢失，要赔偿用户的损失</li>
<li>用户违法输入，产生了sql注入，一切凉凉</li>
<li>中间件或存储崩溃，业务彻底中断，一切凉凉</li>
<li>依赖服务挂掉，业务彻底中断，一切凉凉</li>
</ul>
</li>
<li><p>没有灰度方案，没有降级方案，异常没有报警，在代码跑了一段时间会发现：</p>
<ul>
<li>a. 没有灰度，在某种场景QA没有覆盖到，线上用户操作突然触发了，导致大量数据错误甚至全量数据错误</li>
<li>b. 没有降级，随着用户数据逐渐增多，虽然底层存储性能已经足够高了，但还会出现慢sql、大表等问题，一个耗费很高性能的sql查询拖死整个业务线，最终业务不可用</li>
<li>c. 异常没有报警，光有日志输出不够，大量的日志会把某一个小问题的error日志覆盖掉，导致小问题被扩大</li>
</ul>
</li>
<li><p>没有存储设计，或者给出的存储结构很粗，在开发时再进行补救，会发现：</p>
<ul>
<li>a. 存储结构越加越多，最后逐渐不可控</li>
<li>b. 发版时，一些建表语句后面加的字段忘记加上去了，导致发版失败或业务请求失败（这个问题也可能出现在消息队列、动态配置文件或配置中心）</li>
</ul>
</li>
<li><p>没有容量预估，没有流量预估，很多人在测试阶段不会进行流量上的压测和容量上的压测，上线之后会发现：</p>
<ul>
<li>a. 老板拉来投资了，砸钱引流服务撑不住了，横向扩容达到瓶颈（注意：不是加机器就能解决问题的，不信？自己压测试试）</li>
<li>b. ugc数据太多了，数据库很快就被打满了，打慢了，没有分库分表方案</li>
<li>c. 一个对象产生的太大了，流量多了内存被打爆了（实际发生过！800k的字符串100个线程就触发频繁gc，引用hang死！）</li>
</ul>
</li>
</ul>
<h2 id="重点是什么？"><a href="#重点是什么？" class="headerlink" title="重点是什么？"></a>重点是什么？</h2><p>好吧，上面说了那么多问题，接下来应该说说如何写好一个方案设计了。直接敲黑板说重点！个人认为一个好的方案设计就是为了完全避免上面的那些问题而设计的。所以重点就在于：</p>
<ol>
<li>技术方案要细，尤其注重<strong>模块（职责明确的模块或者组件）、关系（组件间明确的关联关系）、边界（约束和指导原则）</strong>。可以借助领域驱动设计（DDD）利器进行设计，本质上领域驱动设计的整个思想应该贯穿于整个方案设计中。</li>
<li>要对比业内的方案和选型，分析以往业务产生的效果和方案的优缺点。确定背景和目标，用于指导整个方案设计，防止方案的腐化、跑偏。</li>
<li>业务功能模块要进行详细设计，给出流程图、领域模型建模过程、领域对象等。每个模块的详细设计中可包含伪代码、特殊问题说明、注意事项。</li>
<li>考虑所有可能出现的异常情况，读流程是否可降级为不展示，写流程是否可有备选通道支持（比如MQ和接口双通道）。对于抖动、依赖服务短时间崩溃要考虑重试机制。对服务内部异常，要考虑给调用者一个合理可接受的返回值，调用者可根据实际情况进行重试、异常提示等。对核心链路的异常要有及时报警（短信、邮件、电话、IM消息等）。</li>
<li>永远考虑最差情况，要知道什么是墨菲定理。所以要有降级方案（自动降级、人工降级），当然降级不是万事大吉的，要考虑降级是否对主流程产生影响，对数据是否产生影响，区分有损降级和无损降级。若有损产生了数据异常，则要考虑数据的修复。</li>
<li>实现灰度，还是永远考虑最差的情况，灰度能够控制你的异常影响范围最低，出现异常你修复数据也会最少。方案要给出灰度周期，经验上灰度周期可分为：上线一周（20%的流量）、上线第二周（50%的流量）、上线第三周（100%的流量）。</li>
<li>给出存储设计，要涵盖所有存储（ES、MySQL、Redis、文件系统、CDN等等），给出详细的存储结构，如果你的存储结构给的很明细，通常在代码开发时不会变动很大，甚至没有变动。</li>
<li>给出流量预估和容量预估，预估你的存储占用大小（内存、持久化）、预估你的MQ高峰期流量、预估你的接口高峰期流量、预估你的一次请求Jvm内存对象占用的大小。如何预估Jvm内存对象的大小？改天写个blog说说这事。</li>
</ol>
<p>好了，这些都是重点。<br>不过你会发现，8个重点里4、5、6、7、8都是在考虑各种异常情况下的各种补救措施，<br>所以一个好的技术方案设计就是考虑到所有的异常情况。<br>同样，一个技术人，我觉得<strong>不是看看“阿里p8”在今日头条和QQ群里发的课程内容就能修炼成精的，</strong><br>经历了N多次的线上事故总结，并总结如何避免事故的发生，才是技术人应该做的。</p>
<p><img src= "/img/loading.gif" data-src="https://raw.githubusercontent.com/JPCui/jpcui.github.io/gh-pages/assets/architecture/how-to-write-an-enforceable-tech-proposal-02.png" alt="how-to-write-an-enforceable-tech-proposal-02.png"></p>
<h2 id="拿模板说说"><a href="#拿模板说说" class="headerlink" title="拿模板说说"></a>拿模板说说</h2><p>这里，给出一个我总结的技术方案设计模板，我会拿这个模板来说说如何做一个正确的方案设计。这个模板包含了上面说的所有重点项。如果你能够理解上面我所说的一切，利用好这套模板，拿出去吹nb是没什么问题的！</p>
<p>模板如下（忽略格式）：</p>
<ol>
<li><p>背景</p>
<p> 详细描述项目背景，简单说明以往业务带来的效果。给出为何要进行本次项目迭代的原因。</p>
</li>
<li><p>目标</p>
<p> 列出预计产出的业务指标（如：提升用户转化率30%）和技术指标（如：支撑多大QPS）。</p>
</li>
<li><p>现有业务分析</p>
<p> 现有业务分析中通常给出原有业务（本次基于原有业务迭代）或对比业内业务和技术的选型（新技术或原有业务迭代）。可以用表格列出原有业务和技术产生的效果、不足点，也可以用表格给出对比行业内多个现有方案的对比，写出每个方案的优缺点，以及是否与自己业务实际情况相匹配。<br>同时这里需要给出通用语言。</p>
</li>
<li><p>系统整体架构</p>
<p> 微服务提倡使用领域驱动设计的方式实现整体架构设计。将业务系统划分出核心域、支撑域、通用域。</p>
<p> 核心域：通常要投入的成本比较大，在做技术方案设计时可以主要强调核心域。</p>
<p> 通用域：可以引用通用域，在技术方案中进行简要的说明，给出如何依赖通用域，描述涉及到的调用关系以及如何调用的。</p>
<p> 支撑域：通常项目的开发也会涉及到围绕着核心域的支撑域，所以可以和核心域一样进行设计。如果支撑域是现成的，同样给出依赖关系以及如何调用。</p>
<p> <strong>业务模型</strong></p>
<p> 业务模型是领域驱动设计的核心，也是战略设计时必须圈定出来的。可以画图给出子域、边界上下文、聚合，可以用表格标记出事件风暴规划出的域、聚合根、边界上下文、驱动类型。从业务边界和业务角色两种给出模型图。</p>
<p> <img src= "/img/loading.gif" data-src="https://raw.githubusercontent.com/JPCui/jpcui.github.io/gh-pages/assets/architecture/how-to-write-an-enforceable-tech-proposal-03.png" alt="how-to-write-an-enforceable-tech-proposal-03.png"></p>
<p> <strong>整体架构</strong></p>
<p> 上面给出了业务模型，划分出各层边界，这里就可以通过一张图给出领域模型经典的四层模型，用箭头画出上下层的依赖关系。画图时用不同的图标和颜色区分出层次、模块、角色、基础服务。如果能够区分出读写事件和命令，那么可以用CQRS的模型做。<br> 画出图后，用适当的文字描述出关键模块、依赖关系、约束边界。</p>
<p> 如果你是在修改以前的架构，这里给出修改之前的架构和修改之后的对比图。</p>
<p> <img src= "/img/loading.gif" data-src="https://raw.githubusercontent.com/JPCui/jpcui.github.io/gh-pages/assets/architecture/how-to-write-an-enforceable-tech-proposal-04.png" alt="how-to-write-an-enforceable-tech-proposal-04.png"></p>
</li>
<li><p>详细设计</p>
<p> 进入详细设计，就要给出详细的流程图，并用文字描述出流程。用表格给出实体、值对象、域内服务，架构层面做了CQRS的话，这里明确出给出CQRS的职责。</p>
<p> <strong>xxx实体/域内服务</strong></p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|  属性  |	类型 |	备注  |</span><br></pre></td></tr></table></figure>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|  方法名  |	出参 |	入参  |</span><br></pre></td></tr></table></figure>
<p> <strong>xxx值对象</strong></p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 属性 |	类型 |	备注 |</span><br></pre></td></tr></table></figure>
<p> 如果你是<strong>流程改造</strong>，要给出<strong>原有流程和现有流程的对比。</strong><br> <strong>若原有流程产生过问题，这里可以给出问题现象、原因，来证明新的流程进行优化原有流程。</strong><br> 对于关键部分可以给出伪代码，关键说明要用比较明显的字体样式。</p>
</li>
<li><p>存储设计</p>
<p> 用表格的形式给出存储结构（包括MySQL、ES、Redis等），说明Schema、字段类型、默认值、描述信息等。</p>
<p> 表/索引xxx</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 字段名 |	字段类型 |	默认值 |	是否可空 |	备注 |</span><br></pre></td></tr></table></figure>
</li>
<li><p>灰度方案</p>
<p> 如果你的公司有灰度条件的话（业务有一定流量），用表格给出灰度范围、配置灰度开关的参数、灰度周期。灰度的三个周期：</p>
<ol>
<li>第一周：20%流量，比如某些二三线城市</li>
<li>第二周：50%流量，比如一些一线城市+二线城市</li>
<li>第三周：100%流量，比如全国</li>
</ol>
<p> 灰度可以让你在及时出现bug的情况下损失降到最低。</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 模块 |	灰度维度 |	配置变更 |	灰度周期（1） |	灰度周期（2） |	灰度周期（3） |</span><br></pre></td></tr></table></figure></li>
<li><p>降级方案</p>
<p> 及时通过灰度跑了很长时间，也不能100%保证你的代码是没有问题的。通常一个业务刚上线很稳定，但是随着时间的推移问题逐渐暴露，原因可能有很多：</p>
<ol>
<li>数据量积累大了，业务响应能力降低</li>
<li>流量积累大了，现有计算力不够（并不是横向扩容就能解决的）</li>
<li>用户操作花样倍出，防不胜防</li>
<li>依赖的服务逐渐不稳定（包括网络、基础设施等）</li>
</ol>
<p> 所以降级方案是必须要有的，防止出现问题之后没有退路。<br> 降级方案可以说是一个长期的及时止损方案，灰度是一个短期的及时止损方案。</p>
<p> 降级方案用表格给出业务模块或接口、降级方式（自动、手动）、降级是否对主要业务流程有损失、若有损失修复方案。在设计降级方案时，一定要与产品、测试、业务人员进行充分沟通，说明降级方案，一起讨论可行性。</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 模块 |	主流程 |	是否可降级 |	降级流程 |	是否有损（对主流程） |	备注 |</span><br></pre></td></tr></table></figure></li>
<li><p>异常处理</p>
<p> 有了降级方案依然不能代表你的业务会100%可靠。完成功能谁都可以，但是能把所有异常情况都考虑到，是最难的。没有人能考虑到所有异常，但是只要考虑到，总会让你的业务更可靠一点。</p>
<p> 异常处理也是需要通过表格，主要写明以下几个阶段：</p>
<ol>
<li>异常出现阶段：给出异常情况</li>
<li>异常处理阶段：是否可以降级，修复异常方案（精确写出处理流程，有必要的话给出流程图）</li>
<li>异常恢复阶段：给出带来的损失以及数据如何修复</li>
</ol>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 模块	异常情景	处理流程	降级方案	损失与数据恢复 |</span><br></pre></td></tr></table></figure></li>
<li><p>容量预估</p>
<p>容量预估里包含了流量预估，这一部分是可以保证你的业务不会在极端情况下压垮（大数据量、高并发）。</p>
<p><strong>流量预估</strong></p>
<p>用表格的形式给出你的接口平均QPS、峰值QPS、接口请求和返回报文大小，消息队列的平均消息数、峰值消息数、报文大小。</p>
<p>这一部分如果是改动的业务，可以参考以前的监控，如果是新业务一定要拉运营、产品确定业务量。若预估峰值会很高，一定要进行压测。</p>
<p>如下表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 模块	接口/Topic	报文大小	上线一周	上线一个月	上线半年	上线一年 |</span><br></pre></td></tr></table></figure>
<p><strong>容量预估</strong></p>
<p>列出表格，指定业务模块，给出你用到的所有存储在一段时间的数据量增长：</p>
<ol>
<li>上线一周：评估灰度时会产生的数据量，有助于推导出后续产生的数据量</li>
<li>上线一个月：此时已经稳定的全量跑了一个月，如果业务比较火爆，这个时候产生的数据量足以计算出半年和一年的数据量</li>
<li>上线半年：如果你的业务并不火爆，半年的数据量基本是定型了。你的业务未来发展也不会增长太多。但是如果你的数据量预估是一个比较大的值，就要考虑方案是不是可以扛得住这个数据量。</li>
<li>上线一年：这个时候随着数据量的积累，可能会暴露出一些问题。需要考虑你的方案在每个细节方面是否可靠了。</li>
</ol>
<p>这里有一个需要注意的，并不是只是评估存储大小就够了，如果预估你的流量很大，一定要精确计算出你的一个请求过程产生的对象大小，防止应用服务被频繁gc Hang死。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 模块	表/索引	上线一周	上线一个月	上线半年	上线一年 |</span><br></pre></td></tr></table></figure></li>
<li><p>监控报警</p>
<p>上面的一切做完，依然不完美，出现问题要及时的发现，有一个nb的监控策略是很重要的。这里要用表格的形式给出关键模块或接口的异常报警形式（短信、邮件、IM、电话等），给出核心的业务指标和非业务指标（QPS、响应耗时、消息积压数等），指标出现异常（低于某个阈值）要进行报警。如果有监控系统可以接入，给出需要接入的指标参数。<br>如下表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 模块	指标	阈值	报警形式 |</span><br></pre></td></tr></table></figure></li>
<li><p>参考文档</p>
<p>给出产品设计文档、需求文档、以往的方案设计文档、接口文档、依赖基础组件或服务的说明文档。给出文档链接或附件，方便review的过程中直接打开看。</p>
</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>写技术方案是个漫长的过程，是个细致活，通常要至少三天，一周甚至一周多的时间。技术方案写的越完善，可靠和可行性越强。</p>
<p>技术方案除了考虑功能性设计、架构，要多关注应急方案，关注可靠性。</p>
<p>可以用大量的图和少量的文字来实现技术方案。</p>
<p>技术方案完成后要找多人进行review。</p>
<p>业务性较强，拆分微服务，用DDD的思想进行设计会很有效果。</p>
<p>如果开发过程中技术方案有变更，一定记得及时修改，维护好这份技术方案，是面试吹nb的本钱，也是为后来人做准备。</p>
<p>这里谈的是一个可实施的技术方案，并不是交付给客户和糊弄国家项目的吹nb方案，客户一定不会喜欢这样的方案。</p>
<blockquote>
<p>2021年03月28日记：有很多人私信我要方案模板，写了一个新的文章，需要可自取：<br><a href="https://blog.csdn.net/kid_2412/article/details/115282680">https://blog.csdn.net/kid_2412/article/details/115282680</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>技术方案</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/ddd/ddd-qa/</url>
    <content><![CDATA[<h3 id="如何实现下单扣库存操作"><a href="#如何实现下单扣库存操作" class="headerlink" title="如何实现下单扣库存操作"></a>如何实现下单扣库存操作</h3><h4 id="先扣减库存"><a href="#先扣减库存" class="headerlink" title="先扣减库存"></a>先扣减库存</h4><p>扣减成功后，创建订单;</p>
<p>假如创建订单异常，需要归还库存</p>
<h4 id="先判断库存，然后创建订单"><a href="#先判断库存，然后创建订单" class="headerlink" title="先判断库存，然后创建订单"></a>先判断库存，然后创建订单</h4><p>先判断库存，如果库存足够，则创建订单，然后扣减库存，如果库存扣减失败，回滚创建；</p>
]]></content>
  </entry>
  <entry>
    <title>java-tips</title>
    <url>/java/java-tips/</url>
    <content><![CDATA[<h3 id="lt-Exception-encountered-during-context-initialization-cancelling-refresh-attempt-org-springframework-beans-factory-support-BeanDefinitionOverrideException-Invalid-bean-definition-with-name-‘xxx’-defined-in-class-path-resource-xxx"><a href="#lt-Exception-encountered-during-context-initialization-cancelling-refresh-attempt-org-springframework-beans-factory-support-BeanDefinitionOverrideException-Invalid-bean-definition-with-name-‘xxx’-defined-in-class-path-resource-xxx" class="headerlink" title="&lt;Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name ‘xxx’ defined in class path resource [xxx]"></a>&lt;Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name ‘xxx’ defined in class path resource [xxx]</h3><ul>
<li>问题</li>
</ul>
<p>&lt;Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name ‘xxx’ defined in class path resource [xxx]: Cannot register bean definition [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=redisTicketRegistryConfiguration; factoryMethodName=ticketRegistry; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apereo/cas/config/RedisTicketRegistryConfiguration.class]] for bean ‘scopedTarget.ticketRegistry’: There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=casCoreTicketsConfiguration; factoryMethodName=ticketRegistry; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apereo/cas/config/CasCoreTicketsConfiguration.class]] bound.&gt;</p>
<ul>
<li>问题溯源</li>
</ul>
<p><code>org/springframework/spring-beans/5.2.12.RELEASE/spring-beans-5.2.12.RELEASE-sources.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory.java:944</code></p>
<ul>
<li>解决</li>
</ul>
<p>spring.main.allow-bean-definition-overriding: true</p>
<h3 id="org-springframework-boot-context-logging-ClasspathLoggingApplicationListener"><a href="#org-springframework-boot-context-logging-ClasspathLoggingApplicationListener" class="headerlink" title="[org.springframework.boot.context.logging.ClasspathLoggingApplicationListener] - "></a>[org.springframework.boot.context.logging.ClasspathLoggingApplicationListener] - <Application failed to start with classpath: unknown></h3><ul>
<li>问题</li>
</ul>
<p>spring-boot 项目无法启动，无错误提示</p>
<ul>
<li>解决思路</li>
</ul>
<p>我们找到 <code>Application failed to start with classpath: unknown</code> 这句话提示的位置，</p>
<p><code>/Users/sucre/.m2/repository/org/springframework/boot/spring-boot/2.3.7.RELEASE/spring-boot-2.3.7.RELEASE-sources.jar!/org/springframework/boot/context/logging/ClasspathLoggingApplicationListener.java:54</code></p>
<p>打个断点，发现 event 有个 Exception 变量，可以查到具体的原因，手动执行 <code>e.printStackTrace();</code> 就能找出原因所在了</p>
<ul>
<li>解决</li>
</ul>
<p>至于我的问题是，yaml 配置有问题，而且找了很多遇见这种问题的同学，基本都是 yaml 配置错误</p>
<h3 id="VisualVM-如何连接远程-K8S-中的服务"><a href="#VisualVM-如何连接远程-K8S-中的服务" class="headerlink" title="VisualVM 如何连接远程 K8S 中的服务"></a><code>VisualVM</code> 如何连接远程 K8S 中的服务</h3><blockquote>
<p><code>jVisualVM</code> = <code>VisualVM</code></p>
</blockquote>
<ol>
<li><p>首先修改服务启动参数：</p>
<p> ````<br> -Dcom.sun.management.jmxremote<br> -Dcom.sun.management.jmxremote.ssl=false<br> -Dcom.sun.management.jmxremote.authenticate=false<br> -Dcom.sun.management.jmxremote.port=[port]<br> -Dcom.sun.management.jmxremote.rmi.port=[port]<br> -Djava.rmi.server.hostname=localhost</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line">    &gt; `-Djava.rmi.server.hostname` 是否一定要 `localhost` ？</span><br><span class="line">    </span><br><span class="line">2. 如果无法直连 K8S，则开启端口转发</span><br><span class="line"></span><br><span class="line">    ```shell script</span><br><span class="line">    kubectl --kubeconfig [config-file] port-forward svc/[service] [port:port] -n [namespace]</span><br></pre></td></tr></table></figure></li>
<li><p>配置 <code>visualvm</code></p>
</li>
</ol>
<p>文件（F） <code>-&gt;</code> 添加<code>JMX</code>连接… <code>-&gt;</code> 输入 <code>127.0.0.1:[port]</code></p>
<blockquote>
<p>see: <a href="https://www.jianshu.com/p/362b035f36a7">JMX - 远程监控JVM</a></p>
</blockquote>
<h2 id="DDD开源项目"><a href="#DDD开源项目" class="headerlink" title="DDD开源项目"></a>DDD开源项目</h2><ul>
<li><a href="https://github.com/dddplus/dddplus-demo">https://github.com/dddplus/dddplus-demo</a></li>
</ul>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java-tips</title>
    <url>/java/readme/</url>
    <content><![CDATA[<blockquote>
<p>小记：前几天有小伙伴”嘲讽”我，博客里竟然还保留<code>java</code>标签，我当时想的是，不知道具体该如何给文章设置标签，<br>比如<code>java</code>这种语言标签也加上的话，会让标签们变得越来越多。<br>但是，今天遇到一个<code>java</code>下的<a href="https://stackoverflow.com/questions/29216588/how-to-ensure-order-of-processing-in-java8-streams">专业问题</a>，<br>我突然明白，对比<code>SEO</code>、<code>项目管理</code>这种专栏类标签，<code>java</code>也未必不能成为一个专栏，关键在于你怎么运营它，<br>或许，我更应该指定他的版本，比如：java8<br>切记把博客当做流水账一样，导致降低专业性。</p>
</blockquote>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
